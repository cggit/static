<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
  <link rel="dns-prefetch" href="https://github.githubassets.com">
  <link rel="dns-prefetch" href="https://avatars0.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars1.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars2.githubusercontent.com">
  <link rel="dns-prefetch" href="https://avatars3.githubusercontent.com">
  <link rel="dns-prefetch" href="https://github-cloud.s3.amazonaws.com">
  <link rel="dns-prefetch" href="https://user-images.githubusercontent.com/">



  <link crossorigin="anonymous" media="all" integrity="sha512-/YEVWs7BzxfKyUd6zVxjEQcXRWsLbcEjv045Rq8DSoipySmQblhVKxlXLva2GtNd5DhwCxHwW1RM0N9I7S2Vew==" rel="stylesheet" href="https://github.githubassets.com/assets/frameworks-481a47a96965f6706fb41bae0d14b09a.css" />
  
    <link crossorigin="anonymous" media="all" integrity="sha512-UuDKgNf/5qyjHC2IFg8kEkn3j2n+D4ShuvNV5eohEqUPfuPzqAxcd98IqomrgGo/g36tB35YvxoA1CbXgE0iFg==" rel="stylesheet" href="https://github.githubassets.com/assets/github-5362384f9e2512870c388a187eaf4868.css" />
    
    
    
    

  <meta name="viewport" content="width=device-width">
  
  <title>sql.js/sql-wasm.js at master Â· kripken/sql.js</title>
    <meta name="description" content="SQLite compiled to JavaScript through Emscripten. Contribute to kripken/sql.js development by creating an account on GitHub.">
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
  <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
  <meta property="fb:app_id" content="1401488693436528">

    <meta name="twitter:image:src" content="https://avatars1.githubusercontent.com/u/173661?s=400&amp;v=4" /><meta name="twitter:site" content="@github" /><meta name="twitter:card" content="summary" /><meta name="twitter:title" content="kripken/sql.js" /><meta name="twitter:description" content="SQLite compiled to JavaScript through Emscripten. Contribute to kripken/sql.js development by creating an account on GitHub." />
    <meta property="og:image" content="https://avatars1.githubusercontent.com/u/173661?s=400&amp;v=4" /><meta property="og:site_name" content="GitHub" /><meta property="og:type" content="object" /><meta property="og:title" content="kripken/sql.js" /><meta property="og:url" content="https://github.com/kripken/sql.js" /><meta property="og:description" content="SQLite compiled to JavaScript through Emscripten. Contribute to kripken/sql.js development by creating an account on GitHub." />

  <link rel="assets" href="https://github.githubassets.com/">
  <link rel="web-socket" href="wss://live.github.com/_sockets/VjI6NDY4Mjc4NjA5OjEyNTFkNWU3NTk5Y2I5MTA1ZTg4Y2Y2ZjA1ZjljZGRkNmRmMjVmMDhjMGU5MzU4ZmYzMmQ5MDNkOGIxMTk3NzQ=--30eb614b408112dc1db65f2d2805f97ba118e83f">
  <link rel="sudo-modal" href="/sessions/sudo_modal">
  <meta name="request-id" content="D609:7762:1521B1:26DE4C:5DCF221E" data-pjax-transient>


  

  <meta name="selected-link" value="repo_source" data-pjax-transient>

      <meta name="google-site-verification" content="KT5gs8h0wvaagLKAVWq8bbeNwnZZK1r1XQysX3xurLU">
    <meta name="google-site-verification" content="ZzhVyEFwb7w3e0-uOTltm8Jsck2F5StVihD0exw2fsA">
    <meta name="google-site-verification" content="GXs5KoUUkNCoaAZn7wPN-t01Pywp9M3sEjnt_3_ZWPc">

  <meta name="octolytics-host" content="collector.githubapp.com" /><meta name="octolytics-app-id" content="github" /><meta name="octolytics-event-url" content="https://collector.githubapp.com/github-external/browser_event" /><meta name="octolytics-dimension-request_id" content="D609:7762:1521B1:26DE4C:5DCF221E" /><meta name="octolytics-dimension-region_edge" content="iad" /><meta name="octolytics-dimension-region_render" content="iad" /><meta name="octolytics-dimension-ga_id" content="" class="js-octo-ga-id" /><meta name="octolytics-dimension-visitor_id" content="2345988761554525148" /><meta name="octolytics-actor-id" content="1779421" /><meta name="octolytics-actor-login" content="cggit" /><meta name="octolytics-actor-hash" content="0b91ace3a860e02a647bc5b8e1f4bb7c5e59b3be3ceaa2fad334fa3aaf382e5c" />
<meta name="analytics-location" content="/&lt;user-name&gt;/&lt;repo-name&gt;/blob/show" data-pjax-transient="true" />



    <meta name="google-analytics" content="UA-3769691-2">

  <meta class="js-ga-set" name="userId" content="de59e0ed7b0c1a175910177893405f67">

<meta class="js-ga-set" name="dimension1" content="Logged In">



  

      <meta name="hostname" content="github.com">
    <meta name="user-login" content="cggit">

      <meta name="expected-hostname" content="github.com">
    <meta name="js-proxy-site-detection-payload" content="MDk4ODBjYWRhZTZiMmM1MjJkZGQwZDgzMzNhYTY3ZmM2OTBkMmEyOTQ4ZGE5YTQ3MWQyNmRmMTRiMTcwZTk4MHx7InJlbW90ZV9hZGRyZXNzIjoiMTk4LjE2OC40OC4zNSIsInJlcXVlc3RfaWQiOiJENjA5Ojc3NjI6MTUyMUIxOjI2REU0Qzo1RENGMjIxRSIsInRpbWVzdGFtcCI6MTU3Mzg1NTc4MywiaG9zdCI6ImdpdGh1Yi5jb20ifQ==">

    <meta name="enabled-features" content="LAUNCH_PROJECT,ACTIONS_V2_ON_MARKETPLACE,MARKETPLACE_FEATURED_BLOG_POSTS,MARKETPLACE_INVOICED_BILLING,MARKETPLACE_SOCIAL_PROOF_CUSTOMERS,MARKETPLACE_TRENDING_SOCIAL_PROOF,MARKETPLACE_RECOMMENDATIONS,MARKETPLACE_PENDING_INSTALLATIONS,NOTIFY_ON_BLOCK,RELATED_ISSUES,GHE_CLOUD_TRIAL">

  <meta name="html-safe-nonce" content="908fedc434bfa4348485beaedd1d466572fb085a">

  <meta http-equiv="x-pjax-version" content="a24d82d484ab528e3f0db8bcd6034055">
  

      <link href="https://github.com/kripken/sql.js/commits/master.atom" rel="alternate" title="Recent Commits to sql.js:master" type="application/atom+xml">

  <meta name="go-import" content="github.com/kripken/sql.js git https://github.com/kripken/sql.js.git">

  <meta name="octolytics-dimension-user_id" content="173661" /><meta name="octolytics-dimension-user_login" content="kripken" /><meta name="octolytics-dimension-repository_id" content="3556910" /><meta name="octolytics-dimension-repository_nwo" content="kripken/sql.js" /><meta name="octolytics-dimension-repository_public" content="true" /><meta name="octolytics-dimension-repository_is_fork" content="false" /><meta name="octolytics-dimension-repository_network_root_id" content="3556910" /><meta name="octolytics-dimension-repository_network_root_nwo" content="kripken/sql.js" /><meta name="octolytics-dimension-repository_explore_github_marketplace_ci_cta_shown" content="false" />


    <link rel="canonical" href="https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js" data-pjax-transient>


  <meta name="browser-stats-url" content="https://api.github.com/_private/browser/stats">

  <meta name="browser-errors-url" content="https://api.github.com/_private/browser/errors">

  <link rel="mask-icon" href="https://github.githubassets.com/pinned-octocat.svg" color="#000000">
  <link rel="icon" type="image/x-icon" class="js-site-favicon" href="https://github.githubassets.com/favicon.ico">

<meta name="theme-color" content="#1e2327">



  <meta name="webauthn-auth-enabled" content="true">

  <meta name="webauthn-registration-enabled" content="true">

  <link rel="manifest" href="/manifest.json" crossOrigin="use-credentials">

  </head>

  <body class="logged-in env-production emoji-size-boost page-responsive page-blob">
    

  <div class="position-relative js-header-wrapper ">
    <a href="#start-of-content" tabindex="1" class="p-3 bg-blue text-white show-on-focus js-skip-to-content">Skip to content</a>
    <span class="Progress progress-pjax-loader position-fixed width-full js-pjax-loader-bar">
      <span class="progress-pjax-loader-bar top-0 left-0" style="width: 0%;"></span>
    </span>

    
    
    


          <header class="Header js-details-container Details flex-wrap flex-lg-nowrap p-responsive" role="banner">

    <div class="Header-item d-none d-lg-flex">
      <a class="Header-link" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <svg class="octicon octicon-mark-github v-align-middle" height="32" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.013 8.013 0 0016 8c0-4.42-3.58-8-8-8z"/></svg>
</a>

    </div>

    <div class="Header-item d-lg-none">
      <button class="Header-link btn-link js-details-target" type="button" aria-label="Toggle navigation" aria-expanded="false">
        <svg height="24" class="octicon octicon-three-bars" viewBox="0 0 12 16" version="1.1" width="18" aria-hidden="true"><path fill-rule="evenodd" d="M11.41 9H.59C0 9 0 8.59 0 8c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zm0-4H.59C0 5 0 4.59 0 4c0-.59 0-1 .59-1H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1h.01zM.59 11H11.4c.59 0 .59.41.59 1 0 .59 0 1-.59 1H.59C0 13 0 12.59 0 12c0-.59 0-1 .59-1z"/></svg>
      </button>
    </div>

    <div class="Header-item Header-item--full flex-column flex-lg-row width-full flex-order-2 flex-lg-order-none mr-0 mr-lg-3 mt-3 mt-lg-0 Details-content--hidden">
        <div class="header-search flex-self-stretch flex-lg-self-auto mr-0 mr-lg-3 mb-3 mb-lg-0 scoped-search site-scoped-search js-site-search position-relative js-jump-to"
  role="combobox"
  aria-owns="jump-to-results"
  aria-label="Search or jump to"
  aria-haspopup="listbox"
  aria-expanded="false"
>
  <div class="position-relative">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="js-site-search-form" role="search" aria-label="Site" data-scope-type="Repository" data-scope-id="3556910" data-scoped-search-url="/kripken/sql.js/search" data-unscoped-search-url="/search" action="/kripken/sql.js/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="&#x2713;" />
      <label class="form-control input-sm header-search-wrapper p-0 header-search-wrapper-jump-to position-relative d-flex flex-justify-between flex-items-center js-chromeless-input-container">
        <input type="text"
          class="form-control input-sm header-search-input jump-to-field js-jump-to-field js-site-search-focus js-site-search-field is-clearable"
          data-hotkey="s,/"
          name="q"
          value=""
          placeholder="Search or jump toâ¦"
          data-unscoped-placeholder="Search or jump toâ¦"
          data-scoped-placeholder="Search or jump toâ¦"
          autocapitalize="off"
          aria-autocomplete="list"
          aria-controls="jump-to-results"
          aria-label="Search or jump toâ¦"
          data-jump-to-suggestions-path="/_graphql/GetSuggestedNavigationDestinations#csrf-token=hPy2Uo+0lFRPVcPyi87hJHn/t4IVZU6OQy3+q/5sLYb7fz2lQLk07tybmO9wZsweE5Zu/UoxjvtpHAA2zGSPeg=="
          spellcheck="false"
          autocomplete="off"
          >
          <input type="hidden" class="js-site-search-type-field" name="type" >
            <img src="https://github.githubassets.com/images/search-key-slash.svg" alt="" class="mr-2 header-search-key-slash">

            <div class="Box position-absolute overflow-hidden d-none jump-to-suggestions js-jump-to-suggestions-container">
              
<ul class="d-none js-jump-to-suggestions-template-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-suggestion" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0013 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 000-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>
  </a>
</li>

</ul>

<ul class="d-none js-jump-to-no-results-template-container">
  <li class="d-flex flex-justify-center flex-items-center f5 d-none js-jump-to-suggestion p-2">
    <span class="text-gray">No suggested jump to results</span>
  </li>
</ul>

<ul id="jump-to-results" role="listbox" class="p-0 m-0 js-navigation-container jump-to-suggestions-results-container js-jump-to-suggestions-results-container">
  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-scoped-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0013 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 000-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>
  </a>
</li>

  

<li class="d-flex flex-justify-start flex-items-center p-0 f5 navigation-item js-navigation-item js-jump-to-global-search d-none" role="option">
  <a tabindex="-1" class="no-underline d-flex flex-auto flex-items-center jump-to-suggestions-path js-jump-to-suggestion-path js-navigation-open p-2" href="">
    <div class="jump-to-octicon js-jump-to-octicon flex-shrink-0 mr-2 text-center d-none">
      <svg height="16" width="16" class="octicon octicon-repo flex-shrink-0 js-jump-to-octicon-repo d-none" title="Repository" aria-label="Repository" viewBox="0 0 12 16" version="1.1" role="img"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-project flex-shrink-0 js-jump-to-octicon-project d-none" title="Project" aria-label="Project" viewBox="0 0 15 16" version="1.1" role="img"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      <svg height="16" width="16" class="octicon octicon-search flex-shrink-0 js-jump-to-octicon-search d-none" title="Search" aria-label="Search" viewBox="0 0 16 16" version="1.1" role="img"><path fill-rule="evenodd" d="M15.7 13.3l-3.81-3.83A5.93 5.93 0 0013 6c0-3.31-2.69-6-6-6S1 2.69 1 6s2.69 6 6 6c1.3 0 2.48-.41 3.47-1.11l3.83 3.81c.19.2.45.3.7.3.25 0 .52-.09.7-.3a.996.996 0 000-1.41v.01zM7 10.7c-2.59 0-4.7-2.11-4.7-4.7 0-2.59 2.11-4.7 4.7-4.7 2.59 0 4.7 2.11 4.7 4.7 0 2.59-2.11 4.7-4.7 4.7z"/></svg>
    </div>

    <img class="avatar mr-2 flex-shrink-0 js-jump-to-suggestion-avatar d-none" alt="" aria-label="Team" src="" width="28" height="28">

    <div class="jump-to-suggestion-name js-jump-to-suggestion-name flex-auto overflow-hidden text-left no-wrap css-truncate css-truncate-target">
    </div>

    <div class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none js-jump-to-badge-search">
      <span class="js-jump-to-badge-search-text-default d-none" aria-label="in this repository">
        In this repository
      </span>
      <span class="js-jump-to-badge-search-text-global d-none" aria-label="in all of GitHub">
        All GitHub
      </span>
      <span aria-hidden="true" class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>

    <div aria-hidden="true" class="border rounded-1 flex-shrink-0 bg-gray px-1 text-gray-light ml-1 f6 d-none d-on-nav-focus js-jump-to-badge-jump">
      Jump to
      <span class="d-inline-block ml-1 v-align-middle">âµ</span>
    </div>
  </a>
</li>


    <li class="d-flex flex-justify-center flex-items-center p-0 f5 js-jump-to-suggestion">
      <img src="https://github.githubassets.com/images/spinners/octocat-spinner-128.gif" alt="Octocat Spinner Icon" class="m-2" width="28">
    </li>
</ul>

            </div>
      </label>
</form>  </div>
</div>


      <nav class="d-flex flex-column flex-lg-row flex-self-stretch flex-lg-self-auto" aria-label="Global">
    <a class="Header-link d-block d-lg-none py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" data-ga-click="Header, click, Nav menu - item:dashboard:user" aria-label="Dashboard" href="/dashboard">
      Dashboard
</a>
  <a class="js-selected-navigation-item Header-link  mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" data-hotkey="g p" data-ga-click="Header, click, Nav menu - item:pulls context:user" aria-label="Pull requests you created" data-selected-links="/pulls /pulls/assigned /pulls/mentioned /pulls" href="/pulls">
    Pull requests
</a>
  <a class="js-selected-navigation-item Header-link  mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" data-hotkey="g i" data-ga-click="Header, click, Nav menu - item:issues context:user" aria-label="Issues you created" data-selected-links="/issues /issues/assigned /issues/mentioned /issues" href="/issues">
    Issues
</a>
    <div class="mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15">
      <a class="js-selected-navigation-item Header-link" data-ga-click="Header, click, Nav menu - item:marketplace context:user" data-octo-click="marketplace_click" data-octo-dimensions="location:nav_bar" data-selected-links=" /marketplace" href="/marketplace">
        Marketplace
</a>      

    </div>

  <a class="js-selected-navigation-item Header-link  mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" data-ga-click="Header, click, Nav menu - item:explore" data-selected-links="/explore /trending /trending/developers /integrations /integrations/feature/code /integrations/feature/collaborate /integrations/feature/ship showcases showcases_search showcases_landing /explore" href="/explore">
    Explore
</a>


    <a class="Header-link d-block d-lg-none mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15" href="https://github.com/cggit">
      <img class="avatar" height="20" width="20" alt="@cggit" src="https://avatars0.githubusercontent.com/u/1779421?s=60&amp;v=4" />
      cggit
</a>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="PTZwBrOX4V2/pMXDxX0WsoFC+mahslY4YoIthFnrR+kZbpNcyqKzOts+8n+/TxvRiJAGUTYyFOFe850a5Ai6gw==" />
      <button type="submit" class="Header-link mr-0 mr-lg-3 py-2 py-lg-0 border-top border-lg-top-0 border-white-fade-15 d-lg-none btn-link d-block width-full text-left" data-ga-click="Header, sign out, icon:logout" style="padding-left: 2px;">
        <svg class="octicon octicon-sign-out v-align-middle" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 9V7H8V5h4V3l4 3-4 3zm-2 3H6V3L2 1h8v3h1V1c0-.55-.45-1-1-1H1C.45 0 0 .45 0 1v11.38c0 .39.22.73.55.91L6 16.01V13h4c.55 0 1-.45 1-1V8h-1v4z"/></svg>
        Sign out
      </button>
</form></nav>

    </div>

    <div class="Header-item Header-item--full flex-justify-center d-lg-none position-relative">
      <div class="css-truncate css-truncate-target width-fit position-absolute left-0 right-0 text-center">
              <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
    <a class="Header-link" href="/kripken">kripken</a>
    /
    <a class="Header-link" href="/kripken/sql.js">sql.js</a>

</div>
    </div>


    <div class="Header-item mr-0 mr-lg-3 flex-order-1 flex-lg-order-none">
      

    <a aria-label="You have unread notifications" class="Header-link notification-indicator position-relative tooltipped tooltipped-sw js-socket-channel js-notification-indicator" data-hotkey="g n" data-ga-click="Header, go to notifications, icon:unread" data-channel="notification-changed:1779421" href="/notifications">
        <span class="mail-status unread"></span>
        <svg class="octicon octicon-bell" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 12v1H0v-1l.73-.58c.77-.77.81-2.55 1.19-4.42C2.69 3.23 6 2 6 2c0-.55.45-1 1-1s1 .45 1 1c0 0 3.39 1.23 4.16 5 .38 1.88.42 3.66 1.19 4.42l.66.58H14zm-7 4c1.11 0 2-.89 2-2H5c0 1.11.89 2 2 2z"/></svg>
</a>
    </div>


    <div class="Header-item position-relative d-none d-lg-flex">
      <details class="details-overlay details-reset">
  <summary class="Header-link"
      aria-label="Create newâ¦"
      data-ga-click="Header, create new, icon:add">
    <svg class="octicon octicon-plus" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 9H7v5H5V9H0V7h5V2h2v5h5v2z"/></svg> <span class="dropdown-caret"></span>
  </summary>
  <details-menu class="dropdown-menu dropdown-menu-sw">
    
<a role="menuitem" class="dropdown-item" href="/new" data-ga-click="Header, create new repository">
  New repository
</a>

  <a role="menuitem" class="dropdown-item" href="/new/import" data-ga-click="Header, import a repository">
    Import repository
  </a>

<a role="menuitem" class="dropdown-item" href="https://gist.github.com/" data-ga-click="Header, create new gist">
  New gist
</a>

  <a role="menuitem" class="dropdown-item" href="/organizations/new" data-ga-click="Header, create new organization">
    New organization
  </a>


  <div role="none" class="dropdown-divider"></div>
  <div class="dropdown-header">
    <span title="kripken/sql.js">This repository</span>
  </div>
    <a role="menuitem" class="dropdown-item" href="/kripken/sql.js/issues/new" data-ga-click="Header, create new issue" data-skip-pjax>
      New issue
    </a>


  </details-menu>
</details>

    </div>

    <div class="Header-item position-relative mr-0 d-none d-lg-flex">
      
  <details class="details-overlay details-reset js-feature-preview-indicator-container" data-feature-preview-indicator-src="/users/cggit/feature_preview/indicator_check.json">

  <summary class="Header-link"
    aria-label="View profile and more"
    data-ga-click="Header, show menu, icon:avatar">
    <img alt="@cggit" class="avatar" src="https://avatars3.githubusercontent.com/u/1779421?s=40&amp;v=4" height="20" width="20">
      <span class="feature-preview-indicator js-feature-preview-indicator" hidden></span>
    <span class="dropdown-caret"></span>
  </summary>
  <details-menu class="dropdown-menu dropdown-menu-sw mt-2" style="width: 180px">
    <div class="header-nav-current-user css-truncate"><a role="menuitem" class="no-underline user-profile-link px-3 pt-2 pb-2 mb-n2 mt-n1 d-block" href="/cggit" data-ga-click="Header, go to profile, text:Signed in as">Signed in as <strong class="css-truncate-target">cggit</strong></a></div>
    <div role="none" class="dropdown-divider"></div>

      <div class="pl-3 pr-3 f6 user-status-container js-user-status-context pb-1" data-url="/users/status?compact=1&amp;link_mentions=0&amp;truncate=1">
        
<div class="js-user-status-container
    user-status-compact rounded-1 px-2 py-1 mt-2
    border
  " data-team-hovercards-enabled>
  <details class="js-user-status-details details-reset details-overlay details-overlay-dark">
    <summary class="btn-link btn-block link-gray no-underline js-toggle-user-status-edit toggle-user-status-edit "
      role="menuitem" data-hydro-click="{&quot;event_type&quot;:&quot;user_profile.click&quot;,&quot;payload&quot;:{&quot;profile_user_id&quot;:173661,&quot;target&quot;:&quot;EDIT_USER_STATUS&quot;,&quot;user_id&quot;:1779421,&quot;client_id&quot;:&quot;546218073.1535384540&quot;,&quot;originating_request_id&quot;:&quot;D609:7762:1521B1:26DE4C:5DCF221E&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;}}" data-hydro-click-hmac="ef1573555c92a6b49ad53f6eb2b631d02c4cb550231017d79dac378e5bb08ec9">
      <div class="d-flex">
        <div class="f6 lh-condensed user-status-header
          d-inline-block v-align-middle
            user-status-emoji-only-header circle
            pr-2
"
            style="max-width: 29px"
          >
          <div class="user-status-emoji-container flex-shrink-0 mr-1 mt-1 lh-condensed-ultra v-align-bottom" style="">
            <svg class="octicon octicon-smiley" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4.81 12.81a6.72 6.72 0 01-2.17 1.45c-.83.36-1.72.53-2.64.53-.92 0-1.81-.17-2.64-.53-.81-.34-1.55-.83-2.17-1.45a6.773 6.773 0 01-1.45-2.17A6.59 6.59 0 011.21 8c0-.92.17-1.81.53-2.64.34-.81.83-1.55 1.45-2.17.62-.62 1.36-1.11 2.17-1.45A6.59 6.59 0 018 1.21c.92 0 1.81.17 2.64.53.81.34 1.55.83 2.17 1.45.62.62 1.11 1.36 1.45 2.17.36.83.53 1.72.53 2.64 0 .92-.17 1.81-.53 2.64-.34.81-.83 1.55-1.45 2.17zM4 6.8v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2H5.2C4.53 8 4 7.47 4 6.8zm5 0v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2h-.59C9.53 8 9 7.47 9 6.8zm4 3.2c-.72 1.88-2.91 3-5 3s-4.28-1.13-5-3c-.14-.39.23-1 .66-1h8.59c.41 0 .89.61.75 1z"/></svg>
          </div>
        </div>
        <div class="
          d-inline-block v-align-middle
          
          
           css-truncate css-truncate-target 
           user-status-message-wrapper f6"
           style="line-height: 20px;" >
          <div class="d-inline-block text-gray-dark v-align-text-top text-left">
              <span class="text-gray ml-2">Set status</span>
          </div>
        </div>
      </div>
    </summary>
    <details-dialog class="details-dialog rounded-1 anim-fade-in fast Box Box--overlay" role="dialog" tabindex="-1">
      <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="position-relative flex-auto js-user-status-form" action="/users/status?compact=1&amp;link_mentions=0&amp;truncate=1" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="_method" value="put" /><input type="hidden" name="authenticity_token" value="BTciUve8bxgSdi4iffgn65+gMT4/E9ol+ar/Ofiio6gc8blQoicu9D9Vdr+Pl98HUVe/lTHS/4yTw1x5hxmBYQ==" />
        <div class="Box-header bg-gray border-bottom p-3">
          <button class="Box-btn-octicon js-toggle-user-status-edit btn-octicon float-right" type="reset" aria-label="Close dialog" data-close-dialog>
            <svg class="octicon octicon-x" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
          </button>
          <h3 class="Box-title f5 text-bold text-gray-dark">Edit status</h3>
        </div>
        <input type="hidden" name="emoji" class="js-user-status-emoji-field" value="">
        <input type="hidden" name="organization_id" class="js-user-status-org-id-field" value="">
        <div class="px-3 py-2 text-gray-dark">
          <div class="js-characters-remaining-container position-relative mt-2">
            <div class="input-group d-table form-group my-0 js-user-status-form-group">
              <span class="input-group-button d-table-cell v-align-middle" style="width: 1%">
                <button type="button" aria-label="Choose an emoji" class="btn-outline btn js-toggle-user-status-emoji-picker btn-open-emoji-picker p-0">
                  <span class="js-user-status-original-emoji" hidden></span>
                  <span class="js-user-status-custom-emoji"></span>
                  <span class="js-user-status-no-emoji-icon" >
                    <svg class="octicon octicon-smiley" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 0C3.58 0 0 3.58 0 8s3.58 8 8 8 8-3.58 8-8-3.58-8-8-8zm4.81 12.81a6.72 6.72 0 01-2.17 1.45c-.83.36-1.72.53-2.64.53-.92 0-1.81-.17-2.64-.53-.81-.34-1.55-.83-2.17-1.45a6.773 6.773 0 01-1.45-2.17A6.59 6.59 0 011.21 8c0-.92.17-1.81.53-2.64.34-.81.83-1.55 1.45-2.17.62-.62 1.36-1.11 2.17-1.45A6.59 6.59 0 018 1.21c.92 0 1.81.17 2.64.53.81.34 1.55.83 2.17 1.45.62.62 1.11 1.36 1.45 2.17.36.83.53 1.72.53 2.64 0 .92-.17 1.81-.53 2.64-.34.81-.83 1.55-1.45 2.17zM4 6.8v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2H5.2C4.53 8 4 7.47 4 6.8zm5 0v-.59c0-.66.53-1.19 1.2-1.19h.59c.66 0 1.19.53 1.19 1.19v.59c0 .67-.53 1.2-1.19 1.2h-.59C9.53 8 9 7.47 9 6.8zm4 3.2c-.72 1.88-2.91 3-5 3s-4.28-1.13-5-3c-.14-.39.23-1 .66-1h8.59c.41 0 .89.61.75 1z"/></svg>
                  </span>
                </button>
              </span>
              <text-expander keys=": @" data-mention-url="/autocomplete/user-suggestions" data-emoji-url="/autocomplete/emoji">
                <input
                  type="text"
                  autocomplete="off"
                  data-no-org-url="/autocomplete/user-suggestions"
                  data-org-url="/suggestions?mention_suggester=1"
                  data-maxlength="80"
                  class="d-table-cell width-full form-control js-user-status-message-field js-characters-remaining-field"
                  placeholder="What's happening?"
                  name="message"
                  value=""
                  aria-label="What is your current status?">
              </text-expander>
              <div class="error">Could not update your status, please try again.</div>
            </div>
            <div style="margin-left: 53px" class="my-1 text-small label-characters-remaining js-characters-remaining" data-suffix="remaining" hidden>
              80 remaining
            </div>
          </div>
          <include-fragment class="js-user-status-emoji-picker" data-url="/users/status/emoji"></include-fragment>
          <div class="overflow-auto ml-n3 mr-n3 px-3 border-bottom" style="max-height: 33vh">
            <div class="user-status-suggestions js-user-status-suggestions collapsed overflow-hidden">
              <h4 class="f6 text-normal my-3">Suggestions:</h4>
              <div class="mx-3 mt-2 clearfix">
                  <div class="float-left col-6">
                      <button type="button" value=":palm_tree:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="palm_tree" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f334.png">ð´</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left" style="border-left: 1px solid transparent">
                          On vacation
                        </div>
                      </button>
                      <button type="button" value=":face_with_thermometer:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="face_with_thermometer" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f912.png">ð¤</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left" style="border-left: 1px solid transparent">
                          Out sick
                        </div>
                      </button>
                  </div>
                  <div class="float-left col-6">
                      <button type="button" value=":house:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="house" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3e0.png">ð </g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left" style="border-left: 1px solid transparent">
                          Working from home
                        </div>
                      </button>
                      <button type="button" value=":dart:" class="d-flex flex-items-baseline flex-items-stretch lh-condensed f6 btn-link link-gray no-underline js-predefined-user-status mb-1">
                        <div class="emoji-status-width mr-2 v-align-middle js-predefined-user-status-emoji">
                          <g-emoji alias="dart" fallback-src="https://github.githubassets.com/images/icons/emoji/unicode/1f3af.png">ð¯</g-emoji>
                        </div>
                        <div class="d-flex flex-items-center no-underline js-predefined-user-status-message ws-normal text-left" style="border-left: 1px solid transparent">
                          Focusing
                        </div>
                      </button>
                  </div>
              </div>
            </div>
            <div class="user-status-limited-availability-container">
              <div class="form-checkbox my-0">
                <input type="checkbox" name="limited_availability" value="1" class="js-user-status-limited-availability-checkbox" data-default-message="I may be slow to respond." aria-describedby="limited-availability-help-text-truncate-true-compact-true" id="limited-availability-truncate-true-compact-true">
                <label class="d-block f5 text-gray-dark mb-1" for="limited-availability-truncate-true-compact-true">
                  Busy
                </label>
                <p class="note" id="limited-availability-help-text-truncate-true-compact-true">
                  When others mention you, assign you, or request your review,
                  GitHub will let them know that you have limited availability.
                </p>
              </div>
            </div>
          </div>
            

<div class="d-inline-block f5 mr-2 pt-3 pb-2" >
  <div class="d-inline-block mr-1">
    Clear status
  </div>

  <details class="js-user-status-expire-drop-down f6 dropdown details-reset details-overlay d-inline-block mr-2">
    <summary class="f5 btn-link link-gray-dark border px-2 py-1 rounded-1" aria-haspopup="true">
      <div class="js-user-status-expiration-interval-selected d-inline-block v-align-baseline">
        Never
      </div>
      <div class="dropdown-caret"></div>
    </summary>

    <ul class="dropdown-menu dropdown-menu-se pl-0 overflow-auto" style="width: 220px; max-height: 15.5em">
      <li>
        <button type="button" class="btn-link dropdown-item js-user-status-expire-button ws-normal" title="Never">
          <span class="d-inline-block text-bold mb-1">Never</span>
          <div class="f6 lh-condensed">Keep this status until you clear your status or edit your status.</div>
        </button>
      </li>
      <li class="dropdown-divider" role="none"></li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="in 30 minutes" value="2019-11-15T17:39:43-05:00">
            in 30 minutes
          </button>
        </li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="in 1 hour" value="2019-11-15T18:09:43-05:00">
            in 1 hour
          </button>
        </li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="in 4 hours" value="2019-11-15T21:09:43-05:00">
            in 4 hours
          </button>
        </li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="today" value="2019-11-15T23:59:59-05:00">
            today
          </button>
        </li>
        <li>
          <button type="button" class="btn-link dropdown-item ws-normal js-user-status-expire-button" title="this week" value="2019-11-17T23:59:59-05:00">
            this week
          </button>
        </li>
    </ul>
  </details>
  <input class="js-user-status-expiration-date-input" type="hidden" name="expires_at" value="">
</div>

          <include-fragment class="js-user-status-org-picker" data-url="/users/status/organizations"></include-fragment>
        </div>
        <div class="d-flex flex-items-center flex-justify-between p-3 border-top">
          <button type="submit" disabled class="width-full btn btn-primary mr-2 js-user-status-submit">
            Set status
          </button>
          <button type="button" disabled class="width-full js-clear-user-status-button btn ml-2 ">
            Clear status
          </button>
        </div>
</form>    </details-dialog>
  </details>
</div>

      </div>
      <div role="none" class="dropdown-divider"></div>


    <a role="menuitem" class="dropdown-item" href="/cggit" data-ga-click="Header, go to profile, text:your profile">Your profile</a>

    <a role="menuitem" class="dropdown-item" href="/cggit?tab=repositories" data-ga-click="Header, go to repositories, text:your repositories">Your repositories</a>

    <a role="menuitem" class="dropdown-item" href="/cggit?tab=projects" data-ga-click="Header, go to projects, text:your projects">Your projects</a>

    <a role="menuitem" class="dropdown-item" href="/cggit?tab=stars" data-ga-click="Header, go to starred repos, text:your stars">Your stars</a>
      <a role="menuitem" class="dropdown-item" href="https://gist.github.com/mine" data-ga-click="Header, your gists, text:your gists">Your gists</a>





    <div role="none" class="dropdown-divider"></div>
      
<div id="feature-enrollment-toggle" class="hide-sm hide-md feature-preview-details position-relative">
  <button
    type="button"
    class="dropdown-item btn-link"
    role="menuitem"
    data-feature-preview-trigger-url="/users/cggit/feature_previews"
    data-feature-preview-close-details="{&quot;event_type&quot;:&quot;feature_preview.clicks.close_modal&quot;,&quot;payload&quot;:{&quot;client_id&quot;:&quot;546218073.1535384540&quot;,&quot;originating_request_id&quot;:&quot;D609:7762:1521B1:26DE4C:5DCF221E&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:1779421}}"
    data-feature-preview-close-hmac="401e77763b26880b1f24b8d6b3bd6b402db641519894d3e79794b191f204c333"
    data-hydro-click="{&quot;event_type&quot;:&quot;feature_preview.clicks.open_modal&quot;,&quot;payload&quot;:{&quot;link_location&quot;:&quot;user_dropdown&quot;,&quot;client_id&quot;:&quot;546218073.1535384540&quot;,&quot;originating_request_id&quot;:&quot;D609:7762:1521B1:26DE4C:5DCF221E&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:1779421}}"
    data-hydro-click-hmac="3b02044e6908401877b17e3df872e228f54cb62f54f4aff058e1025cfb0bdf85"
  >
    Feature preview
  </button>
    <span class="feature-preview-indicator js-feature-preview-indicator" hidden></span>
</div>

    <a role="menuitem" class="dropdown-item" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
    <a role="menuitem" class="dropdown-item" href="/settings/profile" data-ga-click="Header, go to settings, icon:settings">Settings</a>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="logout-form" action="/logout" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="nhVCOSSogVFSrLjdTPozZ+9m3RQa8tmI/xai6y88RU66TaFjXZ3TNjY2j2E2yD4E5rQhI41ym1HDZxJ1kt+4JA==" />
      
      <button type="submit" class="dropdown-item dropdown-signout" data-ga-click="Header, sign out, icon:logout" role="menuitem">
        Sign out
      </button>
</form>  </details-menu>
</details>

    </div>

  </header>

      

  </div>

  <div id="start-of-content" class="show-on-focus"></div>


    <div id="js-flash-container">

</div>



  <div class="application-main " data-commit-hovercards-enabled>
        <div itemscope itemtype="http://schema.org/SoftwareSourceCode" class="">
    <main  >
      


  

      <div class="border-bottom shelf intro-shelf js-notice mb-0 pb-4">
  <div class="width-full container">
    <div class="width-full mx-auto shelf-content">
      <h2 class="shelf-title">Learn Git and GitHub without any code!</h2>
      <p class="shelf-lead">
          Using the Hello World guide, youâll start a branch, write comments, and open a pull request.
      </p>
      <a class="btn btn-primary shelf-cta" target="_blank" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;READ_GUIDE&quot;,&quot;repository_id&quot;:3556910,&quot;client_id&quot;:&quot;546218073.1535384540&quot;,&quot;originating_request_id&quot;:&quot;D609:7762:1521B1:26DE4C:5DCF221E&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:1779421}}" data-hydro-click-hmac="a15b0494d681be1817fa73a5801128c1d7c3139bc76fa36cb4df46156c5dc559" href="https://guides.github.com/activities/hello-world/">Read the guide</a>
    </div>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="shelf-dismiss js-notice-dismiss" action="/dashboard/dismiss_bootcamp" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="_method" value="delete" /><input type="hidden" name="authenticity_token" value="8ioEGY7pEDfx2cI4zcCVExGiygY4PCYnjt9gyk741KI07AxsYMQvxLJBORk2VGqEk8jX/dgTrU1OqnsuiZ7Ykw==" />
      <button name="button" type="submit" class="mr-1 close-button tooltipped tooltipped-w" aria-label="Hide this notice forever" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;DISMISS_BANNER&quot;,&quot;repository_id&quot;:3556910,&quot;client_id&quot;:&quot;546218073.1535384540&quot;,&quot;originating_request_id&quot;:&quot;D609:7762:1521B1:26DE4C:5DCF221E&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:1779421}}" data-hydro-click-hmac="a2cce8bbdb9cdc0b8b22838e3a3dfda9d1859e1e2b723712b5f89a374a340af7">
        <svg aria-label="Hide this notice forever" class="octicon octicon-x v-align-text-top" viewBox="0 0 12 16" version="1.1" width="12" height="16" role="img"><path fill-rule="evenodd" d="M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48L7.48 8z"/></svg>
</button></form>  </div>
</div>











  <div class="pagehead repohead instapaper_ignore readability-menu experiment-repo-nav pt-0 pt-lg-4 ">
    <div class="repohead-details-container clearfix container-lg p-responsive d-none d-lg-block">

      <ul class="pagehead-actions">



    <li >
      
    <details class="dropdown details-reset details-overlay d-inline-block float-left"
      data-deferred-details-content-url="/kripken/sql.js/used_by_contents"
    >
      <summary class="btn btn-sm btn-with-count" data-menu-button>
        <svg class="octicon octicon-package v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M1 4.27v7.47c0 .45.3.84.75.97l6.5 1.73c.16.05.34.05.5 0l6.5-1.73c.45-.13.75-.52.75-.97V4.27c0-.45-.3-.84-.75-.97l-6.5-1.74a1.4 1.4 0 00-.5 0L1.75 3.3c-.45.13-.75.52-.75.97zm7 9.09l-6-1.59V5l6 1.61v6.75zM2 4l2.5-.67L11 5.06l-2.5.67L2 4zm13 7.77l-6 1.59V6.61l2-.55V8.5l2-.53V5.53L15 5v6.77zm-2-7.24L6.5 2.8l2-.53L15 4l-2 .53z"/></svg>
        Used by
        <div class="dropdown-caret"></div>
      </summary>
      <include-fragment>
        <div class="dropdown-menu dropdown-menu-s p-3 text-center" style="width:360px;">
          <img width="32" height="32" alt="Loading..." class="my-0" src="https://github.githubassets.com/images/spinners/octocat-spinner-64.gif" />
          <p class="pt-1 m-0 f5 text-gray-light">
            Loading dependents...
          </p>
        </div>
      </include-fragment>
    </details>
    <a class="social-count"
      href="/kripken/sql.js/network/dependents?package_id=UGFja2FnZS0xMzgwNDgwOQ%3D%3D"
      aria-label="1671 repositories depend on this package"
    >
      1.7k
    </a>

    </li>

  <li>
    
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form data-remote="true" class="clearfix js-social-form js-social-container" action="/notifications/subscribe" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="1LuuMNHLt4yedd8Dhg4jpXdSPbXlwdXqBIDZUrd6O9IfUK7C3DHXjapQl+CBicLUWgXW4j0JSyV+H/2iJ7hnRQ==" />      <input type="hidden" name="repository_id" value="3556910">

      <details class="details-reset details-overlay select-menu float-left">
        <summary class="select-menu-button float-left btn btn-sm btn-with-count" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;WATCH_BUTTON&quot;,&quot;repository_id&quot;:3556910,&quot;client_id&quot;:&quot;546218073.1535384540&quot;,&quot;originating_request_id&quot;:&quot;D609:7762:1521B1:26DE4C:5DCF221E&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:1779421}}" data-hydro-click-hmac="ca6dc558cc6d787966d8009c560b8cacbe728bd81f42a8569826333305701eef" data-ga-click="Repository, click Watch settings, action:blob#show">          <span data-menu-button>
              <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
              Watch
          </span>
</summary>        <details-menu
          class="select-menu-modal position-absolute mt-5"
          style="z-index: 99;">
          <div class="select-menu-header">
            <span class="select-menu-title">Notifications</span>
          </div>
          <div class="select-menu-list">
            <button type="submit" name="do" value="included" class="select-menu-item width-full" aria-checked="true" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Not watching</span>
                <span class="description">Be notified only when participating or @mentioned.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                  Watch
                </span>
              </div>
            </button>

            <button type="submit" name="do" value="release_only" class="select-menu-item width-full" aria-checked="false" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Releases only</span>
                <span class="description">Be notified of new releases, and when participating or @mentioned.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                  Unwatch releases
                </span>
              </div>
            </button>

            <button type="submit" name="do" value="subscribed" class="select-menu-item width-full" aria-checked="false" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Watching</span>
                <span class="description">Be notified of all conversations.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-eye v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8.06 2C3 2 0 8 0 8s3 6 8.06 6C13 14 16 8 16 8s-3-6-7.94-6zM8 12c-2.2 0-4-1.78-4-4 0-2.2 1.8-4 4-4 2.22 0 4 1.8 4 4 0 2.22-1.78 4-4 4zm2-4c0 1.11-.89 2-2 2-1.11 0-2-.89-2-2 0-1.11.89-2 2-2 1.11 0 2 .89 2 2z"/></svg>
                  Unwatch
                </span>
              </div>
            </button>

            <button type="submit" name="do" value="ignore" class="select-menu-item width-full" aria-checked="false" role="menuitemradio">
              <svg class="octicon octicon-check select-menu-item-icon" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M12 5l-8 8-4-4 1.5-1.5L4 10l6.5-6.5L12 5z"/></svg>
              <div class="select-menu-item-text">
                <span class="select-menu-item-heading">Ignoring</span>
                <span class="description">Never be notified.</span>
                <span class="hidden-select-button-text" data-menu-button-contents>
                  <svg class="octicon octicon-mute v-align-text-bottom" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 2.81v10.38c0 .67-.81 1-1.28.53L3 10H1c-.55 0-1-.45-1-1V7c0-.55.45-1 1-1h2l3.72-3.72C7.19 1.81 8 2.14 8 2.81zm7.53 3.22l-1.06-1.06-1.97 1.97-1.97-1.97-1.06 1.06L11.44 8 9.47 9.97l1.06 1.06 1.97-1.97 1.97 1.97 1.06-1.06L13.56 8l1.97-1.97z"/></svg>
                  Stop ignoring
                </span>
              </div>
            </button>
          </div>
        </details-menu>
      </details>
        <a class="social-count js-social-count"
          href="/kripken/sql.js/watchers"
          aria-label="219 users are watching this repository">
          219
        </a>
</form>
  </li>

  <li>
      <div class="js-toggler-container js-social-container starring-container ">
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="starred js-social-form" action="/kripken/sql.js/unstar" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="3o/9kFk/i8lS5CKkoctj6knUiB9iGa3oIHLGZtQvwl8T+tclIqMyBiD+zlTqKWJdq357Esp51XSX4p9tb3p+1A==" />
      <input type="hidden" name="context" value="repository"></input>
      <button type="submit" class="btn btn-sm btn-with-count js-toggler-target" aria-label="Unstar this repository" title="Unstar kripken/sql.js" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;UNSTAR_BUTTON&quot;,&quot;repository_id&quot;:3556910,&quot;client_id&quot;:&quot;546218073.1535384540&quot;,&quot;originating_request_id&quot;:&quot;D609:7762:1521B1:26DE4C:5DCF221E&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:1779421}}" data-hydro-click-hmac="b8664b7684e1e40aa9e8c85618731e4c5e783098542f37c4a06dcada9fbab817" data-ga-click="Repository, click unstar button, action:blob#show; text:Unstar">        <svg class="octicon octicon-star v-align-text-bottom" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
        Unstar
</button>        <a class="social-count js-social-count" href="/kripken/sql.js/stargazers"
           aria-label="5928 users starred this repository">
           5.9k
        </a>
</form>
    <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="unstarred js-social-form" action="/kripken/sql.js/star" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="wT98S/7Psp/s84GDp5DmDM5hK3eE3h/c3MU+jkmprS5GWY8ppJAu72Lrc+hvFpbQplGtQPfPAlfyi9nHLzOuAw==" />
      <input type="hidden" name="context" value="repository"></input>
      <button type="submit" class="btn btn-sm btn-with-count js-toggler-target" aria-label="Unstar this repository" title="Star kripken/sql.js" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;STAR_BUTTON&quot;,&quot;repository_id&quot;:3556910,&quot;client_id&quot;:&quot;546218073.1535384540&quot;,&quot;originating_request_id&quot;:&quot;D609:7762:1521B1:26DE4C:5DCF221E&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:1779421}}" data-hydro-click-hmac="98d4c7a4ac875514f7c4a6e186a2f471b6f1a736ffe2e10d53ea9f6028495dff" data-ga-click="Repository, click star button, action:blob#show; text:Star">        <svg class="octicon octicon-star v-align-text-bottom" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74L14 6z"/></svg>
        Star
</button>        <a class="social-count js-social-count" href="/kripken/sql.js/stargazers"
           aria-label="5928 users starred this repository">
          5.9k
        </a>
</form>  </div>

  </li>

  <li>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="btn-with-count" action="/kripken/sql.js/fork" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="uMcZXH4K1JPQvK5Q2q8T5deOacLAh1b4aBaPopiuwV1tM8GkKmBkcvny9HNFAnd9cTF6uU3Z7CxzOofJWGziLw==" />
            <button class="btn btn-sm btn-with-count" data-hydro-click="{&quot;event_type&quot;:&quot;repository.click&quot;,&quot;payload&quot;:{&quot;target&quot;:&quot;FORK_BUTTON&quot;,&quot;repository_id&quot;:3556910,&quot;client_id&quot;:&quot;546218073.1535384540&quot;,&quot;originating_request_id&quot;:&quot;D609:7762:1521B1:26DE4C:5DCF221E&quot;,&quot;originating_url&quot;:&quot;https://github.com/kripken/sql.js/blob/master/dist/sql-wasm.js&quot;,&quot;referrer&quot;:&quot;https://github.com/kripken/sql.js/tree/master/dist&quot;,&quot;user_id&quot;:1779421}}" data-hydro-click-hmac="d79e2b35c7c7c3b67ba85b3c76cfabf9e0010920fa06fdf3b3fd9d77258783d6" data-ga-click="Repository, show fork modal, action:blob#show; text:Fork" type="submit" title="Fork your own copy of kripken/sql.js to your account" aria-label="Fork your own copy of kripken/sql.js to your account">              <svg class="octicon octicon-repo-forked v-align-text-bottom" viewBox="0 0 10 16" version="1.1" width="10" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M8 1a1.993 1.993 0 00-1 3.72V6L5 8 3 6V4.72A1.993 1.993 0 002 1a1.993 1.993 0 00-1 3.72V6.5l3 3v1.78A1.993 1.993 0 005 15a1.993 1.993 0 001-3.72V9.5l3-3V4.72A1.993 1.993 0 008 1zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3 10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zm3-10c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
              Fork
</button></form>
    <a href="/kripken/sql.js/network/members" class="social-count"
       aria-label="697 users forked this repository">
      697
    </a>
  </li>
</ul>

      <h1 class="public ">
    <svg class="octicon octicon-repo" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M4 9H3V8h1v1zm0-3H3v1h1V6zm0-2H3v1h1V4zm0-2H3v1h1V2zm8-1v12c0 .55-.45 1-1 1H6v2l-1.5-1.5L3 16v-2H1c-.55 0-1-.45-1-1V1c0-.55.45-1 1-1h10c.55 0 1 .45 1 1zm-1 10H1v2h2v-1h3v1h5v-2zm0-10H2v9h9V1z"/></svg>
  <span class="author" itemprop="author"><a class="url fn" rel="author" data-hovercard-type="user" data-hovercard-url="/hovercards?user_id=173661" data-octo-click="hovercard-link-click" data-octo-dimensions="link_type:self" href="/kripken">kripken</a></span><!--
--><span class="path-divider">/</span><!--
--><strong itemprop="name"><a data-pjax="#js-repo-pjax-container" href="/kripken/sql.js">sql.js</a></strong>
  

</h1>

    </div>
    
<nav class="hx_reponav reponav js-repo-nav js-sidenav-container-pjax container-lg p-responsive d-none d-lg-block"
     itemscope
     itemtype="http://schema.org/BreadcrumbList"
    aria-label="Repository"
     data-pjax="#js-repo-pjax-container">

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a class="js-selected-navigation-item selected reponav-item" itemprop="url" data-hotkey="g c" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /kripken/sql.js" href="/kripken/sql.js">
      <svg class="octicon octicon-code" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M9.5 3L8 4.5 11.5 8 8 11.5 9.5 13 14 8 9.5 3zm-5 0L0 8l4.5 5L6 11.5 2.5 8 6 4.5 4.5 3z"/></svg>
      <span itemprop="name">Code</span>
      <meta itemprop="position" content="1">
</a>  </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" data-hotkey="g i" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /kripken/sql.js/issues" href="/kripken/sql.js/issues">
        <svg class="octicon octicon-issue-opened" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 011.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"/></svg>
        <span itemprop="name">Issues</span>
        <span class="Counter">75</span>
        <meta itemprop="position" content="2">
</a>    </span>

  <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
    <a data-hotkey="g p" itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /kripken/sql.js/pulls" href="/kripken/sql.js/pulls">
      <svg class="octicon octicon-git-pull-request" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 11.28V5c-.03-.78-.34-1.47-.94-2.06C9.46 2.35 8.78 2.03 8 2H7V0L4 3l3 3V4h1c.27.02.48.11.69.31.21.2.3.42.31.69v6.28A1.993 1.993 0 0010 15a1.993 1.993 0 001-3.72zm-1 2.92c-.66 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2zM4 3c0-1.11-.89-2-2-2a1.993 1.993 0 00-1 3.72v6.56A1.993 1.993 0 002 15a1.993 1.993 0 001-3.72V4.72c.59-.34 1-.98 1-1.72zm-.8 10c0 .66-.55 1.2-1.2 1.2-.65 0-1.2-.55-1.2-1.2 0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2zM2 4.2C1.34 4.2.8 3.65.8 3c0-.65.55-1.2 1.2-1.2.65 0 1.2.55 1.2 1.2 0 .65-.55 1.2-1.2 1.2z"/></svg>
      <span itemprop="name">Pull requests</span>
      <span class="Counter">9</span>
      <meta itemprop="position" content="3">
</a>  </span>


    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement" class="position-relative float-left">
      <a data-hotkey="g w" data-skip-pjax="true" class="js-selected-navigation-item reponav-item" data-selected-links="repo_actions /kripken/sql.js/actions" href="/kripken/sql.js/actions">
        <svg class="octicon octicon-play" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M14 8A7 7 0 110 8a7 7 0 0114 0zm-8.223 3.482l4.599-3.066a.5.5 0 000-.832L5.777 4.518A.5.5 0 005 4.934v6.132a.5.5 0 00.777.416z"/></svg>
        Actions
</a>
    </span>

    <a data-hotkey="g b" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /kripken/sql.js/projects" href="/kripken/sql.js/projects">
      <svg class="octicon octicon-project" viewBox="0 0 15 16" version="1.1" width="15" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M10 12h3V2h-3v10zm-4-2h3V2H6v8zm-4 4h3V2H2v12zm-1 1h13V1H1v14zM14 0H1a1 1 0 00-1 1v14a1 1 0 001 1h13a1 1 0 001-1V1a1 1 0 00-1-1z"/></svg>
      Projects
      <span class="Counter" >0</span>
</a>

    <a class="js-selected-navigation-item reponav-item" data-hotkey="g w" data-selected-links="repo_wiki /kripken/sql.js/wiki" href="/kripken/sql.js/wiki">
      <svg class="octicon octicon-book" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M3 5h4v1H3V5zm0 3h4V7H3v1zm0 2h4V9H3v1zm11-5h-4v1h4V5zm0 2h-4v1h4V7zm0 2h-4v1h4V9zm2-6v9c0 .55-.45 1-1 1H9.5l-1 1-1-1H2c-.55 0-1-.45-1-1V3c0-.55.45-1 1-1h5.5l1 1 1-1H15c.55 0 1 .45 1 1zm-8 .5L7.5 3H2v9h6V3.5zm7-.5H9.5l-.5.5V12h6V3z"/></svg>
      Wiki
</a>
    <a data-skip-pjax="true" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy code_scanning /kripken/sql.js/security/advisories" href="/kripken/sql.js/security/advisories">
      <svg class="octicon octicon-shield" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 2l7-2 7 2v6.02C14 12.69 8.69 16 7 16c-1.69 0-7-3.31-7-7.98V2zm1 .75L7 1l6 1.75v5.268C13 12.104 8.449 15 7 15c-1.449 0-6-2.896-6-6.982V2.75zm1 .75L7 2v12c-1.207 0-5-2.482-5-5.985V3.5z"/></svg>
      Security
</a>
    <a class="js-selected-navigation-item reponav-item" data-selected-links="repo_graphs repo_contributors dependency_graph pulse people /kripken/sql.js/pulse" href="/kripken/sql.js/pulse">
      <svg class="octicon octicon-graph" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M16 14v1H0V0h1v14h15zM5 13H3V8h2v5zm4 0H7V3h2v10zm4 0h-2V6h2v7z"/></svg>
      Insights
</a>

</nav>

  <div class="reponav-wrapper reponav-small d-lg-none">
  <nav class="reponav js-reponav text-center no-wrap"
       itemscope
       itemtype="http://schema.org/BreadcrumbList">

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a class="js-selected-navigation-item selected reponav-item" itemprop="url" aria-current="page" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches repo_packages /kripken/sql.js" href="/kripken/sql.js">
        <span itemprop="name">Code</span>
        <meta itemprop="position" content="1">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_issues repo_labels repo_milestones /kripken/sql.js/issues" href="/kripken/sql.js/issues">
          <span itemprop="name">Issues</span>
          <span class="Counter">75</span>
          <meta itemprop="position" content="2">
</a>      </span>

    <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_pulls checks /kripken/sql.js/pulls" href="/kripken/sql.js/pulls">
        <span itemprop="name">Pull requests</span>
        <span class="Counter">9</span>
        <meta itemprop="position" content="3">
</a>    </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_projects new_repo_project repo_project /kripken/sql.js/projects" href="/kripken/sql.js/projects">
          <span itemprop="name">Projects</span>
          <span class="Counter">0</span>
          <meta itemprop="position" content="4">
</a>      </span>

      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="repo_wiki /kripken/sql.js/wiki" href="/kripken/sql.js/wiki">
          <span itemprop="name">Wiki</span>
          <meta itemprop="position" content="5">
</a>      </span>

      <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="security alerts policy code_scanning /kripken/sql.js/security/advisories" href="/kripken/sql.js/security/advisories">
        <span itemprop="name">Security</span>
        <meta itemprop="position" content="6">
</a>
      <a class="js-selected-navigation-item reponav-item" data-selected-links="pulse /kripken/sql.js/pulse" href="/kripken/sql.js/pulse">
        Pulse
</a>
      <span itemscope itemtype="http://schema.org/ListItem" itemprop="itemListElement">
        <a itemprop="url" class="js-selected-navigation-item reponav-item" data-selected-links="community /kripken/sql.js/community" href="/kripken/sql.js/community">
          Community
</a>      </span>

  </nav>
</div>


  </div>
<div class="container-lg clearfix new-discussion-timeline experiment-repo-nav  p-responsive">
  <div class="repository-content ">

    
    


  


    <a class="d-none js-permalink-shortcut" data-hotkey="y" href="/kripken/sql.js/blob/dda3553f9b71fd91fe45dd5488a081c5e24e8e65/dist/sql-wasm.js">Permalink</a>

    <!-- blob contrib key: blob_contributors:v21:2eead35c3d3cf619e3f2ecc0371b7b4c -->
      

    <div class="d-flex flex-items-start flex-shrink-0 pb-3 flex-column flex-md-row">
      <span class="d-flex flex-justify-between width-full width-md-auto">
        
<details class="details-reset details-overlay select-menu branch-select-menu  hx_rsm" id="branch-select-menu">
  <summary class="btn btn-sm select-menu-button css-truncate"
           data-hotkey="w"
           title="Switch branches or tags">
    <i>Branch:</i>
    <span class="css-truncate-target" data-menu-button>master</span>
  </summary>

  <details-menu class="select-menu-modal hx_rsm-modal position-absolute" style="z-index: 99;" src="/kripken/sql.js/ref-list/master/dist/sql-wasm.js?source_action=show&amp;source_controller=blob" preload>
    <include-fragment class="select-menu-loading-overlay anim-pulse">
      <svg height="32" class="octicon octicon-octoface" viewBox="0 0 16 16" version="1.1" width="32" aria-hidden="true"><path fill-rule="evenodd" d="M14.7 5.34c.13-.32.55-1.59-.13-3.31 0 0-1.05-.33-3.44 1.3-1-.28-2.07-.32-3.13-.32s-2.13.04-3.13.32c-2.39-1.64-3.44-1.3-3.44-1.3-.68 1.72-.26 2.99-.13 3.31C.49 6.21 0 7.33 0 8.69 0 13.84 3.33 15 7.98 15S16 13.84 16 8.69c0-1.36-.49-2.48-1.3-3.35zM8 14.02c-3.3 0-5.98-.15-5.98-3.35 0-.76.38-1.48 1.02-2.07 1.07-.98 2.9-.46 4.96-.46 2.07 0 3.88-.52 4.96.46.65.59 1.02 1.3 1.02 2.07 0 3.19-2.68 3.35-5.98 3.35zM5.49 9.01c-.66 0-1.2.8-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.54-1.78-1.2-1.78zm5.02 0c-.66 0-1.2.79-1.2 1.78s.54 1.79 1.2 1.79c.66 0 1.2-.8 1.2-1.79s-.53-1.78-1.2-1.78z"/></svg>
    </include-fragment>
  </details-menu>
</details>

        <div class="BtnGroup flex-shrink-0 d-md-none">
          <a href="/kripken/sql.js/find/master"
                class="js-pjax-capture-input btn btn-sm BtnGroup-item"
                data-pjax
                data-hotkey="t">
            Find file
          </a>
          <clipboard-copy value="dist/sql-wasm.js" class="btn btn-sm BtnGroup-item">
            Copy path
          </clipboard-copy>
        </div>
      </span>
      <h2 id="blob-path" class="breadcrumb flex-auto min-width-0 text-normal flex-md-self-center ml-md-2 mr-md-3 my-2 my-md-0">
        <span class="js-repo-root text-bold"><span class="js-path-segment"><a data-pjax="true" href="/kripken/sql.js"><span>sql.js</span></a></span></span><span class="separator">/</span><span class="js-path-segment"><a data-pjax="true" href="/kripken/sql.js/tree/master/dist"><span>dist</span></a></span><span class="separator">/</span><strong class="final-path">sql-wasm.js</strong>
      </h2>

      <div class="BtnGroup flex-shrink-0 d-none d-md-inline-block">
        <a href="/kripken/sql.js/find/master"
              class="js-pjax-capture-input btn btn-sm BtnGroup-item"
              data-pjax
              data-hotkey="t">
          Find file
        </a>
        <clipboard-copy value="dist/sql-wasm.js" class="btn btn-sm BtnGroup-item">
          Copy path
        </clipboard-copy>
      </div>
    </div>



    <include-fragment src="/kripken/sql.js/contributors/master/dist/sql-wasm.js" class="Box Box--condensed commit-loader">
      <div class="Box-body bg-blue-light f6">
        Fetching contributors&hellip;
      </div>

      <div class="Box-body d-flex flex-items-center" >
          <img alt="" class="loader-loading mr-2" src="https://github.githubassets.com/images/spinners/octocat-spinner-32-EAF2F5.gif" width="16" height="16" />
        <span class="text-red h6 loader-error">Cannot retrieve contributors at this time</span>
      </div>
</include-fragment>




    <div class="Box mt-3 position-relative">
      
<div class="Box-header py-2 d-flex flex-column flex-shrink-0 flex-md-row flex-md-items-center">
  <div class="text-mono f6 flex-auto pr-3 flex-order-2 flex-md-order-1 mt-2 mt-md-0">

      211 lines (193 sloc)
      <span class="file-info-divider"></span>
    55.3 KB
  </div>

  <div class="d-flex py-1 py-md-0 flex-auto flex-order-1 flex-md-order-2 flex-sm-grow-0 flex-justify-between">

    <div class="BtnGroup">
      <a id="raw-url" class="btn btn-sm BtnGroup-item" href="/kripken/sql.js/raw/master/dist/sql-wasm.js">Raw</a>
        <a class="btn btn-sm js-update-url-with-hash BtnGroup-item" data-hotkey="b" href="/kripken/sql.js/blame/master/dist/sql-wasm.js">Blame</a>
      <a rel="nofollow" class="btn btn-sm BtnGroup-item" href="/kripken/sql.js/commits/master/dist/sql-wasm.js">History</a>
    </div>


    <div>
            <a class="btn-octicon tooltipped tooltipped-nw"
               href="https://desktop.github.com"
               aria-label="Open this file in GitHub Desktop"
               data-ga-click="Repository, open with desktop, type:mac">
                <svg class="octicon octicon-device-desktop" viewBox="0 0 16 16" version="1.1" width="16" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M15 2H1c-.55 0-1 .45-1 1v9c0 .55.45 1 1 1h5.34c-.25.61-.86 1.39-2.34 2h8c-1.48-.61-2.09-1.39-2.34-2H15c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 9H1V3h14v8z"/></svg>
            </a>

            <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form js-update-url-with-hash" action="/kripken/sql.js/edit/master/dist/sql-wasm.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="gteF+iLZdodgEpP/dYjllpPDLg0I0IOSOo8LUFP5h/6Gr3iT8brc2ao5ThbH2XSoE9TaMAHyyMN+MFbyXA8GBg==" />
              <button class="btn-octicon tooltipped tooltipped-nw" type="submit"
                aria-label="Fork this project and edit the file" data-hotkey="e" data-disable-with>
                <svg class="octicon octicon-pencil" viewBox="0 0 14 16" version="1.1" width="14" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M0 12v3h3l8-8-3-3-8 8zm3 2H1v-2h1v1h1v1zm10.3-9.3L12 6 9 3l1.3-1.3a.996.996 0 011.41 0l1.59 1.59c.39.39.39 1.02 0 1.41z"/></svg>
              </button>
</form>
          <!-- '"` --><!-- </textarea></xmp> --></option></form><form class="inline-form" action="/kripken/sql.js/delete/master/dist/sql-wasm.js" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="&#x2713;" /><input type="hidden" name="authenticity_token" value="vq84U3svFaa6c7mWy3TIj0LV1FhpOq6IlqJKoZFTrJGQ8JU5VVIB7EQKy3aJPFTHK9HxtUEgwUCHWQYq6s3k8Q==" />
            <button class="btn-octicon btn-octicon-danger tooltipped tooltipped-nw" type="submit"
              aria-label="Fork this project and delete the file" data-disable-with>
              <svg class="octicon octicon-trashcan" viewBox="0 0 12 16" version="1.1" width="12" height="16" aria-hidden="true"><path fill-rule="evenodd" d="M11 2H9c0-.55-.45-1-1-1H5c-.55 0-1 .45-1 1H2c-.55 0-1 .45-1 1v1c0 .55.45 1 1 1v9c0 .55.45 1 1 1h7c.55 0 1-.45 1-1V5c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm-1 12H3V5h1v8h1V5h1v8h1V5h1v8h1V5h1v9zm1-10H2V3h9v1z"/></svg>
            </button>
</form>    </div>
  </div>
</div>




      

  <div itemprop="text" class="Box-body p-0 blob-wrapper data type-javascript ">
      
<table class="highlight tab-size js-file-line-container" data-tab-size="8">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> We are modularizing this manually because the current modularize setting in Emscripten has some issues:</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> https://github.com/kripken/emscripten/issues/5820</span></td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> In addition, When you use emcc&#39;s modularization, it still expects to export a global object called `Module`,</span></td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> which is able to be used/called before the WASM is loaded.</span></td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> The modularization below exports a promise that loads and resolves to the actual sql.js module.</span></td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> That way, this module can&#39;t be used before the WASM is finished loading.</span></td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> We are going to define a function that a user will call to start loading initializing our Sql.js library</span></td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> However, that function might be called multiple times, and on subsequent calls, we don&#39;t actually want it to instantiate a new instance of the Module</span></td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> Instead, we want to return the previously loaded module</span></td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code blob-code-inner js-file-line"><span class="pl-c"><span class="pl-c">//</span> TODO: Make this not declare a global if used in the browser</span></td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> initSqlJsPromise <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">initSqlJs</span> <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">moduleConfig</span>) {</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code blob-code-inner js-file-line">    <span class="pl-k">if</span> (initSqlJsPromise){</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code blob-code-inner js-file-line">      <span class="pl-k">return</span> initSqlJsPromise;</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code blob-code-inner js-file-line">    }</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code blob-code-inner js-file-line">    <span class="pl-c"><span class="pl-c">//</span> If we&#39;re here, we&#39;ve never called this function before</span></td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code blob-code-inner js-file-line">    initSqlJsPromise <span class="pl-k">=</span> <span class="pl-k">new</span> <span class="pl-en">Promise</span>((<span class="pl-smi">resolveModule</span>, <span class="pl-smi">reject</span>) <span class="pl-k">=&gt;</span> {</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> We are modularizing this manually because the current modularize setting in Emscripten has some issues:</span></td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> https://github.com/kripken/emscripten/issues/5820</span></td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> The way to affect the loading of emcc compiled modules is to create a variable called `Module` and add</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> properties to it, like `preRun`, `postRun`, etc</span></td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> We are using that to get notified when the WASM has finished loading.</span></td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Only then will we return our promise</span></td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> If they passed in a moduleConfig object, use that</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Otherwise, initialize Module to the empty object</span></td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> Module <span class="pl-k">=</span> <span class="pl-k">typeof</span> moduleConfig <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> moduleConfig <span class="pl-k">:</span> {};</td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> EMCC only allows for a single onAbort function (not an array of functions)</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> So if the user defined their own onAbort function, we remember it and call it</span></td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code blob-code-inner js-file-line">        <span class="pl-k">var</span> originalOnAbortFunction <span class="pl-k">=</span> Module[<span class="pl-s"><span class="pl-pds">&#39;</span>onAbort<span class="pl-pds">&#39;</span></span>];</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code blob-code-inner js-file-line">        Module[<span class="pl-s"><span class="pl-pds">&#39;</span>onAbort<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> <span class="pl-k">function</span> (<span class="pl-smi">errorThatCausedAbort</span>) {</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">reject</span>(<span class="pl-k">new</span> <span class="pl-en">Error</span>(errorThatCausedAbort));</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code blob-code-inner js-file-line">            <span class="pl-k">if</span> (originalOnAbortFunction){</td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code blob-code-inner js-file-line">              <span class="pl-en">originalOnAbortFunction</span>(errorThatCausedAbort);</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code blob-code-inner js-file-line">            }</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code blob-code-inner js-file-line">        };</td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code blob-code-inner js-file-line">        Module[<span class="pl-s"><span class="pl-pds">&#39;</span>postRun<span class="pl-pds">&#39;</span></span>] <span class="pl-k">=</span> Module[<span class="pl-s"><span class="pl-pds">&#39;</span>postRun<span class="pl-pds">&#39;</span></span>] <span class="pl-k">||</span> [];</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code blob-code-inner js-file-line">        Module[<span class="pl-s"><span class="pl-pds">&#39;</span>postRun<span class="pl-pds">&#39;</span></span>].<span class="pl-c1">push</span>(<span class="pl-k">function</span> () {</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code blob-code-inner js-file-line">            <span class="pl-c"><span class="pl-c">//</span> When Emscripted calls postRun, this promise resolves with the built Module</span></td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code blob-code-inner js-file-line">            <span class="pl-en">resolveModule</span>(Module);</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code blob-code-inner js-file-line">        });</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code blob-code-inner js-file-line">
</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> There is a section of code in the emcc-generated code below that looks like this:</span></td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> (Note that this is lowercase `module`)</span></td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> if (typeof module !== &#39;undefined&#39;) {</span></td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span>     module[&#39;exports&#39;] = Module;</span></td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> }</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> When that runs, it&#39;s going to overwrite our own modularization export efforts in shell-post.js!</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> The only way to tell emcc not to emit it is to pass the MODULARIZE=1 or MODULARIZE_INSTANCE=1 flags,</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> but that carries with it additional unnecessary baggage/bugs we don&#39;t want either.</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> So, we have three options:</span></td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> 1) We undefine `module`</span></td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> 2) We remember what `module[&#39;exports&#39;]` was at the beginning of this function and we restore it later</span></td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> 3) We write a script to remove those lines of code as part of the Make process.</span></td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span></span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> Since those are the only lines of code that care about module, we will undefine it. It&#39;s the most straightforward</span></td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> of the options, and has the side effect of reducing emcc&#39;s efforts to modify the module if its output were to change in the future.</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> That&#39;s a nice side effect since we&#39;re handling the modularization efforts ourselves</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code blob-code-inner js-file-line">        <span class="pl-c1">module</span> <span class="pl-k">=</span> <span class="pl-c1">undefined</span>;</td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code blob-code-inner js-file-line">        </td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> The emcc-generated code and shell-post.js code goes below,</span></td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code blob-code-inner js-file-line">        <span class="pl-c"><span class="pl-c">//</span> meaning that all of it runs inside of this promise. If anything throws an exception, our promise will abort</span></td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> f;f<span class="pl-k">||</span>(f<span class="pl-k">=</span><span class="pl-k">typeof</span> Module <span class="pl-k">!==</span> <span class="pl-s"><span class="pl-pds">&#39;</span>undefined<span class="pl-pds">&#39;</span></span> <span class="pl-k">?</span> Module <span class="pl-k">:</span> {});</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> <span class="pl-en">ua</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">4</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span>{};<span class="pl-k">var</span> <span class="pl-en">d</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">jb</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">db</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">this</span>.<span class="pl-smi">Hb</span><span class="pl-k">=</span>[]}<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">bind</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">jb</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Statement closed<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-c1">reset</span>();<span class="pl-k">return</span> <span class="pl-c1">Array</span>.<span class="pl-en">isArray</span>(a)<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-en">cc</span>(a)<span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-en">dc</span>(a)};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">step</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">jb</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Statement closed<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-k">switch</span>(a<span class="pl-k">=</span><span class="pl-en">ec</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>)){<span class="pl-k">case</span> <span class="pl-smi">c</span>.<span class="pl-smi">Zb</span>:<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">case</span> <span class="pl-smi">c</span>.<span class="pl-c1">DONE</span>:<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">default</span>:<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">db</span>.<span class="pl-en">handleError</span>(a)}};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">kc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">++</span>);<span class="pl-k">return</span> <span class="pl-en">fc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,a)};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">lc</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">++</span>);<span class="pl-k">return</span> <span class="pl-en">hc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,a)};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getBlob</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">++</span>);<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">ic</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,a);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">jc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,a);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(c);<span class="pl-k">for</span>(a<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c<span class="pl-k">?</span>b<span class="pl-k">&lt;</span>c<span class="pl-k">:</span>b<span class="pl-k">&gt;</span>c;a<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c<span class="pl-k">?</span><span class="pl-k">++</span>b<span class="pl-k">:</span><span class="pl-k">--</span>b)e[a]<span class="pl-k">=</span>l[d<span class="pl-k">+</span>a];<span class="pl-k">return</span> e};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">get</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,d;<span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">bind</span>(a)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">step</span>();<span class="pl-k">var</span> e<span class="pl-k">=</span>[];a<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-en">rb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>);<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d<span class="pl-k">?</span>b<span class="pl-k">&lt;</span>d<span class="pl-k">:</span>b<span class="pl-k">&gt;</span>d;a<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d<span class="pl-k">?</span><span class="pl-k">++</span>b<span class="pl-k">:</span><span class="pl-k">--</span>b)<span class="pl-k">switch</span>(<span class="pl-en">kc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,a)){<span class="pl-k">case</span> <span class="pl-smi">c</span>.<span class="pl-smi">Yb</span>:<span class="pl-k">case</span> <span class="pl-smi">c</span>.<span class="pl-c1">FLOAT</span>:<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-en">kc</span>(a));<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-smi">c</span>.<span class="pl-smi">$b</span>:<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-en">lc</span>(a));<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-smi">c</span>.<span class="pl-smi">Xb</span>:<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-c1">this</span>.<span class="pl-en">getBlob</span>(a));</td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-smi">e</span>.<span class="pl-c1">push</span>(<span class="pl-c1">null</span>)}<span class="pl-k">return</span> e};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getColumnNames</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a,b;<span class="pl-k">var</span> c<span class="pl-k">=</span>[];<span class="pl-k">var</span> d<span class="pl-k">=</span>a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-en">rb</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>);<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b<span class="pl-k">?</span>a<span class="pl-k">&lt;</span>b<span class="pl-k">:</span>a<span class="pl-k">&gt;</span>b;d<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b<span class="pl-k">?</span><span class="pl-k">++</span>a<span class="pl-k">:</span><span class="pl-k">--</span>a)<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(<span class="pl-en">lc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,d));<span class="pl-k">return</span> c};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getAsObject</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">get</span>(a);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">getColumnNames</span>();<span class="pl-k">var</span> g<span class="pl-k">=</span>{};a<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;a<span class="pl-k">=</span><span class="pl-k">++</span>b){<span class="pl-k">var</span> wa<span class="pl-k">=</span>e[a];g[wa]<span class="pl-k">=</span>d[a]}<span class="pl-k">return</span> g};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">bind</span>(a);<span class="pl-c1">this</span>.<span class="pl-en">step</span>();<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-c1">reset</span>()};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">hc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;<span class="pl-c1">null</span><span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">++</span>);a<span class="pl-k">=</span><span class="pl-en">aa</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">Hb</span>.<span class="pl-c1">push</span>(c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ba</span>(a));<span class="pl-c1">this</span>.<span class="pl-smi">db</span>.<span class="pl-en">handleError</span>(<span class="pl-en">J</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,b,c,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-c1">0</span>))};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">bc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;<span class="pl-c1">null</span><span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">++</span>);<span class="pl-c1">this</span>.<span class="pl-smi">Hb</span>.<span class="pl-c1">push</span>(c<span class="pl-k">=</span><span class="pl-en">ba</span>(a));<span class="pl-c1">this</span>.<span class="pl-smi">db</span>.<span class="pl-en">handleError</span>(<span class="pl-en">S</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,b,c,<span class="pl-smi">a</span>.<span class="pl-c1">length</span>,<span class="pl-c1">0</span>))};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">fc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">++</span>);<span class="pl-c1">this</span>.<span class="pl-smi">db</span>.<span class="pl-en">handleError</span>((a<span class="pl-k">===</span>(a<span class="pl-k">|</span><span class="pl-c1">0</span>)<span class="pl-k">?</span>mc<span class="pl-k">:</span>nc)(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,b,a))};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">ec</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">++</span>);<span class="pl-en">S</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">Ob</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">null</span><span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">qb</span><span class="pl-k">++</span>);<span class="pl-k">switch</span>(<span class="pl-k">typeof</span> a){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>:<span class="pl-c1">this</span>.<span class="pl-en">hc</span>(a,b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>:<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span>:<span class="pl-c1">this</span>.<span class="pl-en">fc</span>(a<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span>,b);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>:<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>a)<span class="pl-c1">this</span>.<span class="pl-en">ec</span>(b);<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>)<span class="pl-c1">this</span>.<span class="pl-en">bc</span>(a,b);<span class="pl-k">else</span> <span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Wrong API use : tried to bind a value of an unknown type (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>).<span class="pl-pds">&quot;</span></span>;}};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">dc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-k">for</span>(b <span class="pl-k">in</span> a){<span class="pl-k">var</span> c<span class="pl-k">=</span>a[b];<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">oc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>,b);<span class="pl-c1">0</span><span class="pl-k">!==</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">this</span>.<span class="pl-en">Ob</span>(c,d)}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">cc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c;<span class="pl-k">var</span> d<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">&lt;</span>c;d<span class="pl-k">=</span><span class="pl-k">++</span>b){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[d];<span class="pl-c1">this</span>.<span class="pl-en">Ob</span>(e,d<span class="pl-k">+</span><span class="pl-c1">1</span>)}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">reset</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">freemem</span>();<span class="pl-k">return</span> <span class="pl-en">pc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>)<span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">Bb</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">qc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>)<span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">Bb</span>};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">freemem</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a;a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">this</span>.<span class="pl-smi">Hb</span>.<span class="pl-c1">pop</span>();)<span class="pl-en">ca</span>(a);<span class="pl-k">return</span> <span class="pl-c1">null</span>};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">free</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-c1">this</span>.<span class="pl-en">freemem</span>();<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">rc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>)<span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">Bb</span>;<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">db</span>.<span class="pl-smi">Fb</span>[<span class="pl-c1">this</span>.<span class="pl-smi">jb</span>];<span class="pl-c1">this</span>.<span class="pl-smi">jb</span><span class="pl-k">=</span>ja;<span class="pl-k">return</span> a};<span class="pl-k">return</span> a}();<span class="pl-k">var</span> <span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-c1">filename</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>dbfile_<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>(<span class="pl-c1">4294967295</span><span class="pl-k">*</span><span class="pl-c1">Math</span>.<span class="pl-c1">random</span>()<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span>a){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">filename</span>,d<span class="pl-k">=</span>c<span class="pl-k">?</span><span class="pl-en">n</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>,c)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span><span class="pl-en">da</span>(<span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-k">!</span><span class="pl-c1">0</span>);d<span class="pl-k">=</span><span class="pl-en">ea</span>(d,(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-c1">438</span>)<span class="pl-k">&amp;</span><span class="pl-c1">4095</span><span class="pl-k">|</span><span class="pl-c1">32768</span>,<span class="pl-c1">0</span>);<span class="pl-k">if</span>(a){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a){<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span>),k<span class="pl-k">=</span><span class="pl-c1">0</span>,m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;k<span class="pl-k">&lt;</span>m;<span class="pl-k">++</span>k)e[k]<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(k);a<span class="pl-k">=</span>e}<span class="pl-en">fa</span>(d,c<span class="pl-k">|</span><span class="pl-c1">146</span>);e<span class="pl-k">=</span><span class="pl-en">p</span>(d,<span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>);<span class="pl-en">ha</span>(e,a,<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span>,<span class="pl-c1">0</span>,<span class="pl-k">void</span> <span class="pl-c1">0</span>);</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code blob-code-inner js-file-line"><span class="pl-en">ia</span>(e);<span class="pl-en">fa</span>(d,c)}}<span class="pl-c1">this</span>.<span class="pl-en">handleError</span>(<span class="pl-en">g</span>(<span class="pl-c1">this</span>.<span class="pl-c1">filename</span>,b));<span class="pl-c1">this</span>.<span class="pl-smi">db</span><span class="pl-k">=</span><span class="pl-en">q</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>);<span class="pl-en">sc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">db</span>);<span class="pl-c1">this</span>.<span class="pl-smi">Fb</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">rb</span><span class="pl-k">=</span>{}}<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">run</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">db</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Database closed<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(c){a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">prepare</span>(a,c);<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-en">step</span>()}<span class="pl-k">finally</span>{<span class="pl-smi">a</span>.<span class="pl-en">free</span>()}}<span class="pl-k">else</span> <span class="pl-c1">this</span>.<span class="pl-en">handleError</span>(<span class="pl-en">m</span>(<span class="pl-c1">this</span>.<span class="pl-smi">db</span>,a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,b));<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">exec</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> c;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">this</span>.<span class="pl-smi">db</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Database closed<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">ka</span>();<span class="pl-k">try</span>{<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-en">la</span>(a)<span class="pl-k">+</span><span class="pl-c1">1</span>,k<span class="pl-k">=</span><span class="pl-en">h</span>(g);<span class="pl-en">t</span>(a,l,k,g);<span class="pl-k">var</span> m<span class="pl-k">=</span>k;<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-c1">4</span>);<span class="pl-k">for</span>(c<span class="pl-k">=</span>[];<span class="pl-en">q</span>(m,<span class="pl-s"><span class="pl-pds">&quot;</span>i8<span class="pl-pds">&quot;</span></span>)<span class="pl-k">!==</span>ja;){<span class="pl-en">ma</span>(b);<span class="pl-en">ma</span>(v);<span class="pl-c1">this</span>.<span class="pl-en">handleError</span>(<span class="pl-en">K</span>(<span class="pl-c1">this</span>.<span class="pl-smi">db</span>,m,<span class="pl-k">-</span><span class="pl-c1">1</span>,b,v));<span class="pl-k">var</span> wa<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code blob-code-inner js-file-line"><span class="pl-en">q</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>);m<span class="pl-k">=</span><span class="pl-en">q</span>(v,<span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(wa<span class="pl-k">!==</span>ja){<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">var</span> <span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>(wa,<span class="pl-c1">this</span>);<span class="pl-k">try</span>{<span class="pl-k">for</span>(;<span class="pl-c1">J</span>.<span class="pl-en">step</span>();)<span class="pl-c1">null</span><span class="pl-k">===</span>r<span class="pl-k">&amp;&amp;</span>(r<span class="pl-k">=</span>{columns<span class="pl-k">:</span><span class="pl-c1">J</span>.<span class="pl-en">getColumnNames</span>(),values<span class="pl-k">:</span>[]},<span class="pl-smi">c</span>.<span class="pl-c1">push</span>(r)),<span class="pl-smi">r</span>.<span class="pl-smi">values</span>.<span class="pl-c1">push</span>(<span class="pl-c1">J</span>.<span class="pl-c1">get</span>())}<span class="pl-k">finally</span>{<span class="pl-c1">J</span>.<span class="pl-en">free</span>()}}}<span class="pl-k">return</span> c}<span class="pl-k">finally</span>{<span class="pl-en">na</span>(e)}};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">each</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>c,c<span class="pl-k">=</span>b,b<span class="pl-k">=</span><span class="pl-k">void</span> <span class="pl-c1">0</span>);a<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-en">prepare</span>(a,b);<span class="pl-k">try</span>{<span class="pl-k">for</span>(;<span class="pl-smi">a</span>.<span class="pl-en">step</span>();)<span class="pl-en">c</span>(<span class="pl-smi">a</span>.<span class="pl-en">getAsObject</span>())}<span class="pl-k">finally</span>{<span class="pl-smi">a</span>.<span class="pl-en">free</span>()}<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> d)<span class="pl-k">return</span> <span class="pl-en">d</span>()};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">prepare</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-en">ma</span>(b);<span class="pl-c1">this</span>.<span class="pl-en">handleError</span>(<span class="pl-en">v</span>(<span class="pl-c1">this</span>.<span class="pl-smi">db</span>,a,<span class="pl-k">-</span><span class="pl-c1">1</span>,b,ja));a<span class="pl-k">=</span><span class="pl-en">q</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(a<span class="pl-k">===</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code blob-code-inner js-file-line">ja)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Nothing to prepare<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">d</span>(a,<span class="pl-c1">this</span>);<span class="pl-c1">null</span><span class="pl-k">!=</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-en">bind</span>(c);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">Fb</span>[a]<span class="pl-k">=</span>e};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>export<span class="pl-pds">&quot;</span></span>]<span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">Fb</span>;<span class="pl-k">for</span>(e <span class="pl-k">in</span> c){<span class="pl-k">var</span> d<span class="pl-k">=</span>c[e];<span class="pl-smi">d</span>.<span class="pl-en">free</span>()}d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rb</span>;<span class="pl-k">for</span>(e <span class="pl-k">in</span> d)c<span class="pl-k">=</span>d[e],u[c<span class="pl-k">-</span>oa]<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">rb</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-en">handleError</span>(<span class="pl-en">k</span>(<span class="pl-c1">this</span>.<span class="pl-smi">db</span>));d<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">filename</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span>e<span class="pl-k">=</span>{encoding<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>binary<span class="pl-pds">&quot;</span></span>};<span class="pl-smi">e</span>.<span class="pl-smi">flags</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">flags</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">e</span>.<span class="pl-c1">encoding</span><span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-c1">encoding</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>binary<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utf8<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-c1">encoding</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>binary<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-smi">e</span>.<span class="pl-c1">encoding</span>)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&#39;</span>Invalid encoding type &quot;<span class="pl-pds">&#39;</span></span><span class="pl-k">+</span><span class="pl-smi">e</span>.<span class="pl-c1">encoding</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&#39;</span>&quot;<span class="pl-pds">&#39;</span></span>);c<span class="pl-k">=</span><span class="pl-en">p</span>(d,<span class="pl-smi">e</span>.<span class="pl-smi">flags</span>);d<span class="pl-k">=</span><span class="pl-en">pa</span>(d).<span class="pl-c1">size</span>;<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(d);</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code blob-code-inner js-file-line"><span class="pl-en">qa</span>(c,m,<span class="pl-c1">0</span>,d,<span class="pl-c1">0</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>utf8<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-c1">encoding</span><span class="pl-k">?</span>a<span class="pl-k">=</span><span class="pl-en">ra</span>(m,<span class="pl-c1">0</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>binary<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">e</span>.<span class="pl-c1">encoding</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>m);<span class="pl-en">ia</span>(c);<span class="pl-c1">this</span>.<span class="pl-en">handleError</span>(<span class="pl-en">g</span>(<span class="pl-c1">this</span>.<span class="pl-c1">filename</span>,b));<span class="pl-c1">this</span>.<span class="pl-smi">db</span><span class="pl-k">=</span><span class="pl-en">q</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> a};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">close</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">Fb</span>;<span class="pl-k">for</span>(a <span class="pl-k">in</span> b){<span class="pl-k">var</span> c<span class="pl-k">=</span>b[a];<span class="pl-smi">c</span>.<span class="pl-en">free</span>()}c<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-smi">rb</span>;<span class="pl-k">for</span>(a <span class="pl-k">in</span> c)b<span class="pl-k">=</span>c[a],u[b<span class="pl-k">-</span>oa]<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-smi">rb</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-en">handleError</span>(<span class="pl-en">k</span>(<span class="pl-c1">this</span>.<span class="pl-smi">db</span>));<span class="pl-en">sa</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">this</span>.<span class="pl-c1">filename</span>);<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">db</span><span class="pl-k">=</span><span class="pl-c1">null</span>};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">handleError</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(a<span class="pl-k">===</span><span class="pl-smi">c</span>.<span class="pl-smi">Bb</span>)<span class="pl-k">return</span> <span class="pl-c1">null</span>;a<span class="pl-k">=</span><span class="pl-en">tc</span>(<span class="pl-c1">this</span>.<span class="pl-smi">db</span>);<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(a);};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-en">getRowsModified</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">r</span>(<span class="pl-c1">this</span>.<span class="pl-smi">db</span>)};<span class="pl-smi">a</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">create_function</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-smi">rb</span><span class="pl-k">&amp;&amp;</span>(u[<span class="pl-c1">this</span>.<span class="pl-smi">rb</span>[a]<span class="pl-k">-</span>oa]<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-k">delete</span> <span class="pl-c1">this</span>.<span class="pl-smi">rb</span>[a]);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">ta</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e,g;<span class="pl-k">var</span> k<span class="pl-k">=</span>[];<span class="pl-k">for</span>(e<span class="pl-k">=</span>g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c<span class="pl-k">?</span>g<span class="pl-k">&lt;</span>c<span class="pl-k">:</span>g<span class="pl-k">&gt;</span>c;e<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c<span class="pl-k">?</span><span class="pl-k">++</span>g<span class="pl-k">:</span><span class="pl-k">--</span>g){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-en">q</span>(d<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">*</span>e,<span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>);<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-en">vc</span>(m);<span class="pl-en">e</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">switch</span>(<span class="pl-k">!</span><span class="pl-c1">1</span>){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">!==</span>v:<span class="pl-k">return</span> wb;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">!==</span>v:<span class="pl-k">return</span> wb;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">!==</span>v:<span class="pl-k">return</span> wc;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">!==</span>v:<span class="pl-k">return</span> <span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b,c;<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">yc</span>(a);<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">zc</span>(a);a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(d);<span class="pl-k">for</span>(b<span class="pl-k">=</span>c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d<span class="pl-k">?</span>c<span class="pl-k">&lt;</span>d<span class="pl-k">:</span>c<span class="pl-k">&gt;</span>d;b<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d<span class="pl-k">?</span><span class="pl-k">++</span>c<span class="pl-k">:</span><span class="pl-k">--</span>c)a[b]<span class="pl-k">=</span>l[e<span class="pl-k">+</span>b];<span class="pl-k">return</span> a};<span class="pl-k">default</span>:<span class="pl-k">return</span> <span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">null</span>}}}();e<span class="pl-k">=</span><span class="pl-en">e</span>(m);<span class="pl-smi">k</span>.<span class="pl-c1">push</span>(e)}<span class="pl-k">try</span>{<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,k)}<span class="pl-k">catch</span>(xc){r<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code blob-code-inner js-file-line">xc;<span class="pl-en">xb</span>(a,r,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">return</span>}<span class="pl-k">switch</span>(<span class="pl-k">typeof</span> r){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span>:<span class="pl-en">Ac</span>(a,r<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">0</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>:<span class="pl-en">Bc</span>(a,r);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>:<span class="pl-en">Cc</span>(a,r,<span class="pl-k">-</span><span class="pl-c1">1</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span>:<span class="pl-c1">null</span><span class="pl-k">===</span>r<span class="pl-k">?</span><span class="pl-en">yb</span>(a)<span class="pl-k">:</span><span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-smi">r</span>.<span class="pl-c1">length</span><span class="pl-k">?</span>(c<span class="pl-k">=</span><span class="pl-en">ba</span>(r),<span class="pl-en">Dc</span>(a,c,<span class="pl-smi">r</span>.<span class="pl-c1">length</span>,<span class="pl-k">-</span><span class="pl-c1">1</span>),<span class="pl-en">ca</span>(c))<span class="pl-k">:</span><span class="pl-en">xb</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>Wrong API use : tried to return a value of an unknown type (<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>r<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>).<span class="pl-pds">&quot;</span></span>,<span class="pl-k">-</span><span class="pl-c1">1</span>);<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-en">yb</span>(a)}});<span class="pl-c1">this</span>.<span class="pl-smi">rb</span>[a]<span class="pl-k">=</span>d;<span class="pl-c1">this</span>.<span class="pl-en">handleError</span>(<span class="pl-en">Ec</span>(<span class="pl-c1">this</span>.<span class="pl-smi">db</span>,a,<span class="pl-smi">b</span>.<span class="pl-c1">length</span>,<span class="pl-smi">c</span>.<span class="pl-smi">ac</span>,<span class="pl-c1">0</span>,d,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>));<span class="pl-k">return</span> <span class="pl-c1">this</span>};<span class="pl-k">return</span> a}();<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_open<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_close_v2<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_exec<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_free<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_changes<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_prepare_v2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> <span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_prepare_v2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> <span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_bind_text<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> <span class="pl-c1">S</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_bind_blob<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> nc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_bind_double<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> mc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_bind_int<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> oc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_bind_parameter_index<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> ec<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_step<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> tc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_errmsg<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> rb<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_data_count<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> fc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_column_double<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> hc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_column_text<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> jc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_column_blob<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> ic<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_column_bytes<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> kc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_column_type<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> lc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_column_name<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> qc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_reset<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> pc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_clear_bindings<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> rc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_finalize<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code blob-code-inner js-file-line">[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> Ec<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_create_function_v2<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number string number number number number number number number<span class="pl-pds">&quot;</span></span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span> <span class="pl-pds">&quot;</span></span>));<span class="pl-k">var</span> vc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_value_type<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> yc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_value_bytes<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> wc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_value_text<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_value_int<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> zc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_value_blob<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> wb<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_value_double<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> Bc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_result_double<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code blob-code-inner js-file-line"><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> yb<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_result_null<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> Cc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_result_text<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> Dc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_result_blob<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> Ac<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_result_int<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_result_int64<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> xb<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>sqlite3_result_error<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-k">var</span> sc<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">cwrap</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>RegisterExtensionFunctions<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>,[<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span>]);<span class="pl-c1">this</span>.<span class="pl-c1">SQL</span><span class="pl-k">=</span>{Database<span class="pl-k">:</span>e};</td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code blob-code-inner js-file-line"><span class="pl-k">for</span>(a <span class="pl-k">in</span> <span class="pl-c1">this</span>.<span class="pl-c1">SQL</span>)f[a]<span class="pl-k">=</span><span class="pl-c1">this</span>.<span class="pl-c1">SQL</span>[a];<span class="pl-k">var</span> ja<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Bb</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Ac</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Dc</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Nc</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-smi">c</span>.<span class="pl-smi">uc</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">c</span>.<span class="pl-smi">wc</span><span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Gc</span><span class="pl-k">=</span><span class="pl-c1">6</span>;<span class="pl-smi">c</span>.<span class="pl-c1">NOMEM</span><span class="pl-k">=</span><span class="pl-c1">7</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Qc</span><span class="pl-k">=</span><span class="pl-c1">8</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Ec</span><span class="pl-k">=</span><span class="pl-c1">9</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Fc</span><span class="pl-k">=</span><span class="pl-c1">10</span>;<span class="pl-smi">c</span>.<span class="pl-smi">zc</span><span class="pl-k">=</span><span class="pl-c1">11</span>;<span class="pl-smi">c</span>.<span class="pl-c1">NOTFOUND</span><span class="pl-k">=</span><span class="pl-c1">12</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Cc</span><span class="pl-k">=</span><span class="pl-c1">13</span>;<span class="pl-smi">c</span>.<span class="pl-smi">xc</span><span class="pl-k">=</span><span class="pl-c1">14</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Oc</span><span class="pl-k">=</span><span class="pl-c1">15</span>;<span class="pl-smi">c</span>.<span class="pl-c1">EMPTY</span><span class="pl-k">=</span><span class="pl-c1">16</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Rc</span><span class="pl-k">=</span><span class="pl-c1">17</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Sc</span><span class="pl-k">=</span><span class="pl-c1">18</span>;<span class="pl-smi">c</span>.<span class="pl-smi">yc</span><span class="pl-k">=</span><span class="pl-c1">19</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Hc</span><span class="pl-k">=</span><span class="pl-c1">20</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Ic</span><span class="pl-k">=</span><span class="pl-c1">21</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Jc</span><span class="pl-k">=</span><span class="pl-c1">22</span>;<span class="pl-smi">c</span>.<span class="pl-smi">vc</span><span class="pl-k">=</span><span class="pl-c1">23</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Bc</span><span class="pl-k">=</span><span class="pl-c1">24</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Pc</span><span class="pl-k">=</span><span class="pl-c1">25</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Kc</span><span class="pl-k">=</span><span class="pl-c1">26</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Lc</span><span class="pl-k">=</span><span class="pl-c1">27</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Tc</span><span class="pl-k">=</span><span class="pl-c1">28</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Zb</span><span class="pl-k">=</span><span class="pl-c1">100</span>;<span class="pl-smi">c</span>.<span class="pl-c1">DONE</span><span class="pl-k">=</span><span class="pl-c1">101</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Yb</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">c</span>.<span class="pl-c1">FLOAT</span><span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-smi">c</span>.<span class="pl-smi">$b</span><span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Xb</span><span class="pl-k">=</span><span class="pl-c1">4</span>;<span class="pl-smi">c</span>.<span class="pl-smi">Mc</span><span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-smi">c</span>.<span class="pl-smi">ac</span><span class="pl-k">=</span><span class="pl-c1">1</span>}.<span class="pl-en">bind</span>(<span class="pl-c1">this</span>);<span class="pl-smi">f</span>.<span class="pl-smi">onRuntimeInitialized</span><span class="pl-k">=</span>ua;<span class="pl-k">var</span> va<span class="pl-k">=</span>{},w;<span class="pl-k">for</span>(w <span class="pl-k">in</span> f)<span class="pl-smi">f</span>.<span class="pl-en">hasOwnProperty</span>(w)<span class="pl-k">&amp;&amp;</span>(va[w]<span class="pl-k">=</span>f[w]);<span class="pl-k">var</span> xa<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>./this.program<span class="pl-pds">&quot;</span></span>,ya<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,x<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,za<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,Aa<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,Ba<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;</td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code blob-code-inner js-file-line">ya<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span>;x<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> importScripts;za<span class="pl-k">=</span>(Aa<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">process</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">process</span>.<span class="pl-smi">versions</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">process</span>.<span class="pl-smi">versions</span>.<span class="pl-smi">node</span>)<span class="pl-k">&amp;&amp;!</span>ya<span class="pl-k">&amp;&amp;!</span>x;Ba<span class="pl-k">=</span><span class="pl-k">!</span>ya<span class="pl-k">&amp;&amp;!</span>za<span class="pl-k">&amp;&amp;!</span>x;<span class="pl-k">var</span> y<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,Ca,Da;</td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(za){y<span class="pl-k">=</span><span class="pl-c1">__dirname</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>;<span class="pl-k">var</span> Ea,Fa;<span class="pl-en">Ca</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){Ea<span class="pl-k">||</span>(Ea<span class="pl-k">=</span><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>fs<span class="pl-pds">&quot;</span></span>));Fa<span class="pl-k">||</span>(Fa<span class="pl-k">=</span><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>));a<span class="pl-k">=</span><span class="pl-smi">Fa</span>.<span class="pl-c1">normalize</span>(a);a<span class="pl-k">=</span><span class="pl-smi">Ea</span>.<span class="pl-en">readFileSync</span>(a);<span class="pl-k">return</span> b<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">toString</span>()};<span class="pl-en">Da</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-en">Ca</span>(a,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-smi">buffer</span><span class="pl-k">||</span>(a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(a));<span class="pl-en">assert</span>(<span class="pl-smi">a</span>.<span class="pl-smi">buffer</span>);<span class="pl-k">return</span> a};<span class="pl-c1">1</span><span class="pl-k">&lt;</span><span class="pl-c1">process</span>.<span class="pl-smi">argv</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(xa<span class="pl-k">=</span><span class="pl-c1">process</span>.<span class="pl-smi">argv</span>[<span class="pl-c1">1</span>].<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\\</span><span class="pl-pds">/</span>g</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>));<span class="pl-c1">process</span>.<span class="pl-smi">argv</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">2</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">module</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">module</span>.<span class="pl-smi">exports</span><span class="pl-k">=</span>f);<span class="pl-c1">process</span>.<span class="pl-en">on</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>unhandledRejection<span class="pl-pds">&quot;</span></span>,z);<span class="pl-smi">f</span>.<span class="pl-en">inspect</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>[Emscripten Module object]<span class="pl-pds">&quot;</span></span>}}<span class="pl-k">else</span> <span class="pl-k">if</span>(Ba)<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-k">typeof</span> read<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L93" class="blob-num js-line-number" data-line-number="93"></td>
        <td id="LC93" class="blob-code blob-code-inner js-file-line">(<span class="pl-en">Ca</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-en">read</span>(a)}),<span class="pl-en">Da</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> readbuffer)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-en">readbuffer</span>(a));a<span class="pl-k">=</span><span class="pl-en">read</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>binary<span class="pl-pds">&quot;</span></span>);<span class="pl-en">assert</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a);<span class="pl-k">return</span> a},<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> print<span class="pl-k">&amp;&amp;</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-en">console</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">console</span><span class="pl-k">=</span>{}),<span class="pl-en">console</span>.<span class="pl-smi">log</span><span class="pl-k">=</span>print,<span class="pl-en">console</span>.<span class="pl-smi">warn</span><span class="pl-k">=</span><span class="pl-en">console</span>.<span class="pl-smi">error</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> printErr<span class="pl-k">?</span>printErr<span class="pl-k">:</span>print);<span class="pl-k">else</span> <span class="pl-k">if</span>(ya<span class="pl-k">||</span>x)x<span class="pl-k">?</span>y<span class="pl-k">=</span><span class="pl-smi">self</span>.<span class="pl-c1">location</span>.<span class="pl-c1">href</span><span class="pl-k">:</span><span class="pl-c1">document</span>.<span class="pl-smi">currentScript</span><span class="pl-k">&amp;&amp;</span>(y<span class="pl-k">=</span><span class="pl-c1">document</span>.<span class="pl-smi">currentScript</span>.<span class="pl-smi">src</span>),y<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">y</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>blob:<span class="pl-pds">&quot;</span></span>)<span class="pl-k">?</span><span class="pl-smi">y</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-smi">y</span>.<span class="pl-c1">lastIndexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,<span class="pl-en">Ca</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L94" class="blob-num js-line-number" data-line-number="94"></td>
        <td id="LC94" class="blob-code blob-code-inner js-file-line"><span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>;<span class="pl-smi">b</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>,a,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-c1">send</span>(<span class="pl-c1">null</span>);<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-c1">responseText</span>},x<span class="pl-k">&amp;&amp;</span>(<span class="pl-en">Da</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">XMLHttpRequest</span>;<span class="pl-smi">b</span>.<span class="pl-c1">open</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GET<span class="pl-pds">&quot;</span></span>,a,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-smi">responseType</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>arraybuffer<span class="pl-pds">&quot;</span></span>;<span class="pl-smi">b</span>.<span class="pl-c1">send</span>(<span class="pl-c1">null</span>);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-smi">b</span>.<span class="pl-smi">response</span>)});<span class="pl-k">var</span> Ga<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">print</span><span class="pl-k">||</span><span class="pl-en">console</span>.<span class="pl-smi">log</span>.<span class="pl-en">bind</span>(<span class="pl-en">console</span>),<span class="pl-c1">A</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">printErr</span><span class="pl-k">||</span><span class="pl-en">console</span>.<span class="pl-smi">warn</span>.<span class="pl-en">bind</span>(<span class="pl-en">console</span>);<span class="pl-k">for</span>(w <span class="pl-k">in</span> va)<span class="pl-smi">va</span>.<span class="pl-en">hasOwnProperty</span>(w)<span class="pl-k">&amp;&amp;</span>(f[w]<span class="pl-k">=</span>va[w]);va<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">f</span>.<span class="pl-smi">thisProgram</span><span class="pl-k">&amp;&amp;</span>(xa<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">thisProgram</span>);<span class="pl-k">function</span> <span class="pl-en">Ha</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">B</span>[Ia<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>];a<span class="pl-k">=</span>b<span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-c1">15</span><span class="pl-k">&amp;</span><span class="pl-k">-</span><span class="pl-c1">16</span>;a<span class="pl-k">&gt;</span><span class="pl-en">Ja</span>()<span class="pl-k">&amp;&amp;</span><span class="pl-en">z</span>();<span class="pl-c1">B</span>[Ia<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>a;<span class="pl-k">return</span> b}</td>
      </tr>
      <tr>
        <td id="L95" class="blob-num js-line-number" data-line-number="95"></td>
        <td id="LC95" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> Ka<span class="pl-k">=</span>{<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">f64-rem</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> a<span class="pl-k">%</span>b},<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-en">debugger</span><span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-k">function</span>(){}},oa<span class="pl-k">=</span><span class="pl-c1">1</span>,u<span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-c1">64</span>);<span class="pl-k">function</span> <span class="pl-en">ta</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">64</span><span class="pl-k">&gt;</span>b;b<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-k">!</span>u[b])<span class="pl-k">return</span> u[b]<span class="pl-k">=</span>a,oa<span class="pl-k">+</span>b;<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.<span class="pl-pds">&quot;</span></span>;}<span class="pl-k">var</span> La;<span class="pl-smi">f</span>.<span class="pl-smi">wasmBinary</span><span class="pl-k">&amp;&amp;</span>(La<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">wasmBinary</span>);<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> WebAssembly<span class="pl-k">&amp;&amp;</span><span class="pl-en">A</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>no native wasm support detected<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L96" class="blob-num js-line-number" data-line-number="96"></td>
        <td id="LC96" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ma</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>;<span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>);<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i1<span class="pl-pds">&quot;</span></span>:l[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i8<span class="pl-pds">&quot;</span></span>:l[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i16<span class="pl-pds">&quot;</span></span>:Ma[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>:<span class="pl-c1">B</span>[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i64<span class="pl-pds">&quot;</span></span>:<span class="pl-c1">C</span><span class="pl-k">=</span>[<span class="pl-c1">0</span>,(<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">1</span><span class="pl-k">&lt;=</span><span class="pl-k">+</span><span class="pl-en">Na</span>(<span class="pl-c1">D</span>)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">D</span><span class="pl-k">?</span>(<span class="pl-en">Oa</span>(<span class="pl-k">+</span><span class="pl-en">Pa</span>(<span class="pl-c1">D</span><span class="pl-k">/</span><span class="pl-c1">4294967296</span>),<span class="pl-c1">4294967295</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">~~</span><span class="pl-k">+</span><span class="pl-en">Qa</span>((<span class="pl-c1">D</span><span class="pl-k">-+</span>(<span class="pl-k">~~</span><span class="pl-c1">D</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>))<span class="pl-k">/</span><span class="pl-c1">4294967296</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0</span>)];<span class="pl-c1">B</span>[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">C</span>[<span class="pl-c1">0</span>];<span class="pl-c1">B</span>[a<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">C</span>[<span class="pl-c1">1</span>];<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>float<span class="pl-pds">&quot;</span></span>:Ra[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>double<span class="pl-pds">&quot;</span></span>:Sa[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>;<span class="pl-k">default</span>:<span class="pl-en">z</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid type for setValue: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b)}}</td>
      </tr>
      <tr>
        <td id="L97" class="blob-num js-line-number" data-line-number="97"></td>
        <td id="LC97" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">q</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){b<span class="pl-k">=</span>b<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>i8<span class="pl-pds">&quot;</span></span>;<span class="pl-s"><span class="pl-pds">&quot;</span>*<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>);<span class="pl-k">switch</span>(b){<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i1<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> l[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i8<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> l[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">0</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i16<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> Ma[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i32<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> <span class="pl-c1">B</span>[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>i64<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> <span class="pl-c1">B</span>[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>float<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> Ra[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>];<span class="pl-k">case</span> <span class="pl-s"><span class="pl-pds">&quot;</span>double<span class="pl-pds">&quot;</span></span>:<span class="pl-k">return</span> Sa[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">3</span>];<span class="pl-k">default</span>:<span class="pl-en">z</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>invalid type for getValue: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b)}<span class="pl-k">return</span> <span class="pl-c1">null</span>}<span class="pl-k">var</span> <span class="pl-c1">E</span>,Ta<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">function</span> <span class="pl-en">assert</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">||</span><span class="pl-en">z</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Assertion failed: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b)}function Ua(a){var b=f[&quot;_&quot;+a];assert(b,&quot;Cannot call unknown function &quot;+a+&quot;, make sure it is exported&quot;);return b}</td>
      </tr>
      <tr>
        <td id="L98" class="blob-num js-line-number" data-line-number="98"></td>
        <td id="LC98" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Va</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">var</span> e<span class="pl-k">=</span>{<span class="pl-en">string</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span>a){<span class="pl-k">var</span> c<span class="pl-k">=</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">2</span>)<span class="pl-k">+</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span><span class="pl-en">h</span>(c);<span class="pl-en">t</span>(a,<span class="pl-c1">F</span>,b,c)}<span class="pl-k">return</span> b},<span class="pl-en">array</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">h</span>(<span class="pl-smi">a</span>.<span class="pl-c1">length</span>);<span class="pl-smi">l</span>.<span class="pl-c1">set</span>(a,b);<span class="pl-k">return</span> b}},g<span class="pl-k">=</span><span class="pl-en">Ua</span>(a),k<span class="pl-k">=</span>[];a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(d)<span class="pl-k">for</span>(<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;m<span class="pl-k">++</span>){<span class="pl-k">var</span> r<span class="pl-k">=</span>e[c[m]];r<span class="pl-k">?</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-en">ka</span>()),k[m]<span class="pl-k">=</span><span class="pl-en">r</span>(d[m]))<span class="pl-k">:</span>k[m]<span class="pl-k">=</span>d[m]}c<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,k);<span class="pl-en">c</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-en">G</span>(a)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>boolean<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b<span class="pl-k">?</span><span class="pl-k">!!</span>a<span class="pl-k">:</span>a}(c);<span class="pl-c1">0</span><span class="pl-k">!==</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-en">na</span>(a);<span class="pl-k">return</span> c}<span class="pl-k">var</span> Wa<span class="pl-k">=</span><span class="pl-c1">0</span>,Xa<span class="pl-k">=</span><span class="pl-c1">3</span>;</td>
      </tr>
      <tr>
        <td id="L99" class="blob-num js-line-number" data-line-number="99"></td>
        <td id="LC99" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ba</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>Wa;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">var</span> d<span class="pl-k">=</span>a}<span class="pl-k">else</span> c<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;b<span class="pl-k">=</span>b<span class="pl-k">==</span>Xa<span class="pl-k">?</span>e<span class="pl-k">:</span>[Ya,h,Ha][b](<span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(d,<span class="pl-c1">1</span>));<span class="pl-k">if</span>(c){<span class="pl-k">var</span> e<span class="pl-k">=</span>b;<span class="pl-en">assert</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">3</span>));<span class="pl-k">for</span>(a<span class="pl-k">=</span>b<span class="pl-k">+</span>(d<span class="pl-k">&amp;</span><span class="pl-k">-</span><span class="pl-c1">4</span>);e<span class="pl-k">&lt;</span>a;e<span class="pl-k">+=</span><span class="pl-c1">4</span>)<span class="pl-c1">B</span>[e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span>b<span class="pl-k">+</span>d;e<span class="pl-k">&lt;</span>a;)l[e<span class="pl-k">++</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> b}<span class="pl-smi">a</span>.<span class="pl-smi">subarray</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">slice</span><span class="pl-k">?</span><span class="pl-c1">F</span>.<span class="pl-c1">set</span>(a,b)<span class="pl-k">:</span><span class="pl-c1">F</span>.<span class="pl-c1">set</span>(<span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(a),b);<span class="pl-k">return</span> b}<span class="pl-k">var</span> Za<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> TextDecoder<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">TextDecoder</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utf8<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-k">void</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L100" class="blob-num js-line-number" data-line-number="100"></td>
        <td id="LC100" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ra</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span>b<span class="pl-k">+</span>c;<span class="pl-k">for</span>(c<span class="pl-k">=</span>b;a[c]<span class="pl-k">&amp;&amp;!</span>(c<span class="pl-k">&gt;=</span>d);)<span class="pl-k">++</span>c;<span class="pl-k">if</span>(<span class="pl-c1">16</span><span class="pl-k">&lt;</span>c<span class="pl-k">-</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">subarray</span><span class="pl-k">&amp;&amp;</span>Za)<span class="pl-k">return</span> <span class="pl-smi">Za</span>.<span class="pl-en">decode</span>(<span class="pl-smi">a</span>.<span class="pl-en">subarray</span>(b,c));<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;b<span class="pl-k">&lt;</span>c;){<span class="pl-k">var</span> e<span class="pl-k">=</span>a[b<span class="pl-k">++</span>];<span class="pl-k">if</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">128</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>a[b<span class="pl-k">++</span>]<span class="pl-k">&amp;</span><span class="pl-c1">63</span>;<span class="pl-k">if</span>(<span class="pl-c1">192</span><span class="pl-k">==</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">224</span>))d<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>((e<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">|</span>g);<span class="pl-k">else</span>{<span class="pl-k">var</span> k<span class="pl-k">=</span>a[b<span class="pl-k">++</span>]<span class="pl-k">&amp;</span><span class="pl-c1">63</span>;e<span class="pl-k">=</span><span class="pl-c1">224</span><span class="pl-k">==</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">240</span>)<span class="pl-k">?</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">15</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">12</span><span class="pl-k">|</span>g<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">|</span>k<span class="pl-k">:</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">7</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">18</span><span class="pl-k">|</span>g<span class="pl-k">&lt;&lt;</span><span class="pl-c1">12</span><span class="pl-k">|</span>k<span class="pl-k">&lt;&lt;</span><span class="pl-c1">6</span><span class="pl-k">|</span>a[b<span class="pl-k">++</span>]<span class="pl-k">&amp;</span><span class="pl-c1">63</span>;<span class="pl-c1">65536</span><span class="pl-k">&gt;</span>e<span class="pl-k">?</span>d<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(e)<span class="pl-k">:</span>(e<span class="pl-k">-=</span><span class="pl-c1">65536</span>,d<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(<span class="pl-c1">55296</span><span class="pl-k">|</span>e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">10</span>,<span class="pl-c1">56320</span><span class="pl-k">|</span>e<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>))}}<span class="pl-k">else</span> d<span class="pl-k">+=</span><span class="pl-c1">String</span>.<span class="pl-c1">fromCharCode</span>(e)}<span class="pl-k">return</span> d}function G(a){return a?ra(F,a,void 0):&quot;&quot;}</td>
      </tr>
      <tr>
        <td id="L101" class="blob-num js-line-number" data-line-number="101"></td>
        <td id="LC101" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">t</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>d))<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">var</span> e<span class="pl-k">=</span>c;d<span class="pl-k">=</span>c<span class="pl-k">+</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>g){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(g);<span class="pl-k">if</span>(<span class="pl-c1">55296</span><span class="pl-k">&lt;=</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-c1">57343</span><span class="pl-k">&gt;=</span>k){<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-k">++</span>g);k<span class="pl-k">=</span><span class="pl-c1">65536</span><span class="pl-k">+</span>((k<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">10</span>)<span class="pl-k">|</span>m<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>}<span class="pl-k">if</span>(<span class="pl-c1">127</span><span class="pl-k">&gt;=</span>k){<span class="pl-k">if</span>(c<span class="pl-k">&gt;=</span>d)<span class="pl-k">break</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span>k}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-c1">2047</span><span class="pl-k">&gt;=</span>k){<span class="pl-k">if</span>(c<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span>d)<span class="pl-k">break</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">192</span><span class="pl-k">|</span>k<span class="pl-k">&gt;&gt;</span><span class="pl-c1">6</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-c1">65535</span><span class="pl-k">&gt;=</span>k){<span class="pl-k">if</span>(c<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">&gt;=</span>d)<span class="pl-k">break</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">224</span><span class="pl-k">|</span>k<span class="pl-k">&gt;&gt;</span><span class="pl-c1">12</span>}<span class="pl-k">else</span>{<span class="pl-k">if</span>(c<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">&gt;=</span>d)<span class="pl-k">break</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">240</span><span class="pl-k">|</span>k<span class="pl-k">&gt;&gt;</span><span class="pl-c1">18</span>;b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">128</span><span class="pl-k">|</span>k<span class="pl-k">&gt;&gt;</span><span class="pl-c1">12</span><span class="pl-k">&amp;</span><span class="pl-c1">63</span>}b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">128</span><span class="pl-k">|</span>k<span class="pl-k">&gt;&gt;</span><span class="pl-c1">6</span><span class="pl-k">&amp;</span><span class="pl-c1">63</span>}b[c<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-c1">128</span><span class="pl-k">|</span>k<span class="pl-k">&amp;</span><span class="pl-c1">63</span>}}b[c]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> c<span class="pl-k">-</span>e}</td>
      </tr>
      <tr>
        <td id="L102" class="blob-num js-line-number" data-line-number="102"></td>
        <td id="LC102" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">la</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>c){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(c);<span class="pl-c1">55296</span><span class="pl-k">&lt;=</span>d<span class="pl-k">&amp;&amp;</span><span class="pl-c1">57343</span><span class="pl-k">&gt;=</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span><span class="pl-c1">65536</span><span class="pl-k">+</span>((d<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>)<span class="pl-k">&lt;&lt;</span><span class="pl-c1">10</span>)<span class="pl-k">|</span><span class="pl-smi">a</span>.<span class="pl-c1">charCodeAt</span>(<span class="pl-k">++</span>c)<span class="pl-k">&amp;</span><span class="pl-c1">1023</span>);<span class="pl-c1">127</span><span class="pl-k">&gt;=</span>d<span class="pl-k">?</span><span class="pl-k">++</span>b<span class="pl-k">:</span>b<span class="pl-k">=</span><span class="pl-c1">2047</span><span class="pl-k">&gt;=</span>d<span class="pl-k">?</span>b<span class="pl-k">+</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">65535</span><span class="pl-k">&gt;=</span>d<span class="pl-k">?</span>b<span class="pl-k">+</span><span class="pl-c1">3</span><span class="pl-k">:</span>b<span class="pl-k">+</span><span class="pl-c1">4</span>}<span class="pl-k">return</span> b}<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> TextDecoder<span class="pl-k">&amp;&amp;</span><span class="pl-k">new</span> <span class="pl-en">TextDecoder</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utf-16le<span class="pl-pds">&quot;</span></span>);<span class="pl-k">function</span> <span class="pl-en">$a</span>(<span class="pl-smi">a</span>){<span class="pl-c1">0</span><span class="pl-k">&lt;</span>a<span class="pl-k">%</span><span class="pl-c1">65536</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-c1">65536</span><span class="pl-k">-</span>a<span class="pl-k">%</span><span class="pl-c1">65536</span>);<span class="pl-k">return</span> a}<span class="pl-k">var</span> buffer,l,<span class="pl-c1">F</span>,Ma,<span class="pl-c1">B</span>,Ra,Sa;</td>
      </tr>
      <tr>
        <td id="L103" class="blob-num js-line-number" data-line-number="103"></td>
        <td id="LC103" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ab</span>(<span class="pl-smi">a</span>){buffer<span class="pl-k">=</span>a;<span class="pl-smi">f</span>.<span class="pl-c1">HEAP8</span><span class="pl-k">=</span>l<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Int8Array</span>(a);<span class="pl-smi">f</span>.<span class="pl-c1">HEAP16</span><span class="pl-k">=</span>Ma<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Int16Array</span>(a);<span class="pl-smi">f</span>.<span class="pl-c1">HEAP32</span><span class="pl-k">=</span><span class="pl-c1">B</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Int32Array</span>(a);<span class="pl-smi">f</span>.<span class="pl-c1">HEAPU8</span><span class="pl-k">=</span><span class="pl-c1">F</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(a);<span class="pl-smi">f</span>.<span class="pl-c1">HEAPU16</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint16Array</span>(a);<span class="pl-smi">f</span>.<span class="pl-c1">HEAPU32</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint32Array</span>(a);<span class="pl-smi">f</span>.<span class="pl-c1">HEAPF32</span><span class="pl-k">=</span>Ra<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float32Array</span>(a);<span class="pl-smi">f</span>.<span class="pl-c1">HEAPF64</span><span class="pl-k">=</span>Sa<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Float64Array</span>(a)}<span class="pl-k">var</span> Ia<span class="pl-k">=</span><span class="pl-c1">60304</span>,bb<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-c1">TOTAL_MEMORY</span><span class="pl-k">||</span><span class="pl-c1">16777216</span>;<span class="pl-smi">f</span>.<span class="pl-smi">wasmMemory</span><span class="pl-k">?</span><span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">wasmMemory</span><span class="pl-k">:</span><span class="pl-c1">E</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">WebAssembly.Memory</span>({initial<span class="pl-k">:</span>bb<span class="pl-k">/</span><span class="pl-c1">65536</span>});<span class="pl-c1">E</span><span class="pl-k">&amp;&amp;</span>(buffer<span class="pl-k">=</span><span class="pl-c1">E</span>.<span class="pl-smi">buffer</span>);bb<span class="pl-k">=</span><span class="pl-smi">buffer</span>.<span class="pl-smi">byteLength</span>;<span class="pl-en">ab</span>(buffer);<span class="pl-c1">B</span>[Ia<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">5303216</span>;</td>
      </tr>
      <tr>
        <td id="L104" class="blob-num js-line-number" data-line-number="104"></td>
        <td id="LC104" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">cb</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">shift</span>();<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> b)<span class="pl-en">b</span>();<span class="pl-k">else</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">jc</span>;<span class="pl-s"><span class="pl-pds">&quot;</span>number<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> c<span class="pl-k">?</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">Ib</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">dynCall_v</span>(c)<span class="pl-k">:</span><span class="pl-smi">f</span>.<span class="pl-en">dynCall_vi</span>(c,<span class="pl-smi">b</span>.<span class="pl-smi">Ib</span>)<span class="pl-k">:</span><span class="pl-en">c</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-smi">Ib</span><span class="pl-k">?</span><span class="pl-c1">null</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">Ib</span>)}}}<span class="pl-k">var</span> db<span class="pl-k">=</span>[],eb<span class="pl-k">=</span>[],fb<span class="pl-k">=</span>[],gb<span class="pl-k">=</span>[],hb<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">function</span> <span class="pl-en">ib</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">preRun</span>.<span class="pl-c1">shift</span>();<span class="pl-smi">db</span>.<span class="pl-c1">unshift</span>(a)}<span class="pl-k">var</span> Na<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-smi">abs</span>,Qa<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-smi">ceil</span>,Pa<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-smi">floor</span>,Oa<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-smi">min</span>,<span class="pl-c1">H</span><span class="pl-k">=</span><span class="pl-c1">0</span>,jb<span class="pl-k">=</span><span class="pl-c1">null</span>,kb<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">f</span>.<span class="pl-smi">preloadedImages</span><span class="pl-k">=</span>{};<span class="pl-smi">f</span>.<span class="pl-smi">preloadedAudios</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L105" class="blob-num js-line-number" data-line-number="105"></td>
        <td id="LC105" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">lb</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">I</span>;<span class="pl-k">return</span> <span class="pl-c1">String</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">startsWith</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-en">startsWith</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data:application/octet-stream;base64,<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>data:application/octet-stream;base64,<span class="pl-pds">&quot;</span></span>)}<span class="pl-k">var</span> <span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>sql-wasm.wasm<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">lb</span>()){<span class="pl-k">var</span> mb<span class="pl-k">=</span><span class="pl-c1">I</span>;<span class="pl-c1">I</span><span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-smi">locateFile</span><span class="pl-k">?</span><span class="pl-smi">f</span>.<span class="pl-en">locateFile</span>(mb,y)<span class="pl-k">:</span>y<span class="pl-k">+</span>mb}function nb(){try{if(La)return new Uint8Array(La);if(Da)return Da(I);throw&quot;both async and sync fetching of the wasm failed&quot;;}catch(a){z(a)}}</td>
      </tr>
      <tr>
        <td id="L106" class="blob-num js-line-number" data-line-number="106"></td>
        <td id="LC106" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ob</span>(){<span class="pl-k">return</span> La<span class="pl-k">||!</span>ya<span class="pl-k">&amp;&amp;!</span>x<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> fetch<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">Promise</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">a</span>(<span class="pl-en">nb</span>())})<span class="pl-k">:</span><span class="pl-en">fetch</span>(<span class="pl-c1">I</span>,{credentials<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>same-origin<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">then</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">ok</span>)<span class="pl-k">throw</span><span class="pl-s"><span class="pl-pds">&quot;</span>failed to load wasm binary file at &#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">I</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-en">arrayBuffer</span>()}).<span class="pl-c1">catch</span>(<span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-en">nb</span>()})}</td>
      </tr>
      <tr>
        <td id="L107" class="blob-num js-line-number" data-line-number="107"></td>
        <td id="LC107" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">pb</span>(<span class="pl-smi">a</span>){<span class="pl-k">function</span> <span class="pl-en">b</span>(<span class="pl-smi">a</span>){<span class="pl-smi">f</span>.<span class="pl-smi">asm</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">exports</span>;<span class="pl-c1">H</span><span class="pl-k">--</span>;<span class="pl-smi">f</span>.<span class="pl-smi">monitorRunDependencies</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">f</span>.<span class="pl-en">monitorRunDependencies</span>(<span class="pl-c1">H</span>);<span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-c1">H</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">null</span><span class="pl-k">!==</span>jb<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">clearInterval</span>(jb),jb<span class="pl-k">=</span><span class="pl-c1">null</span>),kb<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span>kb,kb<span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-en">a</span>()))}function c(a){b(a.instance)}function d(a){return ob().then(function(a){return WebAssembly.instantiate(a,e)}).then(a,function(a){A(&quot;failed to asynchronously prepare wasm: &quot;+a);z(a)})}var e={env:a,wasi_unstable:a,global:{NaN:NaN,Infinity:Infinity},&quot;global.Math&quot;:Math,asm2wasm:Ka};H++;f.monitorRunDependencies&amp;&amp;f.monitorRunDependencies(H);</td>
      </tr>
      <tr>
        <td id="L108" class="blob-num js-line-number" data-line-number="108"></td>
        <td id="LC108" class="blob-code blob-code-inner js-file-line"><span class="pl-k">if</span>(<span class="pl-smi">f</span>.<span class="pl-smi">instantiateWasm</span>)<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">f</span>.<span class="pl-en">instantiateWasm</span>(e,b)}<span class="pl-k">catch</span>(g){<span class="pl-k">return</span> <span class="pl-en">A</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Module.instantiateWasm callback failed with error: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>g),<span class="pl-k">!</span><span class="pl-c1">1</span>}(<span class="pl-k">function</span>(){<span class="pl-k">if</span>(La<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-smi">WebAssembly</span>.<span class="pl-smi">instantiateStreaming</span><span class="pl-k">||</span><span class="pl-en">lb</span>()<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> fetch)<span class="pl-k">return</span> <span class="pl-en">d</span>(c);<span class="pl-en">fetch</span>(<span class="pl-c1">I</span>,{credentials<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>same-origin<span class="pl-pds">&quot;</span></span>}).<span class="pl-c1">then</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">WebAssembly</span>.<span class="pl-en">instantiateStreaming</span>(a,e).<span class="pl-c1">then</span>(c,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">A</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>wasm streaming compile failed: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a);<span class="pl-en">A</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>falling back to ArrayBuffer instantiation<span class="pl-pds">&quot;</span></span>);<span class="pl-en">d</span>(c)})})})();<span class="pl-k">return</span>{}}</td>
      </tr>
      <tr>
        <td id="L109" class="blob-num js-line-number" data-line-number="109"></td>
        <td id="LC109" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">f</span>.<span class="pl-en">asm</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-smi">b</span>.<span class="pl-smi">memory</span><span class="pl-k">=</span><span class="pl-c1">E</span>;<span class="pl-smi">b</span>.<span class="pl-smi">table</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">WebAssembly.Table</span>({initial<span class="pl-k">:</span><span class="pl-c1">2688</span>,maximum<span class="pl-k">:</span><span class="pl-c1">2688</span>,element<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>anyfunc<span class="pl-pds">&quot;</span></span>});<span class="pl-smi">b</span>.<span class="pl-smi">__memory_base</span><span class="pl-k">=</span><span class="pl-c1">1024</span>;<span class="pl-smi">b</span>.<span class="pl-smi">__table_base</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-en">pb</span>(b)};<span class="pl-k">var</span> <span class="pl-c1">D</span>,<span class="pl-c1">C</span>;<span class="pl-smi">eb</span>.<span class="pl-c1">push</span>({<span class="pl-en">jc</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-en">qb</span>()}});<span class="pl-k">function</span> <span class="pl-en">sb</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">replace</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">\b</span>__Z<span class="pl-c1">[<span class="pl-c1">\w\d</span>_]</span><span class="pl-k">+</span><span class="pl-pds">/</span>g</span>,<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> a<span class="pl-k">===</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span> [<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>]<span class="pl-pds">&quot;</span></span>})}<span class="pl-k">var</span> <span class="pl-c1">L</span><span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L110" class="blob-num js-line-number" data-line-number="110"></td>
        <td id="LC110" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">tb</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">tb</span>.<span class="pl-smi">ub</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">B</span>[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>];<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">B</span>[b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]}<span class="pl-k">else</span> <span class="pl-smi">tb</span>.<span class="pl-smi">ub</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">L</span>.<span class="pl-c1">USER</span><span class="pl-k">=</span><span class="pl-c1">L</span>.<span class="pl-c1">LOGNAME</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>web_user<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">L</span>.<span class="pl-c1">PATH</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">L</span>.<span class="pl-c1">PWD</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">L</span>.<span class="pl-c1">HOME</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>/home/web_user<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">L</span>.<span class="pl-c1">LANG</span><span class="pl-k">=</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">navigator</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">navigator</span>.<span class="pl-smi">languages</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">navigator</span>.<span class="pl-smi">languages</span>[<span class="pl-c1">0</span>]<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>C<span class="pl-pds">&quot;</span></span>).<span class="pl-c1">replace</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>-<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>_<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>.UTF-8<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">L</span>.<span class="pl-smi">_</span><span class="pl-k">=</span>xa,c<span class="pl-k">=</span>hb<span class="pl-k">?</span><span class="pl-en">Ya</span>(<span class="pl-c1">1024</span>)<span class="pl-k">:</span><span class="pl-en">Ha</span>(<span class="pl-c1">1024</span>),b<span class="pl-k">=</span>hb<span class="pl-k">?</span><span class="pl-en">Ya</span>(<span class="pl-c1">256</span>)<span class="pl-k">:</span><span class="pl-en">Ha</span>(<span class="pl-c1">256</span>),<span class="pl-c1">B</span>[b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>c,<span class="pl-c1">B</span>[a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>b;a<span class="pl-k">=</span>[];<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,e;<span class="pl-k">for</span>(e <span class="pl-k">in</span> <span class="pl-c1">L</span>)<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-c1">L</span>[e]){<span class="pl-k">var</span> g<span class="pl-k">=</span>e<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>=<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-c1">L</span>[e];<span class="pl-smi">a</span>.<span class="pl-c1">push</span>(g);d<span class="pl-k">+=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span>}<span class="pl-k">if</span>(<span class="pl-c1">1024</span><span class="pl-k">&lt;</span>d)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Environment size exceeded TOTAL_ENV_SIZE!<span class="pl-pds">&quot;</span></span>);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;e<span class="pl-k">++</span>){d<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L111" class="blob-num js-line-number" data-line-number="111"></td>
        <td id="LC111" class="blob-code blob-code-inner js-file-line">g<span class="pl-k">=</span>a[e];<span class="pl-k">for</span>(<span class="pl-k">var</span> k<span class="pl-k">=</span>c,m<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span><span class="pl-smi">d</span>.<span class="pl-c1">length</span>;<span class="pl-k">++</span>m)l[k<span class="pl-k">++</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">charCodeAt</span>(m);l[k<span class="pl-k">&gt;&gt;</span><span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">B</span>[b<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">*</span>e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>c;c<span class="pl-k">+=</span><span class="pl-smi">g</span>.<span class="pl-c1">length</span><span class="pl-k">+</span><span class="pl-c1">1</span>}<span class="pl-c1">B</span>[b<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>}function ub(a,b){for(var c=0,d=a.length-1;0&lt;=d;d--){var e=a[d];&quot;.&quot;===e?a.splice(d,1):&quot;..&quot;===e?(a.splice(d,1),c++):c&amp;&amp;(a.splice(d,1),c--)}if(b)for(;c;c--)a.unshift(&quot;..&quot;);return a}function vb(a){var b=&quot;/&quot;===a.charAt(0),c=&quot;/&quot;===a.substr(-1);(a=ub(a.split(&quot;/&quot;).filter(function(a){return!!a}),!b).join(&quot;/&quot;))||b||(a=&quot;.&quot;);a&amp;&amp;c&amp;&amp;(a+=&quot;/&quot;);return(b?&quot;/&quot;:&quot;&quot;)+a}</td>
      </tr>
      <tr>
        <td id="L112" class="blob-num js-line-number" data-line-number="112"></td>
        <td id="LC112" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">zb</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>(<span class="pl-cce">\/</span><span class="pl-k">?</span><span class="pl-k">|</span>)(<span class="pl-c1">[<span class="pl-c1">\s\S</span>]</span><span class="pl-k">*?</span>)((?:<span class="pl-cce">\.</span><span class="pl-k">{1,2}</span><span class="pl-k">|</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-cce">\/</span>]</span><span class="pl-k">+?</span><span class="pl-k">|</span>)(<span class="pl-cce">\.</span><span class="pl-c1">[<span class="pl-k">^</span><span class="pl-c1">.</span><span class="pl-cce">\/</span>]</span><span class="pl-k">*</span><span class="pl-k">|</span>))(?:<span class="pl-c1">[<span class="pl-cce">\/</span>]</span><span class="pl-k">*</span>)<span class="pl-k">$</span><span class="pl-pds">/</span></span>.<span class="pl-c1">exec</span>(a).<span class="pl-c1">slice</span>(<span class="pl-c1">1</span>);a<span class="pl-k">=</span>b[<span class="pl-c1">0</span>];b<span class="pl-k">=</span>b[<span class="pl-c1">1</span>];<span class="pl-k">if</span>(<span class="pl-k">!</span>a<span class="pl-k">&amp;&amp;!</span>b)<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-smi">b</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>));<span class="pl-k">return</span> a<span class="pl-k">+</span>b}function Ab(a){if(&quot;/&quot;===a)return&quot;/&quot;;var b=a.lastIndexOf(&quot;/&quot;);return-1===b?a:a.substr(b+1)}function Bb(){var a=Array.prototype.slice.call(arguments,0);return vb(a.join(&quot;/&quot;))}function n(a,b){return vb(a+&quot;/&quot;+b)}function Cb(a){f.___errno_location&amp;&amp;(B[f.___errno_location()&gt;&gt;2]=a);return a}</td>
      </tr>
      <tr>
        <td id="L113" class="blob-num js-line-number" data-line-number="113"></td>
        <td id="LC113" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Db</span>(){<span class="pl-k">for</span>(<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,b<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-c1">arguments</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&lt;=</span>c<span class="pl-k">&amp;&amp;!</span>b;c<span class="pl-k">--</span>){b<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&lt;=</span>c<span class="pl-k">?</span><span class="pl-c1">arguments</span>[c]<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> b)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">TypeError</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Arguments to path.resolve must be strings<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;a<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a;b<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-smi">b</span>.<span class="pl-c1">charAt</span>(<span class="pl-c1">0</span>)}a<span class="pl-k">=</span><span class="pl-en">ub</span>(<span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>).<span class="pl-en">filter</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span>a}),<span class="pl-k">!</span>b).<span class="pl-c1">join</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span>(b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span>a<span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>}<span class="pl-k">var</span> Eb<span class="pl-k">=</span>[];<span class="pl-k">function</span> <span class="pl-en">Fb</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){Eb[a]<span class="pl-k">=</span>{input<span class="pl-k">:</span>[],output<span class="pl-k">:</span>[],yb<span class="pl-k">:</span>b};<span class="pl-en">Gb</span>(a,Hb)}</td>
      </tr>
      <tr>
        <td id="L114" class="blob-num js-line-number" data-line-number="114"></td>
        <td id="LC114" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> Hb<span class="pl-k">=</span>{<span class="pl-en">open</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>Eb[<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">rdev</span>];<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">19</span>);<span class="pl-smi">a</span>.<span class="pl-smi">tty</span><span class="pl-k">=</span>b;<span class="pl-smi">a</span>.<span class="pl-smi">seekable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">close</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">tty</span>.<span class="pl-smi">yb</span>.<span class="pl-en">flush</span>(<span class="pl-smi">a</span>.<span class="pl-smi">tty</span>)},<span class="pl-en">flush</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">tty</span>.<span class="pl-smi">yb</span>.<span class="pl-en">flush</span>(<span class="pl-smi">a</span>.<span class="pl-smi">tty</span>)},<span class="pl-en">read</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">tty</span><span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">tty</span>.<span class="pl-smi">yb</span>.<span class="pl-smi">Vb</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">6</span>);<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>d;g<span class="pl-k">++</span>){<span class="pl-k">try</span>{<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">tty</span>.<span class="pl-smi">yb</span>.<span class="pl-en">Vb</span>(<span class="pl-smi">a</span>.<span class="pl-smi">tty</span>)}<span class="pl-k">catch</span>(m){<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">5</span>);}<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>k<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">11</span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>k<span class="pl-k">||</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>k)<span class="pl-k">break</span>;e<span class="pl-k">++</span>;b[c<span class="pl-k">+</span>g]<span class="pl-k">=</span>k}e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">timestamp</span><span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>());<span class="pl-k">return</span> e},<span class="pl-en">write</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">tty</span><span class="pl-k">||!</span><span class="pl-smi">a</span>.<span class="pl-smi">tty</span>.<span class="pl-smi">yb</span>.<span class="pl-smi">Lb</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">6</span>);</td>
      </tr>
      <tr>
        <td id="L115" class="blob-num js-line-number" data-line-number="115"></td>
        <td id="LC115" class="blob-code blob-code-inner js-file-line"><span class="pl-k">try</span>{<span class="pl-k">for</span>(<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>d;e<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">tty</span>.<span class="pl-smi">yb</span>.<span class="pl-en">Lb</span>(<span class="pl-smi">a</span>.<span class="pl-smi">tty</span>,b[c<span class="pl-k">+</span>e])}<span class="pl-k">catch</span>(g){<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">5</span>);}d<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">timestamp</span><span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>());<span class="pl-k">return</span> e}},Ib<span class="pl-k">=</span>{<span class="pl-en">Vb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-c1">input</span>.<span class="pl-c1">length</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(za){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">Buffer</span>.<span class="pl-smi">ub</span><span class="pl-k">?</span><span class="pl-smi">Buffer</span>.<span class="pl-en">ub</span>(<span class="pl-c1">256</span>)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Buffer</span>(<span class="pl-c1">256</span>),d<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">process</span>.<span class="pl-smi">stdin</span>.<span class="pl-smi">fd</span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>win32<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span><span class="pl-c1">process</span>.<span class="pl-c1">platform</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">try</span>{e<span class="pl-k">=</span><span class="pl-smi">fs</span>.<span class="pl-en">openSync</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/dev/stdin<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>),g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">catch</span>(k){}}<span class="pl-k">try</span>{d<span class="pl-k">=</span><span class="pl-smi">fs</span>.<span class="pl-en">readSync</span>(e,c,<span class="pl-c1">0</span>,<span class="pl-c1">256</span>,<span class="pl-c1">null</span>)}<span class="pl-k">catch</span>(k){<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">!=</span><span class="pl-smi">k</span>.<span class="pl-c1">toString</span>().<span class="pl-c1">indexOf</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>EOF<span class="pl-pds">&quot;</span></span>))d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span> <span class="pl-k">throw</span> k;}g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">fs</span>.<span class="pl-en">closeSync</span>(e);<span class="pl-c1">0</span><span class="pl-k">&lt;</span>d<span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">slice</span>(<span class="pl-c1">0</span>,d).<span class="pl-c1">toString</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>utf-8<span class="pl-pds">&quot;</span></span>)<span class="pl-k">:</span>b<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-k">else</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!=</span></td>
      </tr>
      <tr>
        <td id="L116" class="blob-num js-line-number" data-line-number="116"></td>
        <td id="LC116" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> <span class="pl-c1">window</span><span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> <span class="pl-c1">window</span>.<span class="pl-c1">prompt</span><span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-c1">window</span>.<span class="pl-c1">prompt</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Input: <span class="pl-pds">&quot;</span></span>),<span class="pl-c1">null</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>))<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">==</span><span class="pl-k">typeof</span> readline<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-en">readline</span>(),<span class="pl-c1">null</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-cce">\n</span><span class="pl-pds">&quot;</span></span>));<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">return</span> <span class="pl-c1">null</span>;<span class="pl-smi">a</span>.<span class="pl-c1">input</span><span class="pl-k">=</span><span class="pl-en">aa</span>(b,<span class="pl-k">!</span><span class="pl-c1">0</span>)}<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">input</span>.<span class="pl-c1">shift</span>()},<span class="pl-en">Lb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">null</span><span class="pl-k">===</span>b<span class="pl-k">||</span><span class="pl-c1">10</span><span class="pl-k">===</span>b<span class="pl-k">?</span>(<span class="pl-en">Ga</span>(<span class="pl-en">ra</span>(<span class="pl-smi">a</span>.<span class="pl-smi">output</span>,<span class="pl-c1">0</span>)),<span class="pl-smi">a</span>.<span class="pl-smi">output</span><span class="pl-k">=</span>[])<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">!=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">output</span>.<span class="pl-c1">push</span>(b)},<span class="pl-en">flush</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">output</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">output</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">Ga</span>(<span class="pl-en">ra</span>(<span class="pl-smi">a</span>.<span class="pl-smi">output</span>,<span class="pl-c1">0</span>)),<span class="pl-smi">a</span>.<span class="pl-smi">output</span><span class="pl-k">=</span>[])}},Jb<span class="pl-k">=</span>{<span class="pl-en">Lb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">null</span><span class="pl-k">===</span>b<span class="pl-k">||</span><span class="pl-c1">10</span><span class="pl-k">===</span>b<span class="pl-k">?</span>(<span class="pl-en">A</span>(<span class="pl-en">ra</span>(<span class="pl-smi">a</span>.<span class="pl-smi">output</span>,<span class="pl-c1">0</span>)),<span class="pl-smi">a</span>.<span class="pl-smi">output</span><span class="pl-k">=</span>[])<span class="pl-k">:</span><span class="pl-c1">0</span><span class="pl-k">!=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">output</span>.<span class="pl-c1">push</span>(b)},<span class="pl-en">flush</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">output</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L117" class="blob-num js-line-number" data-line-number="117"></td>
        <td id="LC117" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">output</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-en">A</span>(<span class="pl-en">ra</span>(<span class="pl-smi">a</span>.<span class="pl-smi">output</span>,<span class="pl-c1">0</span>)),<span class="pl-smi">a</span>.<span class="pl-smi">output</span><span class="pl-k">=</span>[])}},<span class="pl-c1">N</span><span class="pl-k">=</span>{pb<span class="pl-k">:</span><span class="pl-c1">null</span>,<span class="pl-en">mb</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">N</span>.<span class="pl-en">createNode</span>(<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">16895</span>,<span class="pl-c1">0</span>)},<span class="pl-en">createNode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-c1">24576</span><span class="pl-k">===</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">||</span><span class="pl-c1">4096</span><span class="pl-k">===</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">61440</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">1</span>);<span class="pl-c1">N</span>.<span class="pl-smi">pb</span><span class="pl-k">||</span>(<span class="pl-c1">N</span>.<span class="pl-smi">pb</span><span class="pl-k">=</span>{dir<span class="pl-k">:</span>{node<span class="pl-k">:</span>{ob<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">ob</span>,lb<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">lb</span>,lookup<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">lookup</span>,zb<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">zb</span>,rename<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">rename</span>,unlink<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">unlink</span>,rmdir<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">rmdir</span>,readdir<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">readdir</span>,symlink<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">symlink</span>},stream<span class="pl-k">:</span>{sb<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">sb</span>}},file<span class="pl-k">:</span>{node<span class="pl-k">:</span>{ob<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">ob</span>,lb<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">lb</span>},stream<span class="pl-k">:</span>{sb<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">sb</span>,read<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">read</span>,write<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">write</span>,Nb<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">Nb</span>,Db<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">Db</span>,</td>
      </tr>
      <tr>
        <td id="L118" class="blob-num js-line-number" data-line-number="118"></td>
        <td id="LC118" class="blob-code blob-code-inner js-file-line">Eb<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">Eb</span>}},link<span class="pl-k">:</span>{node<span class="pl-k">:</span>{ob<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">ob</span>,lb<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">lb</span>,readlink<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">readlink</span>},stream<span class="pl-k">:</span>{}},Qb<span class="pl-k">:</span>{node<span class="pl-k">:</span>{ob<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">ob</span>,lb<span class="pl-k">:</span><span class="pl-c1">N</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">lb</span>},stream<span class="pl-k">:</span>Kb}});c<span class="pl-k">=</span><span class="pl-en">Lb</span>(a,b,c,d);<span class="pl-en">O</span>(<span class="pl-smi">c</span>.<span class="pl-smi">mode</span>)<span class="pl-k">?</span>(<span class="pl-smi">c</span>.<span class="pl-smi">fb</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-smi">pb</span>.<span class="pl-c1">dir</span>.<span class="pl-smi">node</span>,<span class="pl-smi">c</span>.<span class="pl-smi">ib</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-smi">pb</span>.<span class="pl-c1">dir</span>.<span class="pl-smi">stream</span>,<span class="pl-smi">c</span>.<span class="pl-smi">gb</span><span class="pl-k">=</span>{})<span class="pl-k">:</span><span class="pl-c1">32768</span><span class="pl-k">===</span>(<span class="pl-smi">c</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">?</span>(<span class="pl-smi">c</span>.<span class="pl-smi">fb</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-smi">pb</span>.<span class="pl-smi">file</span>.<span class="pl-smi">node</span>,<span class="pl-smi">c</span>.<span class="pl-smi">ib</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-smi">pb</span>.<span class="pl-smi">file</span>.<span class="pl-smi">stream</span>,<span class="pl-smi">c</span>.<span class="pl-smi">kb</span><span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-smi">c</span>.<span class="pl-smi">gb</span><span class="pl-k">=</span><span class="pl-c1">null</span>)<span class="pl-k">:</span><span class="pl-c1">40960</span><span class="pl-k">===</span>(<span class="pl-smi">c</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">?</span>(<span class="pl-smi">c</span>.<span class="pl-smi">fb</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-smi">pb</span>.<span class="pl-c1">link</span>.<span class="pl-smi">node</span>,<span class="pl-smi">c</span>.<span class="pl-smi">ib</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-smi">pb</span>.<span class="pl-c1">link</span>.<span class="pl-smi">stream</span>)<span class="pl-k">:</span><span class="pl-c1">8192</span><span class="pl-k">===</span>(<span class="pl-smi">c</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">fb</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-smi">pb</span>.<span class="pl-smi">Qb</span>.<span class="pl-smi">node</span>,<span class="pl-smi">c</span>.<span class="pl-smi">ib</span><span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-smi">pb</span>.<span class="pl-smi">Qb</span>.<span class="pl-smi">stream</span>);<span class="pl-smi">c</span>.<span class="pl-smi">timestamp</span><span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>();a<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>[b]<span class="pl-k">=</span>c);<span class="pl-k">return</span> c},<span class="pl-en">Uc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-smi">subarray</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L119" class="blob-num js-line-number" data-line-number="119"></td>
        <td id="LC119" class="blob-code blob-code-inner js-file-line">[],c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">kb</span>;<span class="pl-k">++</span>c)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>[c]);<span class="pl-k">return</span> b}<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">gb</span>},<span class="pl-en">Vc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-smi">subarray</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-en">subarray</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">kb</span>)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>},<span class="pl-en">Rb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-c1">0</span>;c<span class="pl-k">&gt;=</span>b<span class="pl-k">||</span>(b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b,c<span class="pl-k">*</span>(<span class="pl-c1">1048576</span><span class="pl-k">&gt;</span>c<span class="pl-k">?</span><span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-c1">1.125</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>),<span class="pl-c1">0</span><span class="pl-k">!=</span>c<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(b,<span class="pl-c1">256</span>)),c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>,<span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(b),<span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">kb</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">set</span>(<span class="pl-smi">c</span>.<span class="pl-en">subarray</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-smi">kb</span>),<span class="pl-c1">0</span>))},<span class="pl-en">qc</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">kb</span><span class="pl-k">!=</span>b)<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>b)<span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">=</span><span class="pl-c1">null</span>,<span class="pl-smi">a</span>.<span class="pl-smi">kb</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-smi">subarray</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>;<span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-k">new</span> <span class="pl-en">ArrayBuffer</span>(b));c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">set</span>(<span class="pl-smi">c</span>.<span class="pl-en">subarray</span>(<span class="pl-c1">0</span>,<span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(b,</td>
      </tr>
      <tr>
        <td id="L120" class="blob-num js-line-number" data-line-number="120"></td>
        <td id="LC120" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">kb</span>)))}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">=</span>[]),<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">length</span><span class="pl-k">&gt;</span>b)<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">length</span><span class="pl-k">=</span>b;<span class="pl-k">else</span> <span class="pl-k">for</span>(;<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">length</span><span class="pl-k">&lt;</span>b;)<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">push</span>(<span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-smi">kb</span><span class="pl-k">=</span>b}},fb<span class="pl-k">:</span>{<span class="pl-en">ob</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>{};<span class="pl-smi">b</span>.<span class="pl-smi">dev</span><span class="pl-k">=</span><span class="pl-c1">8192</span><span class="pl-k">===</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">:</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">ino</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span>;<span class="pl-smi">b</span>.<span class="pl-smi">mode</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">mode</span>;<span class="pl-smi">b</span>.<span class="pl-smi">nlink</span><span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-smi">b</span>.<span class="pl-smi">uid</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-smi">gid</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-smi">rdev</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">rdev</span>;<span class="pl-en">O</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mode</span>)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">4096</span><span class="pl-k">:</span><span class="pl-c1">32768</span><span class="pl-k">===</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">kb</span><span class="pl-k">:</span><span class="pl-c1">40960</span><span class="pl-k">===</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">?</span><span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">link</span>.<span class="pl-c1">length</span><span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-smi">b</span>.<span class="pl-smi">atime</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-smi">a</span>.<span class="pl-smi">timestamp</span>);<span class="pl-smi">b</span>.<span class="pl-smi">mtime</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-smi">a</span>.<span class="pl-smi">timestamp</span>);<span class="pl-smi">b</span>.<span class="pl-smi">ctime</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-smi">a</span>.<span class="pl-smi">timestamp</span>);<span class="pl-smi">b</span>.<span class="pl-smi">tb</span><span class="pl-k">=</span><span class="pl-c1">4096</span>;<span class="pl-smi">b</span>.<span class="pl-smi">blocks</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">ceil</span>(<span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">/</span><span class="pl-smi">b</span>.<span class="pl-smi">tb</span>);<span class="pl-k">return</span> b},<span class="pl-en">lb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L121" class="blob-num js-line-number" data-line-number="121"></td>
        <td id="LC121" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mode</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">mode</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">timestamp</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">timestamp</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">timestamp</span>);<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">N</span>.<span class="pl-en">qc</span>(a,<span class="pl-smi">b</span>.<span class="pl-c1">size</span>)},<span class="pl-en">lookup</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">throw</span> Mb[<span class="pl-c1">2</span>];},<span class="pl-en">zb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> <span class="pl-c1">N</span>.<span class="pl-en">createNode</span>(a,b,c,d)},<span class="pl-en">rename</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-en">O</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mode</span>)){<span class="pl-k">try</span>{<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">Nb</span>(b,c)}<span class="pl-k">catch</span>(g){}<span class="pl-k">if</span>(d)<span class="pl-k">for</span>(<span class="pl-k">var</span> e <span class="pl-k">in</span> <span class="pl-smi">d</span>.<span class="pl-smi">gb</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">39</span>);}<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-c1">parent</span>.<span class="pl-smi">gb</span>[<span class="pl-smi">a</span>.<span class="pl-c1">name</span>];<span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>c;<span class="pl-smi">b</span>.<span class="pl-smi">gb</span>[c]<span class="pl-k">=</span>a;<span class="pl-smi">a</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span>b},<span class="pl-en">unlink</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-smi">gb</span>[b]},<span class="pl-en">rmdir</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Nb</span>(a,b),d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> <span class="pl-smi">c</span>.<span class="pl-smi">gb</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">39</span>);<span class="pl-k">delete</span> <span class="pl-smi">a</span>.<span class="pl-smi">gb</span>[b]},<span class="pl-en">readdir</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L122" class="blob-num js-line-number" data-line-number="122"></td>
        <td id="LC122" class="blob-code blob-code-inner js-file-line">[<span class="pl-s"><span class="pl-pds">&quot;</span>.<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>..<span class="pl-pds">&quot;</span></span>],c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> <span class="pl-smi">a</span>.<span class="pl-smi">gb</span>)<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-en">hasOwnProperty</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">push</span>(c);<span class="pl-k">return</span> b},<span class="pl-en">symlink</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span><span class="pl-c1">N</span>.<span class="pl-en">createNode</span>(a,b,<span class="pl-c1">41471</span>,<span class="pl-c1">0</span>);<span class="pl-smi">a</span>.<span class="pl-c1">link</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> a},<span class="pl-en">readlink</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">40960</span><span class="pl-k">!==</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">link</span>}},ib<span class="pl-k">:</span>{<span class="pl-en">read</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">gb</span>;<span class="pl-k">if</span>(e<span class="pl-k">&gt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">kb</span>)<span class="pl-k">return</span> <span class="pl-c1">0</span>;a<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">kb</span><span class="pl-k">-</span>e,d);<span class="pl-k">if</span>(<span class="pl-c1">8</span><span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-smi">g</span>.<span class="pl-smi">subarray</span>)<span class="pl-smi">b</span>.<span class="pl-c1">set</span>(<span class="pl-smi">g</span>.<span class="pl-en">subarray</span>(e,e<span class="pl-k">+</span>a),c);<span class="pl-k">else</span> <span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a;d<span class="pl-k">++</span>)b[c<span class="pl-k">+</span>d]<span class="pl-k">=</span>g[e<span class="pl-k">+</span>d];<span class="pl-k">return</span> a},<span class="pl-en">write</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>){g<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-k">return</span> <span class="pl-c1">0</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>;<span class="pl-smi">a</span>.<span class="pl-smi">timestamp</span><span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>();<span class="pl-k">if</span>(<span class="pl-smi">b</span>.<span class="pl-smi">subarray</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L123" class="blob-num js-line-number" data-line-number="123"></td>
        <td id="LC123" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">||</span><span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-smi">subarray</span>)){<span class="pl-k">if</span>(g)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-en">subarray</span>(c,c<span class="pl-k">+</span>d),<span class="pl-smi">a</span>.<span class="pl-smi">kb</span><span class="pl-k">=</span>d;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">kb</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>e)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">gb</span><span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-smi">b</span>.<span class="pl-en">subarray</span>(c,c<span class="pl-k">+</span>d)),<span class="pl-smi">a</span>.<span class="pl-smi">kb</span><span class="pl-k">=</span>d;<span class="pl-k">if</span>(e<span class="pl-k">+</span>d<span class="pl-k">&lt;=</span><span class="pl-smi">a</span>.<span class="pl-smi">kb</span>)<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">set</span>(<span class="pl-smi">b</span>.<span class="pl-en">subarray</span>(c,c<span class="pl-k">+</span>d),e),d}<span class="pl-c1">N</span>.<span class="pl-en">Rb</span>(a,e<span class="pl-k">+</span>d);<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-smi">subarray</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">subarray</span>)<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>.<span class="pl-c1">set</span>(<span class="pl-smi">b</span>.<span class="pl-en">subarray</span>(c,c<span class="pl-k">+</span>d),e);<span class="pl-k">else</span> <span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>d;g<span class="pl-k">++</span>)<span class="pl-smi">a</span>.<span class="pl-smi">gb</span>[e<span class="pl-k">+</span>g]<span class="pl-k">=</span>b[c<span class="pl-k">+</span>g];<span class="pl-smi">a</span>.<span class="pl-smi">kb</span><span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-smi">kb</span>,e<span class="pl-k">+</span>d);<span class="pl-k">return</span> d},<span class="pl-en">sb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">1</span><span class="pl-k">===</span>c<span class="pl-k">?</span>b<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">32768</span><span class="pl-k">===</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">kb</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-k">return</span> b},<span class="pl-en">Nb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">N</span>.<span class="pl-en">Rb</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>,b<span class="pl-k">+</span>c);<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">kb</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L124" class="blob-num js-line-number" data-line-number="124"></td>
        <td id="LC124" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">kb</span>,b<span class="pl-k">+</span>c)},<span class="pl-en">Db</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>,<span class="pl-smi">k</span>){<span class="pl-k">if</span>(<span class="pl-c1">32768</span><span class="pl-k">!==</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">19</span>);c<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">gb</span>;<span class="pl-k">if</span>(k<span class="pl-k">&amp;</span><span class="pl-c1">2</span><span class="pl-k">||</span><span class="pl-smi">c</span>.<span class="pl-smi">buffer</span><span class="pl-k">!==</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">buffer</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">buffer</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>e<span class="pl-k">||</span>e<span class="pl-k">+</span>d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">kb</span>)<span class="pl-smi">c</span>.<span class="pl-smi">subarray</span><span class="pl-k">?</span>c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-en">subarray</span>(e,e<span class="pl-k">+</span>d)<span class="pl-k">:</span>c<span class="pl-k">=</span><span class="pl-c1">Array</span>.<span class="pl-c1">prototype</span>.<span class="pl-smi">slice</span>.<span class="pl-c1">call</span>(c,e,e<span class="pl-k">+</span>d);a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;e<span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">buffer</span><span class="pl-k">==</span><span class="pl-smi">l</span>.<span class="pl-smi">buffer</span>;d<span class="pl-k">=</span><span class="pl-en">Ya</span>(d);<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">12</span>);(e<span class="pl-k">?</span>l<span class="pl-k">:</span>b).<span class="pl-c1">set</span>(c,d)}<span class="pl-k">else</span> a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>,d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">byteOffset</span>;<span class="pl-k">return</span>{pc<span class="pl-k">:</span>d,Gb<span class="pl-k">:</span>a}},<span class="pl-en">Eb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-c1">32768</span><span class="pl-k">!==</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">19</span>);<span class="pl-k">if</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">2</span>)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-c1">N</span>.<span class="pl-smi">ib</span>.<span class="pl-c1">write</span>(a,b,<span class="pl-c1">0</span>,d,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">return</span> <span class="pl-c1">0</span>}}},<span class="pl-c1">P</span><span class="pl-k">=</span>{Cb<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>,<span class="pl-en">sc</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-c1">P</span>.<span class="pl-smi">Cb</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L125" class="blob-num js-line-number" data-line-number="125"></td>
        <td id="LC125" class="blob-code blob-code-inner js-file-line"><span class="pl-k">!!</span><span class="pl-c1">process</span>.<span class="pl-c1">platform</span>.<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-k">^</span>win<span class="pl-pds">/</span></span>);<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-c1">process</span>.<span class="pl-en">binding</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>constants<span class="pl-pds">&quot;</span></span>);<span class="pl-smi">a</span>.<span class="pl-smi">fs</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">fs</span>);<span class="pl-c1">P</span>.<span class="pl-smi">Sb</span><span class="pl-k">=</span>{<span class="pl-c1">1024</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">O_APPEND</span>,<span class="pl-c1">64</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">O_CREAT</span>,<span class="pl-c1">128</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">O_EXCL</span>,<span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">O_RDONLY</span>,<span class="pl-c1">2</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">O_RDWR</span>,<span class="pl-c1">4096</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">O_SYNC</span>,<span class="pl-c1">512</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">O_TRUNC</span>,<span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">O_WRONLY</span>}},<span class="pl-en">Pb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-smi">Buffer</span>.<span class="pl-smi">alloc</span><span class="pl-k">?</span><span class="pl-smi">Buffer</span>.<span class="pl-en">from</span>(a)<span class="pl-k">:</span><span class="pl-k">new</span> <span class="pl-en">Buffer</span>(a)},<span class="pl-en">mb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-en">assert</span>(Aa);<span class="pl-k">return</span> <span class="pl-c1">P</span>.<span class="pl-en">createNode</span>(<span class="pl-c1">null</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">P</span>.<span class="pl-en">Ub</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Kb</span>.<span class="pl-smi">root</span>),<span class="pl-c1">0</span>)},<span class="pl-en">createNode</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">O</span>(c)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">32768</span><span class="pl-k">!==</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">40960</span><span class="pl-k">!==</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">61440</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);a<span class="pl-k">=</span><span class="pl-en">Lb</span>(a,b,c);<span class="pl-smi">a</span>.<span class="pl-smi">fb</span><span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-smi">fb</span>;<span class="pl-smi">a</span>.<span class="pl-smi">ib</span><span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-smi">ib</span>;<span class="pl-k">return</span> a},<span class="pl-en">Ub</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">try</span>{<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">fs</span>.<span class="pl-en">lstatSync</span>(a);</td>
      </tr>
      <tr>
        <td id="L126" class="blob-num js-line-number" data-line-number="126"></td>
        <td id="LC126" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">P</span>.<span class="pl-smi">Cb</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">mode</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">mode</span><span class="pl-k">|</span>(<span class="pl-smi">b</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">292</span>)<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>)}<span class="pl-k">catch</span>(c){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> c;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">hb</span>);}<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">mode</span>},<span class="pl-en">nb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span>[];<span class="pl-smi">a</span>.<span class="pl-c1">parent</span><span class="pl-k">!==</span>a;)<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-c1">name</span>),a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parent</span>;<span class="pl-smi">b</span>.<span class="pl-c1">push</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mb</span>.<span class="pl-smi">Kb</span>.<span class="pl-smi">root</span>);<span class="pl-smi">b</span>.<span class="pl-c1">reverse</span>();<span class="pl-k">return</span> <span class="pl-smi">Bb</span>.<span class="pl-c1">apply</span>(<span class="pl-c1">null</span>,b)},<span class="pl-en">ic</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">&amp;=</span><span class="pl-k">-</span><span class="pl-c1">2656257</span>;<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,c;<span class="pl-k">for</span>(c <span class="pl-k">in</span> <span class="pl-c1">P</span>.<span class="pl-smi">Sb</span>)a<span class="pl-k">&amp;</span>c<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">|=</span><span class="pl-c1">P</span>.<span class="pl-smi">Sb</span>[c],a<span class="pl-k">^=</span>c);<span class="pl-k">if</span>(a)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-k">return</span> b},fb<span class="pl-k">:</span>{<span class="pl-en">ob</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a);<span class="pl-k">try</span>{<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">fs</span>.<span class="pl-en">lstatSync</span>(a)}<span class="pl-k">catch</span>(c){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> c;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">hb</span>);}<span class="pl-c1">P</span>.<span class="pl-smi">Cb</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">tb</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">tb</span><span class="pl-k">=</span><span class="pl-c1">4096</span>);<span class="pl-c1">P</span>.<span class="pl-smi">Cb</span><span class="pl-k">&amp;&amp;!</span><span class="pl-smi">b</span>.<span class="pl-smi">blocks</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">b</span>.<span class="pl-smi">blocks</span><span class="pl-k">=</span>(<span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">+</span><span class="pl-smi">b</span>.<span class="pl-smi">tb</span><span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L127" class="blob-num js-line-number" data-line-number="127"></td>
        <td id="LC127" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>.<span class="pl-smi">tb</span><span class="pl-k">|</span><span class="pl-c1">0</span>);<span class="pl-k">return</span>{dev<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">dev</span>,ino<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">ino</span>,mode<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">mode</span>,nlink<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">nlink</span>,uid<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">uid</span>,gid<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">gid</span>,rdev<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">rdev</span>,size<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-c1">size</span>,atime<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">atime</span>,mtime<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">mtime</span>,ctime<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">ctime</span>,tb<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">tb</span>,blocks<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">blocks</span>}},<span class="pl-en">lb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a);<span class="pl-k">try</span>{<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">fs</span>.<span class="pl-en">chmodSync</span>(c,<span class="pl-smi">b</span>.<span class="pl-smi">mode</span>),<span class="pl-smi">a</span>.<span class="pl-smi">mode</span><span class="pl-k">=</span><span class="pl-smi">b</span>.<span class="pl-smi">mode</span>),<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">!==</span><span class="pl-smi">b</span>.<span class="pl-c1">size</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">fs</span>.<span class="pl-en">truncateSync</span>(c,<span class="pl-smi">b</span>.<span class="pl-c1">size</span>)}<span class="pl-k">catch</span>(d){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> d;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">lookup</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a),b);c<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-en">Ub</span>(c);<span class="pl-k">return</span> <span class="pl-c1">P</span>.<span class="pl-en">createNode</span>(a,b,c)},<span class="pl-en">zb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){a<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-en">createNode</span>(a,b,c,d);b<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a);<span class="pl-k">try</span>{<span class="pl-en">O</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mode</span>)<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L128" class="blob-num js-line-number" data-line-number="128"></td>
        <td id="LC128" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">fs</span>.<span class="pl-en">mkdirSync</span>(b,<span class="pl-smi">a</span>.<span class="pl-smi">mode</span>)<span class="pl-k">:</span><span class="pl-smi">fs</span>.<span class="pl-en">writeFileSync</span>(b,<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,{mode<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">mode</span>})}<span class="pl-k">catch</span>(e){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">e</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> e;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">hb</span>);}<span class="pl-k">return</span> a},<span class="pl-en">rename</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a);b<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">P</span>.<span class="pl-en">nb</span>(b),c);<span class="pl-k">try</span>{<span class="pl-smi">fs</span>.<span class="pl-en">renameSync</span>(a,b)}<span class="pl-k">catch</span>(d){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> d;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">unlink</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a),b);<span class="pl-k">try</span>{<span class="pl-smi">fs</span>.<span class="pl-en">unlinkSync</span>(a)}<span class="pl-k">catch</span>(c){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> c;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">rmdir</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a),b);<span class="pl-k">try</span>{<span class="pl-smi">fs</span>.<span class="pl-en">rmdirSync</span>(a)}<span class="pl-k">catch</span>(c){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> c;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">readdir</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a);<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">fs</span>.<span class="pl-en">readdirSync</span>(a)}<span class="pl-k">catch</span>(b){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> b;</td>
      </tr>
      <tr>
        <td id="L129" class="blob-num js-line-number" data-line-number="129"></td>
        <td id="LC129" class="blob-code blob-code-inner js-file-line"><span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">symlink</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a),b);<span class="pl-k">try</span>{<span class="pl-smi">fs</span>.<span class="pl-en">symlinkSync</span>(c,a)}<span class="pl-k">catch</span>(d){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> d;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">readlink</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-en">nb</span>(a);<span class="pl-k">try</span>{<span class="pl-k">return</span> b<span class="pl-k">=</span><span class="pl-smi">fs</span>.<span class="pl-en">readlinkSync</span>(b),b<span class="pl-k">=</span><span class="pl-smi">Ob</span>.<span class="pl-en">relative</span>(<span class="pl-smi">Ob</span>.<span class="pl-en">resolve</span>(<span class="pl-smi">a</span>.<span class="pl-smi">mb</span>.<span class="pl-smi">Kb</span>.<span class="pl-smi">root</span>),b)}<span class="pl-k">catch</span>(c){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> c;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">hb</span>);}}},ib<span class="pl-k">:</span>{<span class="pl-en">open</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">P</span>.<span class="pl-en">nb</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>);<span class="pl-k">try</span>{<span class="pl-c1">32768</span><span class="pl-k">===</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Ab</span><span class="pl-k">=</span><span class="pl-smi">fs</span>.<span class="pl-en">openSync</span>(b,<span class="pl-c1">P</span>.<span class="pl-en">ic</span>(<span class="pl-smi">a</span>.<span class="pl-smi">flags</span>)))}<span class="pl-k">catch</span>(c){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">c</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> c;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">close</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">try</span>{<span class="pl-c1">32768</span><span class="pl-k">===</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L130" class="blob-num js-line-number" data-line-number="130"></td>
        <td id="LC130" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">a</span>.<span class="pl-smi">Ab</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">fs</span>.<span class="pl-en">closeSync</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Ab</span>)}<span class="pl-k">catch</span>(b){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-c1">code</span>)<span class="pl-k">throw</span> b;<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">b</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">read</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">fs</span>.<span class="pl-en">readSync</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Ab</span>,<span class="pl-c1">P</span>.<span class="pl-en">Pb</span>(<span class="pl-smi">b</span>.<span class="pl-smi">buffer</span>),c,d,e)}<span class="pl-k">catch</span>(g){<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">write</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">try</span>{<span class="pl-k">return</span> <span class="pl-smi">fs</span>.<span class="pl-en">writeSync</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Ab</span>,<span class="pl-c1">P</span>.<span class="pl-en">Pb</span>(<span class="pl-smi">b</span>.<span class="pl-smi">buffer</span>),c,d,e)}<span class="pl-k">catch</span>(g){<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">hb</span>);}},<span class="pl-en">sb</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>c)b<span class="pl-k">+=</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">===</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">32768</span><span class="pl-k">===</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>))<span class="pl-k">try</span>{b<span class="pl-k">+=</span><span class="pl-smi">fs</span>.<span class="pl-en">fstatSync</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Ab</span>).<span class="pl-c1">size</span>}<span class="pl-k">catch</span>(d){<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">hb</span>);}<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-k">return</span> b}}},Pb<span class="pl-k">=</span><span class="pl-c1">null</span>,Qb<span class="pl-k">=</span>{},</td>
      </tr>
      <tr>
        <td id="L131" class="blob-num js-line-number" data-line-number="131"></td>
        <td id="LC131" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">Q</span><span class="pl-k">=</span>[],Rb<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-c1">null</span>,Sb<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>,<span class="pl-c1">T</span><span class="pl-k">=</span>{},<span class="pl-c1">M</span><span class="pl-k">=</span><span class="pl-c1">null</span>,Mb<span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L132" class="blob-num js-line-number" data-line-number="132"></td>
        <td id="LC132" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">U</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){a<span class="pl-k">=</span><span class="pl-en">Db</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>,a);b<span class="pl-k">=</span>b<span class="pl-k">||</span>{};<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">return</span>{path<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,node<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-k">var</span> c<span class="pl-k">=</span>{Tb<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,Mb<span class="pl-k">:</span><span class="pl-c1">0</span>},d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> c)<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>b[d]<span class="pl-k">&amp;&amp;</span>(b[d]<span class="pl-k">=</span>c[d]);<span class="pl-k">if</span>(<span class="pl-c1">8</span><span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-smi">Mb</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">40</span>);a<span class="pl-k">=</span><span class="pl-en">ub</span>(<span class="pl-smi">a</span>.<span class="pl-c1">split</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>).<span class="pl-en">filter</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span><span class="pl-k">!!</span>a}),<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">var</span> e<span class="pl-k">=</span>Pb;c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span>;d<span class="pl-k">++</span>){<span class="pl-k">var</span> g<span class="pl-k">=</span>d<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-c1">parent</span>)<span class="pl-k">break</span>;e<span class="pl-k">=</span><span class="pl-en">Nb</span>(e,a[d]);c<span class="pl-k">=</span><span class="pl-en">n</span>(c,a[d]);<span class="pl-smi">e</span>.<span class="pl-smi">wb</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-k">!</span>g<span class="pl-k">||</span>g<span class="pl-k">&amp;&amp;</span><span class="pl-smi">b</span>.<span class="pl-smi">Tb</span>)<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">wb</span>.<span class="pl-smi">root</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>g<span class="pl-k">||</span><span class="pl-smi">b</span>.<span class="pl-smi">vb</span>)<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">40960</span><span class="pl-k">===</span>(<span class="pl-smi">e</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>);)<span class="pl-k">if</span>(e<span class="pl-k">=</span><span class="pl-en">Tb</span>(c),c<span class="pl-k">=</span><span class="pl-en">Db</span>(<span class="pl-en">zb</span>(c),e),e<span class="pl-k">=</span><span class="pl-en">U</span>(c,{Mb<span class="pl-k">:</span><span class="pl-smi">b</span>.<span class="pl-smi">Mb</span>}).<span class="pl-smi">node</span>,<span class="pl-c1">40</span><span class="pl-k">&lt;</span>g<span class="pl-k">++</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">40</span>);}<span class="pl-k">return</span>{path<span class="pl-k">:</span>c,node<span class="pl-k">:</span>e}}</td>
      </tr>
      <tr>
        <td id="L133" class="blob-num js-line-number" data-line-number="133"></td>
        <td id="LC133" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Ub</span>(<span class="pl-smi">a</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> b;;){<span class="pl-k">if</span>(a<span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">parent</span>)<span class="pl-k">return</span> a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">mb</span>.<span class="pl-smi">Wb</span>,b<span class="pl-k">?</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">?</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">:</span>a<span class="pl-k">+</span>b<span class="pl-k">:</span>a;b<span class="pl-k">=</span>b<span class="pl-k">?</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-c1">name</span>;a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">parent</span>}}function Vb(a,b){for(var c=0,d=0;d&lt;b.length;d++)c=(c&lt;&lt;5)-c+b.charCodeAt(d)|0;return(a+c&gt;&gt;&gt;0)%R.length}function Wb(a){var b=Vb(a.parent.id,a.name);a.xb=R[b];R[b]=a}function Xb(a){var b=Vb(a.parent.id,a.name);if(R[b]===a)R[b]=a.xb;else for(b=R[b];b;){if(b.xb===a){b.xb=a.xb;break}b=b.xb}}</td>
      </tr>
      <tr>
        <td id="L134" class="blob-num js-line-number" data-line-number="134"></td>
        <td id="LC134" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Nb</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c;<span class="pl-k">if</span>(c<span class="pl-k">=</span>(c<span class="pl-k">=</span><span class="pl-en">Yb</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>))<span class="pl-k">?</span>c<span class="pl-k">:</span><span class="pl-smi">a</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">lookup</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">13</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(c,a);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">R</span>[<span class="pl-en">Vb</span>(<span class="pl-smi">a</span>.<span class="pl-c1">id</span>,b)];c;c<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">xb</span>){<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-c1">name</span>;<span class="pl-k">if</span>(<span class="pl-smi">c</span>.<span class="pl-c1">parent</span>.<span class="pl-c1">id</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-c1">id</span><span class="pl-k">&amp;&amp;</span>d<span class="pl-k">===</span>b)<span class="pl-k">return</span> c}<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-smi">fb</span>.<span class="pl-en">lookup</span>(a,b)}</td>
      </tr>
      <tr>
        <td id="L135" class="blob-num js-line-number" data-line-number="135"></td>
        <td id="LC135" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Lb</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){Zb<span class="pl-k">||</span>(<span class="pl-en">Zb</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){a<span class="pl-k">||</span>(a<span class="pl-k">=</span><span class="pl-c1">this</span>);<span class="pl-c1">this</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span>a;<span class="pl-c1">this</span>.<span class="pl-smi">mb</span><span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">mb</span>;<span class="pl-c1">this</span>.<span class="pl-smi">wb</span><span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-c1">this</span>.<span class="pl-c1">id</span><span class="pl-k">=</span>Rb<span class="pl-k">++</span>;<span class="pl-c1">this</span>.<span class="pl-c1">name</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-smi">mode</span><span class="pl-k">=</span>c;<span class="pl-c1">this</span>.<span class="pl-smi">fb</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">ib</span><span class="pl-k">=</span>{};<span class="pl-c1">this</span>.<span class="pl-smi">rdev</span><span class="pl-k">=</span>d},<span class="pl-smi">Zb</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{},<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">Zb</span>.<span class="pl-c1">prototype</span>,{read<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">365</span><span class="pl-k">===</span>(<span class="pl-c1">this</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">365</span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">mode</span><span class="pl-k">|=</span><span class="pl-c1">365</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;=</span><span class="pl-k">-</span><span class="pl-c1">366</span>}},write<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">146</span><span class="pl-k">===</span>(<span class="pl-c1">this</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">146</span>)},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){a<span class="pl-k">?</span><span class="pl-c1">this</span>.<span class="pl-smi">mode</span><span class="pl-k">|=</span><span class="pl-c1">146</span><span class="pl-k">:</span><span class="pl-c1">this</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;=</span><span class="pl-k">-</span><span class="pl-c1">147</span>}}}));a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Zb</span>(a,b,c,d);<span class="pl-en">Wb</span>(a);<span class="pl-k">return</span> a}</td>
      </tr>
      <tr>
        <td id="L136" class="blob-num js-line-number" data-line-number="136"></td>
        <td id="LC136" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">O</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> <span class="pl-c1">16384</span><span class="pl-k">===</span>(a<span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)}<span class="pl-k">var</span> $b<span class="pl-k">=</span>{r<span class="pl-k">:</span><span class="pl-c1">0</span>,rs<span class="pl-k">:</span><span class="pl-c1">1052672</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>r+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">2</span>,w<span class="pl-k">:</span><span class="pl-c1">577</span>,wx<span class="pl-k">:</span><span class="pl-c1">705</span>,xw<span class="pl-k">:</span><span class="pl-c1">705</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>w+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">578</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>wx+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">706</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>xw+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">706</span>,a<span class="pl-k">:</span><span class="pl-c1">1089</span>,ax<span class="pl-k">:</span><span class="pl-c1">1217</span>,xa<span class="pl-k">:</span><span class="pl-c1">1217</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>a+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1090</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>ax+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1218</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>xa+<span class="pl-pds">&quot;</span></span><span class="pl-k">:</span><span class="pl-c1">1218</span>};<span class="pl-k">function</span> <span class="pl-en">ac</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span>[<span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>rw<span class="pl-pds">&quot;</span></span>][a<span class="pl-k">&amp;</span><span class="pl-c1">3</span>];a<span class="pl-k">&amp;</span><span class="pl-c1">512</span><span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>);<span class="pl-k">return</span> b}function Yb(a,b){if(Sb)return 0;if(-1===b.indexOf(&quot;r&quot;)||a.mode&amp;292){if(-1!==b.indexOf(&quot;w&quot;)&amp;&amp;!(a.mode&amp;146)||-1!==b.indexOf(&quot;x&quot;)&amp;&amp;!(a.mode&amp;73))return 13}else return 13;return 0}function bc(a,b){try{return Nb(a,b),17}catch(c){}return Yb(a,&quot;wx&quot;)}</td>
      </tr>
      <tr>
        <td id="L137" class="blob-num js-line-number" data-line-number="137"></td>
        <td id="LC137" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">cc</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">try</span>{<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">Nb</span>(a,b)}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span> <span class="pl-smi">e</span>.<span class="pl-smi">hb</span>}<span class="pl-k">if</span>(a<span class="pl-k">=</span><span class="pl-en">Yb</span>(a,<span class="pl-s"><span class="pl-pds">&quot;</span>wx<span class="pl-pds">&quot;</span></span>))<span class="pl-k">return</span> a;<span class="pl-k">if</span>(c){<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">O</span>(<span class="pl-smi">d</span>.<span class="pl-smi">mode</span>))<span class="pl-k">return</span> <span class="pl-c1">20</span>;<span class="pl-k">if</span>(d<span class="pl-k">===</span><span class="pl-smi">d</span>.<span class="pl-c1">parent</span><span class="pl-k">||</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-en">Ub</span>(d))<span class="pl-k">return</span> <span class="pl-c1">16</span>}<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-en">O</span>(<span class="pl-smi">d</span>.<span class="pl-smi">mode</span>))<span class="pl-k">return</span> <span class="pl-c1">21</span>;<span class="pl-k">return</span> <span class="pl-c1">0</span>}function dc(a){var b=4096;for(a=a||0;a&lt;=b;a++)if(!Q[a])return a;throw new M(24);}</td>
      </tr>
      <tr>
        <td id="L138" class="blob-num js-line-number" data-line-number="138"></td>
        <td id="LC138" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">uc</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){Fc<span class="pl-k">||</span>(<span class="pl-en">Fc</span><span class="pl-k">=</span><span class="pl-k">function</span>(){},<span class="pl-smi">Fc</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span>{},<span class="pl-c1">Object</span>.<span class="pl-en">defineProperties</span>(<span class="pl-smi">Fc</span>.<span class="pl-c1">prototype</span>,{object<span class="pl-k">:</span>{<span class="pl-en">get</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">this</span>.<span class="pl-smi">node</span>},<span class="pl-en">set</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">node</span><span class="pl-k">=</span>a}}}));<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Fc</span>,d;<span class="pl-k">for</span>(d <span class="pl-k">in</span> a)c[d]<span class="pl-k">=</span>a[d];a<span class="pl-k">=</span>c;b<span class="pl-k">=</span><span class="pl-en">dc</span>(b);<span class="pl-smi">a</span>.<span class="pl-smi">fd</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">Q</span>[b]<span class="pl-k">=</span>a}<span class="pl-k">var</span> Kb<span class="pl-k">=</span>{<span class="pl-en">open</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">ib</span><span class="pl-k">=</span>Qb[<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">rdev</span>].<span class="pl-smi">ib</span>;<span class="pl-smi">a</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">open</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">ib</span>.<span class="pl-c1">open</span>(a)},<span class="pl-en">sb</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">29</span>);}};<span class="pl-k">function</span> <span class="pl-en">Gb</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){Qb[a]<span class="pl-k">=</span>{ib<span class="pl-k">:</span>b}}</td>
      </tr>
      <tr>
        <td id="L139" class="blob-num js-line-number" data-line-number="139"></td>
        <td id="LC139" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Gc</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>b,d<span class="pl-k">=</span><span class="pl-k">!</span>b;<span class="pl-k">if</span>(c<span class="pl-k">&amp;&amp;</span>Pb)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">16</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>c<span class="pl-k">&amp;&amp;!</span>d){<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">U</span>(b,{Tb<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>});b<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">path</span>;e<span class="pl-k">=</span><span class="pl-smi">e</span>.<span class="pl-smi">node</span>;<span class="pl-k">if</span>(<span class="pl-smi">e</span>.<span class="pl-smi">wb</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">16</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-en">O</span>(<span class="pl-smi">e</span>.<span class="pl-smi">mode</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">20</span>);}b<span class="pl-k">=</span>{type<span class="pl-k">:</span>a,Kb<span class="pl-k">:</span>{},Wb<span class="pl-k">:</span>b,oc<span class="pl-k">:</span>[]};a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">mb</span>(b);<span class="pl-smi">a</span>.<span class="pl-smi">mb</span><span class="pl-k">=</span>b;<span class="pl-smi">b</span>.<span class="pl-smi">root</span><span class="pl-k">=</span>a;c<span class="pl-k">?</span>Pb<span class="pl-k">=</span>a<span class="pl-k">:</span>e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">e</span>.<span class="pl-smi">wb</span><span class="pl-k">=</span>b,<span class="pl-smi">e</span>.<span class="pl-smi">mb</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">mb</span>.<span class="pl-smi">oc</span>.<span class="pl-c1">push</span>(b))}function ea(a,b,c){var d=U(a,{parent:!0}).node;a=Ab(a);if(!a||&quot;.&quot;===a||&quot;..&quot;===a)throw new M(22);var e=bc(d,a);if(e)throw new M(e);if(!d.fb.zb)throw new M(1);return d.fb.zb(d,a,b,c)}function V(a,b){ea(a,(void 0!==b?b:511)&amp;1023|16384,0)}</td>
      </tr>
      <tr>
        <td id="L140" class="blob-num js-line-number" data-line-number="140"></td>
        <td id="LC140" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Hc</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> c<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>b,b<span class="pl-k">=</span><span class="pl-c1">438</span>);<span class="pl-en">ea</span>(a,b<span class="pl-k">|</span><span class="pl-c1">8192</span>,c)}function Ic(a,b){if(!Db(a))throw new M(2);var c=U(b,{parent:!0}).node;if(!c)throw new M(2);b=Ab(b);var d=bc(c,b);if(d)throw new M(d);if(!c.fb.symlink)throw new M(1);c.fb.symlink(c,b,a)}</td>
      </tr>
      <tr>
        <td id="L141" class="blob-num js-line-number" data-line-number="141"></td>
        <td id="LC141" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">sa</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">U</span>(a,{parent<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}).<span class="pl-smi">node</span>,c<span class="pl-k">=</span><span class="pl-en">Ab</span>(a),d<span class="pl-k">=</span><span class="pl-en">Nb</span>(b,c),e<span class="pl-k">=</span><span class="pl-en">cc</span>(b,c,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">if</span>(e)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(e);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">unlink</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-smi">d</span>.<span class="pl-smi">wb</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">16</span>);<span class="pl-k">try</span>{<span class="pl-c1">T</span>.<span class="pl-smi">willDeletePath</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">T</span>.<span class="pl-en">willDeletePath</span>(a)}<span class="pl-k">catch</span>(g){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FS.trackingDelegate[&#39;willDeletePath&#39;](&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;) threw an exception: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-smi">message</span>)}<span class="pl-smi">b</span>.<span class="pl-smi">fb</span>.<span class="pl-en">unlink</span>(b,c);<span class="pl-en">Xb</span>(d);<span class="pl-k">try</span>{<span class="pl-k">if</span>(<span class="pl-c1">T</span>.<span class="pl-smi">onDeletePath</span>)<span class="pl-c1">T</span>.<span class="pl-en">onDeletePath</span>(a)}<span class="pl-k">catch</span>(g){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FS.trackingDelegate[&#39;onDeletePath&#39;](&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;) threw an exception: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">g</span>.<span class="pl-smi">message</span>)}}</td>
      </tr>
      <tr>
        <td id="L142" class="blob-num js-line-number" data-line-number="142"></td>
        <td id="LC142" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Tb</span>(<span class="pl-smi">a</span>){a<span class="pl-k">=</span><span class="pl-en">U</span>(a).<span class="pl-smi">node</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>a)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">2</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">readlink</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-k">return</span> <span class="pl-en">Db</span>(<span class="pl-en">Ub</span>(<span class="pl-smi">a</span>.<span class="pl-c1">parent</span>),<span class="pl-smi">a</span>.<span class="pl-smi">fb</span>.<span class="pl-en">readlink</span>(a))}function pa(a,b){a=U(a,{vb:!b}).node;if(!a)throw new M(2);if(!a.fb.ob)throw new M(1);return a.fb.ob(a)}function Jc(a){return pa(a,!0)}function fa(a,b){var c;&quot;string&quot;===typeof a?c=U(a,{vb:!0}).node:c=a;if(!c.fb.lb)throw new M(1);c.fb.lb(c,{mode:b&amp;4095|c.mode&amp;-4096,timestamp:Date.now()})}</td>
      </tr>
      <tr>
        <td id="L143" class="blob-num js-line-number" data-line-number="143"></td>
        <td id="LC143" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Kc</span>(<span class="pl-smi">a</span>){<span class="pl-k">var</span> b;<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a<span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-en">U</span>(a,{vb<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}).<span class="pl-smi">node</span><span class="pl-k">:</span>b<span class="pl-k">=</span>a;<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">b</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">lb</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">1</span>);<span class="pl-smi">b</span>.<span class="pl-smi">fb</span>.<span class="pl-en">lb</span>(b,{timestamp<span class="pl-k">:</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>()})}function Lc(a,b){if(0&gt;b)throw new M(22);var c;&quot;string&quot;===typeof a?c=U(a,{vb:!0}).node:c=a;if(!c.fb.lb)throw new M(1);if(O(c.mode))throw new M(21);if(32768!==(c.mode&amp;61440))throw new M(22);if(a=Yb(c,&quot;w&quot;))throw new M(a);c.fb.lb(c,{size:b,timestamp:Date.now()})}</td>
      </tr>
      <tr>
        <td id="L144" class="blob-num js-line-number" data-line-number="144"></td>
        <td id="LC144" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">p</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">2</span>);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>string<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> b){<span class="pl-k">var</span> e<span class="pl-k">=</span>$b[b];<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> e)<span class="pl-k">throw</span> <span class="pl-c1">Error</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Unknown file open mode: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>b);b<span class="pl-k">=</span>e}c<span class="pl-k">=</span>b<span class="pl-k">&amp;</span><span class="pl-c1">64</span><span class="pl-k">?</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> c<span class="pl-k">?</span><span class="pl-c1">438</span><span class="pl-k">:</span>c)<span class="pl-k">&amp;</span><span class="pl-c1">4095</span><span class="pl-k">|</span><span class="pl-c1">32768</span><span class="pl-k">:</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> a)<span class="pl-k">var</span> g<span class="pl-k">=</span>a;<span class="pl-k">else</span>{a<span class="pl-k">=</span><span class="pl-en">vb</span>(a);<span class="pl-k">try</span>{g<span class="pl-k">=</span><span class="pl-en">U</span>(a,{vb<span class="pl-k">:</span><span class="pl-k">!</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">131072</span>)}).<span class="pl-smi">node</span>}<span class="pl-k">catch</span>(k){}}e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">64</span>)<span class="pl-k">if</span>(g){<span class="pl-k">if</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">128</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">17</span>);}<span class="pl-k">else</span> g<span class="pl-k">=</span><span class="pl-en">ea</span>(a,c,<span class="pl-c1">0</span>),e<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(<span class="pl-k">!</span>g)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">2</span>);<span class="pl-c1">8192</span><span class="pl-k">===</span>(<span class="pl-smi">g</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">&amp;=</span><span class="pl-k">-</span><span class="pl-c1">513</span>);<span class="pl-k">if</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">65536</span><span class="pl-k">&amp;&amp;!</span><span class="pl-en">O</span>(<span class="pl-smi">g</span>.<span class="pl-smi">mode</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">20</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span>e<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>g<span class="pl-k">?</span><span class="pl-c1">40960</span><span class="pl-k">===</span>(<span class="pl-smi">g</span>.<span class="pl-smi">mode</span><span class="pl-k">&amp;</span><span class="pl-c1">61440</span>)<span class="pl-k">?</span><span class="pl-c1">40</span><span class="pl-k">:</span><span class="pl-en">O</span>(<span class="pl-smi">g</span>.<span class="pl-smi">mode</span>)<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L145" class="blob-num js-line-number" data-line-number="145"></td>
        <td id="LC145" class="blob-code blob-code-inner js-file-line">(<span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-en">ac</span>(b)<span class="pl-k">||</span>b<span class="pl-k">&amp;</span><span class="pl-c1">512</span>)<span class="pl-k">?</span><span class="pl-c1">21</span><span class="pl-k">:</span><span class="pl-en">Yb</span>(g,<span class="pl-en">ac</span>(b))<span class="pl-k">:</span><span class="pl-c1">2</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(c);b<span class="pl-k">&amp;</span><span class="pl-c1">512</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">Lc</span>(g,<span class="pl-c1">0</span>);b<span class="pl-k">&amp;=</span><span class="pl-k">-</span><span class="pl-c1">641</span>;d<span class="pl-k">=</span><span class="pl-en">uc</span>({node<span class="pl-k">:</span>g,path<span class="pl-k">:</span><span class="pl-en">Ub</span>(g),flags<span class="pl-k">:</span>b,seekable<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>,position<span class="pl-k">:</span><span class="pl-c1">0</span>,ib<span class="pl-k">:</span><span class="pl-smi">g</span>.<span class="pl-smi">ib</span>,tc<span class="pl-k">:</span>[],error<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">1</span>},d);<span class="pl-smi">d</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">open</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">d</span>.<span class="pl-smi">ib</span>.<span class="pl-c1">open</span>(d);<span class="pl-k">!</span><span class="pl-smi">f</span>.<span class="pl-smi">logReadFiles</span><span class="pl-k">||</span>b<span class="pl-k">&amp;</span><span class="pl-c1">1</span><span class="pl-k">||</span>(Mc<span class="pl-k">||</span>(Mc<span class="pl-k">=</span>{}),a <span class="pl-k">in</span> Mc<span class="pl-k">||</span>(Mc[a]<span class="pl-k">=</span><span class="pl-c1">1</span>,<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FS.trackingDelegate error on read file: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a)));<span class="pl-k">try</span>{<span class="pl-c1">T</span>.<span class="pl-smi">onOpenFile</span><span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>,<span class="pl-c1">1</span><span class="pl-k">!==</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">2097155</span>)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">|=</span><span class="pl-c1">1</span>),<span class="pl-c1">0</span><span class="pl-k">!==</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">2097155</span>)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">|=</span><span class="pl-c1">2</span>),<span class="pl-c1">T</span>.<span class="pl-en">onOpenFile</span>(a,g))}<span class="pl-k">catch</span>(k){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FS.trackingDelegate[&#39;onOpenFile&#39;](&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;, flags) threw an exception: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">k</span>.<span class="pl-smi">message</span>)}<span class="pl-k">return</span> d}</td>
      </tr>
      <tr>
        <td id="L146" class="blob-num js-line-number" data-line-number="146"></td>
        <td id="LC146" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ia</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">fd</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">9</span>);<span class="pl-smi">a</span>.<span class="pl-smi">Jb</span><span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">Jb</span><span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">try</span>{<span class="pl-smi">a</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">close</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">a</span>.<span class="pl-smi">ib</span>.<span class="pl-c1">close</span>(a)}<span class="pl-k">catch</span>(b){<span class="pl-k">throw</span> b;}<span class="pl-k">finally</span>{<span class="pl-c1">Q</span>[<span class="pl-smi">a</span>.<span class="pl-smi">fd</span>]<span class="pl-k">=</span><span class="pl-c1">null</span>}<span class="pl-smi">a</span>.<span class="pl-smi">fd</span><span class="pl-k">=</span><span class="pl-c1">null</span>}function Nc(a,b,c){if(null===a.fd)throw new M(9);if(!a.seekable||!a.ib.sb)throw new M(29);if(0!=c&amp;&amp;1!=c&amp;&amp;2!=c)throw new M(22);a.position=a.ib.sb(a,b,c);a.tc=[]}</td>
      </tr>
      <tr>
        <td id="L147" class="blob-num js-line-number" data-line-number="147"></td>
        <td id="LC147" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">qa</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>e)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">fd</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">9</span>);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>(<span class="pl-smi">a</span>.<span class="pl-smi">flags</span><span class="pl-k">&amp;</span><span class="pl-c1">2097155</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">9</span>);<span class="pl-k">if</span>(<span class="pl-en">O</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">mode</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">21</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">read</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> e;<span class="pl-k">if</span>(<span class="pl-k">!</span>g)e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">seekable</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">29</span>);b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ib</span>.<span class="pl-en">read</span>(a,b,c,d,e);g<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">+=</span>b);<span class="pl-k">return</span> b}</td>
      </tr>
      <tr>
        <td id="L148" class="blob-num js-line-number" data-line-number="148"></td>
        <td id="LC148" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ha</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>e)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span><span class="pl-smi">a</span>.<span class="pl-smi">fd</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">9</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>(<span class="pl-smi">a</span>.<span class="pl-smi">flags</span><span class="pl-k">&amp;</span><span class="pl-c1">2097155</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">9</span>);<span class="pl-k">if</span>(<span class="pl-en">O</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">mode</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">21</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">write</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-smi">a</span>.<span class="pl-smi">flags</span><span class="pl-k">&amp;</span><span class="pl-c1">1024</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">Nc</span>(a,<span class="pl-c1">0</span>,<span class="pl-c1">2</span>);<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> e;<span class="pl-k">if</span>(<span class="pl-k">!</span>k)e<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">position</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">a</span>.<span class="pl-smi">seekable</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">29</span>);b<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-smi">ib</span>.<span class="pl-c1">write</span>(a,b,c,d,e,g);k<span class="pl-k">||</span>(<span class="pl-smi">a</span>.<span class="pl-smi">position</span><span class="pl-k">+=</span>b);<span class="pl-k">try</span>{<span class="pl-k">if</span>(<span class="pl-smi">a</span>.<span class="pl-smi">path</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">T</span>.<span class="pl-smi">onWriteToFile</span>)<span class="pl-c1">T</span>.<span class="pl-en">onWriteToFile</span>(<span class="pl-smi">a</span>.<span class="pl-smi">path</span>)}<span class="pl-k">catch</span>(m){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FS.trackingDelegate[&#39;onWriteToFile&#39;](&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">a</span>.<span class="pl-smi">path</span><span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;) threw an exception: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">message</span>)}<span class="pl-k">return</span> b}</td>
      </tr>
      <tr>
        <td id="L149" class="blob-num js-line-number" data-line-number="149"></td>
        <td id="LC149" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Oc</span>(){<span class="pl-c1">M</span><span class="pl-k">||</span>(<span class="pl-en">M</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">this</span>.<span class="pl-smi">node</span><span class="pl-k">=</span>b;<span class="pl-c1">this</span>.<span class="pl-en">rc</span><span class="pl-k">=</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-c1">this</span>.<span class="pl-smi">hb</span><span class="pl-k">=</span>a};<span class="pl-c1">this</span>.<span class="pl-en">rc</span>(a);<span class="pl-c1">this</span>.<span class="pl-smi">message</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>FS error<span class="pl-pds">&quot;</span></span>},<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span><span class="pl-k">=</span><span class="pl-c1">Error</span>(),<span class="pl-c1">M</span>.<span class="pl-c1">prototype</span>.<span class="pl-c1">constructor</span><span class="pl-k">=</span><span class="pl-c1">M</span>,[<span class="pl-c1">2</span>].<span class="pl-c1">forEach</span>(<span class="pl-k">function</span>(<span class="pl-smi">a</span>){Mb[a]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">M</span>(a);Mb[a].<span class="pl-smi">stack</span><span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span>&lt;generic error, no stack&gt;<span class="pl-pds">&quot;</span></span>}))}<span class="pl-k">var</span> Pc;<span class="pl-k">function</span> <span class="pl-en">da</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">|=</span><span class="pl-c1">365</span>);b<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">|=</span><span class="pl-c1">146</span>);<span class="pl-k">return</span> c}</td>
      </tr>
      <tr>
        <td id="L150" class="blob-num js-line-number" data-line-number="150"></td>
        <td id="LC150" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Qc</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){a<span class="pl-k">=</span><span class="pl-en">n</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/dev<span class="pl-pds">&quot;</span></span>,a);<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">da</span>(<span class="pl-k">!!</span>b,<span class="pl-k">!!</span>c);Rc<span class="pl-k">||</span>(Rc<span class="pl-k">=</span><span class="pl-c1">64</span>);<span class="pl-k">var</span> e<span class="pl-k">=</span>Rc<span class="pl-k">++</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span><span class="pl-k">|</span><span class="pl-c1">0</span>;<span class="pl-en">Gb</span>(e,{<span class="pl-en">open</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-smi">a</span>.<span class="pl-smi">seekable</span><span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>},<span class="pl-en">close</span><span class="pl-k">:</span><span class="pl-k">function</span>(){c<span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">buffer</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">buffer</span>.<span class="pl-c1">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">c</span>(<span class="pl-c1">10</span>)},<span class="pl-en">read</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span>e;k<span class="pl-k">++</span>){<span class="pl-k">try</span>{<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-en">b</span>()}<span class="pl-k">catch</span>(<span class="pl-c1">S</span>){<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">5</span>);}<span class="pl-k">if</span>(<span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>m<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>g)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">11</span>);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">===</span>m<span class="pl-k">||</span><span class="pl-k">void</span> <span class="pl-c1">0</span><span class="pl-k">===</span>m)<span class="pl-k">break</span>;g<span class="pl-k">++</span>;c[d<span class="pl-k">+</span>k]<span class="pl-k">=</span>m}g<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">timestamp</span><span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>());<span class="pl-k">return</span> g},<span class="pl-en">write</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">for</span>(<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>e;g<span class="pl-k">++</span>)<span class="pl-k">try</span>{<span class="pl-en">c</span>(b[d<span class="pl-k">+</span>g])}<span class="pl-k">catch</span>(<span class="pl-c1">K</span>){<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">5</span>);}e<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">a</span>.<span class="pl-smi">node</span>.<span class="pl-smi">timestamp</span><span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>());<span class="pl-k">return</span> g}});</td>
      </tr>
      <tr>
        <td id="L151" class="blob-num js-line-number" data-line-number="151"></td>
        <td id="LC151" class="blob-code blob-code-inner js-file-line"><span class="pl-en">Hc</span>(a,d,e)}<span class="pl-k">var</span> Rc,<span class="pl-c1">W</span><span class="pl-k">=</span>{},Zb,Fc,Mc,Sc<span class="pl-k">=</span>{};</td>
      </tr>
      <tr>
        <td id="L152" class="blob-num js-line-number" data-line-number="152"></td>
        <td id="LC152" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Tc</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">try</span>{<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">a</span>(b)}<span class="pl-k">catch</span>(e){<span class="pl-k">if</span>(e<span class="pl-k">&amp;&amp;</span><span class="pl-smi">e</span>.<span class="pl-smi">node</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">vb</span>(b)<span class="pl-k">!==</span><span class="pl-en">vb</span>(<span class="pl-en">Ub</span>(<span class="pl-smi">e</span>.<span class="pl-smi">node</span>)))<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">20</span>;<span class="pl-k">throw</span> e;}<span class="pl-c1">B</span>[c<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">dev</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">8</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ino</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">12</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">mode</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">16</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">nlink</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">20</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">uid</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">24</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">gid</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">28</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">rdev</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">32</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">C</span><span class="pl-k">=</span>[<span class="pl-smi">d</span>.<span class="pl-c1">size</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>,(<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-c1">size</span>,<span class="pl-c1">1</span><span class="pl-k">&lt;=</span><span class="pl-k">+</span><span class="pl-en">Na</span>(<span class="pl-c1">D</span>)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">D</span><span class="pl-k">?</span>(<span class="pl-en">Oa</span>(<span class="pl-k">+</span><span class="pl-en">Pa</span>(<span class="pl-c1">D</span><span class="pl-k">/</span><span class="pl-c1">4294967296</span>),<span class="pl-c1">4294967295</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">~~</span><span class="pl-k">+</span><span class="pl-en">Qa</span>((<span class="pl-c1">D</span><span class="pl-k">-+</span>(<span class="pl-k">~~</span><span class="pl-c1">D</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>))<span class="pl-k">/</span><span class="pl-c1">4294967296</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0</span>)];<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">40</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">C</span>[<span class="pl-c1">0</span>];<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">44</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">C</span>[<span class="pl-c1">1</span>];<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">48</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">4096</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">52</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">blocks</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">56</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">atime</span>.<span class="pl-c1">getTime</span>()<span class="pl-k">/</span><span class="pl-c1">1E3</span><span class="pl-k">|</span><span class="pl-c1">0</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">60</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">64</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">mtime</span>.<span class="pl-c1">getTime</span>()<span class="pl-k">/</span></td>
      </tr>
      <tr>
        <td id="L153" class="blob-num js-line-number" data-line-number="153"></td>
        <td id="LC153" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">1E3</span><span class="pl-k">|</span><span class="pl-c1">0</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">68</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">72</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ctime</span>.<span class="pl-c1">getTime</span>()<span class="pl-k">/</span><span class="pl-c1">1E3</span><span class="pl-k">|</span><span class="pl-c1">0</span>;<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">76</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">C</span><span class="pl-k">=</span>[<span class="pl-smi">d</span>.<span class="pl-smi">ino</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>,(<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">d</span>.<span class="pl-smi">ino</span>,<span class="pl-c1">1</span><span class="pl-k">&lt;=</span><span class="pl-k">+</span><span class="pl-en">Na</span>(<span class="pl-c1">D</span>)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">D</span><span class="pl-k">?</span>(<span class="pl-en">Oa</span>(<span class="pl-k">+</span><span class="pl-en">Pa</span>(<span class="pl-c1">D</span><span class="pl-k">/</span><span class="pl-c1">4294967296</span>),<span class="pl-c1">4294967295</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">~~</span><span class="pl-k">+</span><span class="pl-en">Qa</span>((<span class="pl-c1">D</span><span class="pl-k">-+</span>(<span class="pl-k">~~</span><span class="pl-c1">D</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>))<span class="pl-k">/</span><span class="pl-c1">4294967296</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0</span>)];<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">80</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">C</span>[<span class="pl-c1">0</span>];<span class="pl-c1">B</span>[c<span class="pl-k">+</span><span class="pl-c1">84</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">C</span>[<span class="pl-c1">1</span>];<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">var</span> <span class="pl-c1">X</span><span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">function</span> <span class="pl-en">Y</span>(){<span class="pl-c1">X</span><span class="pl-k">+=</span><span class="pl-c1">4</span>;<span class="pl-k">return</span> <span class="pl-c1">B</span>[<span class="pl-c1">X</span><span class="pl-k">-</span><span class="pl-c1">4</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]}function Z(){return G(Y())}function Uc(){var a=Q[Y()];if(!a)throw new M(9);return a}function Ja(){return l.length}</td>
      </tr>
      <tr>
        <td id="L154" class="blob-num js-line-number" data-line-number="154"></td>
        <td id="LC154" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Vc</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>a)<span class="pl-k">return</span> <span class="pl-c1">0</span>;a<span class="pl-k">=</span><span class="pl-en">G</span>(a);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">L</span>.<span class="pl-en">hasOwnProperty</span>(a))<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-smi">Vc</span>.<span class="pl-smi">ub</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">ca</span>(<span class="pl-smi">Vc</span>.<span class="pl-smi">ub</span>);a<span class="pl-k">=</span><span class="pl-c1">L</span>[a];<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-en">la</span>(a)<span class="pl-k">+</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-en">Ya</span>(b);c<span class="pl-k">&amp;&amp;</span><span class="pl-en">t</span>(a,l,c,b);<span class="pl-smi">Vc</span>.<span class="pl-smi">ub</span><span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-smi">Vc</span>.<span class="pl-smi">ub</span>}<span class="pl-en">t</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>GMT<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">F</span>,<span class="pl-c1">60208</span>,<span class="pl-c1">4</span>);</td>
      </tr>
      <tr>
        <td id="L155" class="blob-num js-line-number" data-line-number="155"></td>
        <td id="LC155" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">Wc</span>(){<span class="pl-k">function</span> <span class="pl-en">a</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-en">toTimeString</span>().<span class="pl-c1">match</span>(<span class="pl-sr"><span class="pl-pds">/</span><span class="pl-cce">\(</span>(<span class="pl-c1">[<span class="pl-c1">A-Za-z</span> ]</span><span class="pl-k">+</span>)<span class="pl-cce">\)</span><span class="pl-k">$</span><span class="pl-pds">/</span></span>))<span class="pl-k">?</span>a[<span class="pl-c1">1</span>]<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>GMT<span class="pl-pds">&quot;</span></span>}<span class="pl-k">if</span>(<span class="pl-k">!</span>Xc){Xc<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>;<span class="pl-c1">B</span>[<span class="pl-en">Yc</span>()<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">60</span><span class="pl-k">*</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-c1">getTimezoneOffset</span>();<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-c1">2E3</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>),c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Date</span>(<span class="pl-c1">2E3</span>,<span class="pl-c1">6</span>,<span class="pl-c1">1</span>);<span class="pl-c1">B</span>[<span class="pl-en">Zc</span>()<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">Number</span>(<span class="pl-smi">b</span>.<span class="pl-c1">getTimezoneOffset</span>()<span class="pl-k">!=</span><span class="pl-smi">c</span>.<span class="pl-c1">getTimezoneOffset</span>());<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">a</span>(b),e<span class="pl-k">=</span><span class="pl-en">a</span>(c);d<span class="pl-k">=</span><span class="pl-en">ba</span>(<span class="pl-en">aa</span>(d));e<span class="pl-k">=</span><span class="pl-en">ba</span>(<span class="pl-en">aa</span>(e));<span class="pl-smi">c</span>.<span class="pl-c1">getTimezoneOffset</span>()<span class="pl-k">&lt;</span><span class="pl-smi">b</span>.<span class="pl-c1">getTimezoneOffset</span>()<span class="pl-k">?</span>(<span class="pl-c1">B</span>[<span class="pl-en">$c</span>()<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>d,<span class="pl-c1">B</span>[<span class="pl-en">$c</span>()<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>e)<span class="pl-k">:</span>(<span class="pl-c1">B</span>[<span class="pl-en">$c</span>()<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>e,<span class="pl-c1">B</span>[<span class="pl-en">$c</span>()<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span>d)}}<span class="pl-k">var</span> Xc;</td>
      </tr>
      <tr>
        <td id="L156" class="blob-num js-line-number" data-line-number="156"></td>
        <td id="LC156" class="blob-code blob-code-inner js-file-line"><span class="pl-k">function</span> <span class="pl-en">ad</span>(<span class="pl-smi">a</span>){a<span class="pl-k">/=</span><span class="pl-c1">1E3</span>;<span class="pl-k">if</span>((ya<span class="pl-k">||</span>x)<span class="pl-k">&amp;&amp;</span><span class="pl-smi">self</span>.<span class="pl-smi">performance</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">self</span>.<span class="pl-smi">performance</span>.<span class="pl-smi">now</span>)<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-smi">self</span>.<span class="pl-smi">performance</span>.<span class="pl-en">now</span>();<span class="pl-smi">self</span>.<span class="pl-smi">performance</span>.<span class="pl-en">now</span>()<span class="pl-k">-</span>b<span class="pl-k">&lt;</span>a;);<span class="pl-k">else</span> <span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">Date</span>.<span class="pl-en">now</span>();<span class="pl-c1">Date</span>.<span class="pl-en">now</span>()<span class="pl-k">-</span>b<span class="pl-k">&lt;</span>a;);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-smi">f</span>.<span class="pl-smi">_usleep</span><span class="pl-k">=</span>ad;<span class="pl-en">Oc</span>();<span class="pl-c1">R</span><span class="pl-k">=</span><span class="pl-c1">Array</span>(<span class="pl-c1">4096</span>);<span class="pl-en">Gc</span>(<span class="pl-c1">N</span>,<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>);<span class="pl-en">V</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/tmp<span class="pl-pds">&quot;</span></span>);<span class="pl-en">V</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/home<span class="pl-pds">&quot;</span></span>);<span class="pl-en">V</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/home/web_user<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L157" class="blob-num js-line-number" data-line-number="157"></td>
        <td id="LC157" class="blob-code blob-code-inner js-file-line">(<span class="pl-k">function</span>(){<span class="pl-en">V</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/dev<span class="pl-pds">&quot;</span></span>);<span class="pl-en">Gb</span>(<span class="pl-c1">259</span>,{<span class="pl-en">read</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0</span>},<span class="pl-en">write</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">k</span>){<span class="pl-k">return</span> k}});<span class="pl-en">Hc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/dev/null<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">259</span>);<span class="pl-en">Fb</span>(<span class="pl-c1">1280</span>,Ib);<span class="pl-en">Fb</span>(<span class="pl-c1">1536</span>,Jb);<span class="pl-en">Hc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/dev/tty<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1280</span>);<span class="pl-en">Hc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/dev/tty1<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">1536</span>);<span class="pl-k">if</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>object<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> crypto<span class="pl-k">&amp;&amp;</span><span class="pl-s"><span class="pl-pds">&quot;</span>function<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span><span class="pl-k">typeof</span> <span class="pl-smi">crypto</span>.<span class="pl-smi">getRandomValues</span>){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-c1">1</span>);<span class="pl-k">var</span> <span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-smi">crypto</span>.<span class="pl-en">getRandomValues</span>(a);<span class="pl-k">return</span> a[<span class="pl-c1">0</span>]}}<span class="pl-k">else</span> <span class="pl-k">if</span>(za)<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>crypto<span class="pl-pds">&quot;</span></span>);<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-en">randomBytes</span>(<span class="pl-c1">1</span>)[<span class="pl-c1">0</span>]}}<span class="pl-k">catch</span>(d){}b<span class="pl-k">||</span>(<span class="pl-en">b</span><span class="pl-k">=</span><span class="pl-k">function</span>(){<span class="pl-en">z</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>random_device<span class="pl-pds">&quot;</span></span>)});<span class="pl-en">Qc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>random<span class="pl-pds">&quot;</span></span>,b);<span class="pl-en">Qc</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>urandom<span class="pl-pds">&quot;</span></span>,b);<span class="pl-en">V</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/dev/shm<span class="pl-pds">&quot;</span></span>);</td>
      </tr>
      <tr>
        <td id="L158" class="blob-num js-line-number" data-line-number="158"></td>
        <td id="LC158" class="blob-code blob-code-inner js-file-line"><span class="pl-en">V</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/dev/shm/tmp<span class="pl-pds">&quot;</span></span>)})();<span class="pl-en">V</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/proc<span class="pl-pds">&quot;</span></span>);<span class="pl-en">V</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/proc/self<span class="pl-pds">&quot;</span></span>);<span class="pl-en">V</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/proc/self/fd<span class="pl-pds">&quot;</span></span>);<span class="pl-en">Gc</span>({<span class="pl-en">mb</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">var</span> a<span class="pl-k">=</span><span class="pl-en">Lb</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/proc/self<span class="pl-pds">&quot;</span></span>,<span class="pl-s"><span class="pl-pds">&quot;</span>fd<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">16895</span>,<span class="pl-c1">73</span>);<span class="pl-smi">a</span>.<span class="pl-smi">fb</span><span class="pl-k">=</span>{<span class="pl-en">lookup</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">c</span>){<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Q</span>[<span class="pl-k">+</span>c];<span class="pl-k">if</span>(<span class="pl-k">!</span>b)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">9</span>);a<span class="pl-k">=</span>{parent<span class="pl-k">:</span><span class="pl-c1">null</span>,mb<span class="pl-k">:</span>{Wb<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>fake<span class="pl-pds">&quot;</span></span>},fb<span class="pl-k">:</span>{<span class="pl-en">readlink</span><span class="pl-k">:</span><span class="pl-k">function</span>(){<span class="pl-k">return</span> <span class="pl-smi">b</span>.<span class="pl-smi">path</span>}}};<span class="pl-k">return</span> <span class="pl-smi">a</span>.<span class="pl-c1">parent</span><span class="pl-k">=</span>a}};<span class="pl-k">return</span> a}},<span class="pl-s"><span class="pl-pds">&quot;</span>/proc/self/fd<span class="pl-pds">&quot;</span></span>);<span class="pl-k">if</span>(Aa){<span class="pl-k">var</span> fs<span class="pl-k">=</span><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>fs<span class="pl-pds">&quot;</span></span>),Ob<span class="pl-k">=</span><span class="pl-c1">require</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>path<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">P</span>.<span class="pl-en">sc</span>()}function aa(a,b){var c=Array(la(a)+1);a=t(a,c,0,c.length);b&amp;&amp;(c.length=a);return c}</td>
      </tr>
      <tr>
        <td id="L159" class="blob-num js-line-number" data-line-number="159"></td>
        <td id="LC159" class="blob-code blob-code-inner js-file-line"><span class="pl-k">var</span> dd<span class="pl-k">=</span><span class="pl-smi">f</span>.<span class="pl-en">asm</span>({},{n<span class="pl-k">:</span>z,<span class="pl-en">l</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">return</span> u[a]()},<span class="pl-en">i</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-k">return</span> u[a](b)},<span class="pl-en">h</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> u[a](b,c)},<span class="pl-en">g</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> u[a](b,c,d)},<span class="pl-en">f</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> u[a](b,c,d,e)},<span class="pl-en">e</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>){<span class="pl-k">return</span> u[a](b,c,d,e,g)},<span class="pl-en">d</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>,<span class="pl-smi">k</span>){<span class="pl-k">return</span> u[a](b,c,d,e,g,k)},<span class="pl-en">C</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>,<span class="pl-smi">k</span>){<span class="pl-k">return</span> u[a](b,c,d,e,g,k)},<span class="pl-en">B</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> u[a](b,c,d,e)},<span class="pl-en">A</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-k">return</span> u[a](b,c)},<span class="pl-en">z</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-k">return</span> u[a](b,c,d)},<span class="pl-en">y</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){<span class="pl-k">return</span> u[a](b,</td>
      </tr>
      <tr>
        <td id="L160" class="blob-num js-line-number" data-line-number="160"></td>
        <td id="LC160" class="blob-code blob-code-inner js-file-line">c,d,e)},<span class="pl-en">c</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){u[a](b)},<span class="pl-en">b</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){u[a](b,c)},<span class="pl-en">k</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){u[a](b,c,d)},<span class="pl-en">j</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>){u[a](b,c,d,e)},<span class="pl-en">x</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>,<span class="pl-smi">e</span>,<span class="pl-smi">g</span>){u[a](b,c,d,e,g)},<span class="pl-en">w</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){u[a](b,c,d)},<span class="pl-en">v</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){u[a](b,c,d)},<span class="pl-en">m</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>,<span class="pl-smi">d</span>){<span class="pl-en">z</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>Assertion failed: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-en">G</span>(a)<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>, at: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>[b<span class="pl-k">?</span><span class="pl-en">G</span>(b)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>unknown filename<span class="pl-pds">&quot;</span></span>,c,d<span class="pl-k">?</span><span class="pl-en">G</span>(d)<span class="pl-k">:</span><span class="pl-s"><span class="pl-pds">&quot;</span>unknown function<span class="pl-pds">&quot;</span></span>])},ha<span class="pl-k">:</span>tb,u<span class="pl-k">:</span>Cb,<span class="pl-en">ga</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>();<span class="pl-en">sa</span>(c);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(d){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>d <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(d),<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">fa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L161" class="blob-num js-line-number" data-line-number="161"></td>
        <td id="LC161" class="blob-code blob-code-inner js-file-line">b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Uc</span>();<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">ib</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">c</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">fsync</span><span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-smi">c</span>.<span class="pl-smi">ib</span>.<span class="pl-en">fsync</span>(c)<span class="pl-k">:</span><span class="pl-c1">0</span>}<span class="pl-k">catch</span>(d){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>d <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(d),<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">ea</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Uc</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>(),e<span class="pl-k">=</span><span class="pl-en">Y</span>(),g<span class="pl-k">=</span><span class="pl-en">Y</span>(),k<span class="pl-k">=</span><span class="pl-en">Y</span>();a<span class="pl-k">=</span><span class="pl-c1">4294967296</span><span class="pl-k">*</span>d<span class="pl-k">+</span>(e<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">9007199254740992</span><span class="pl-k">&gt;=</span>a<span class="pl-k">||</span><span class="pl-c1">9007199254740992</span><span class="pl-k">&lt;=</span>a)<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">75</span>;<span class="pl-en">Nc</span>(c,a,k);<span class="pl-c1">C</span><span class="pl-k">=</span>[<span class="pl-smi">c</span>.<span class="pl-smi">position</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>,(<span class="pl-c1">D</span><span class="pl-k">=</span><span class="pl-smi">c</span>.<span class="pl-smi">position</span>,<span class="pl-c1">1</span><span class="pl-k">&lt;=</span><span class="pl-k">+</span><span class="pl-en">Na</span>(<span class="pl-c1">D</span>)<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">&lt;</span><span class="pl-c1">D</span><span class="pl-k">?</span>(<span class="pl-en">Oa</span>(<span class="pl-k">+</span><span class="pl-en">Pa</span>(<span class="pl-c1">D</span><span class="pl-k">/</span><span class="pl-c1">4294967296</span>),<span class="pl-c1">4294967295</span>)<span class="pl-k">|</span><span class="pl-c1">0</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-k">~~</span><span class="pl-k">+</span><span class="pl-en">Qa</span>((<span class="pl-c1">D</span><span class="pl-k">-+</span>(<span class="pl-k">~~</span><span class="pl-c1">D</span><span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span>))<span class="pl-k">/</span><span class="pl-c1">4294967296</span>)<span class="pl-k">&gt;&gt;&gt;</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">0</span>)];<span class="pl-c1">B</span>[g<span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">C</span>[<span class="pl-c1">0</span>];<span class="pl-c1">B</span>[g<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">C</span>[<span class="pl-c1">1</span>];<span class="pl-smi">c</span>.<span class="pl-smi">Jb</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>k<span class="pl-k">&amp;&amp;</span>(<span class="pl-smi">c</span>.<span class="pl-smi">Jb</span><span class="pl-k">=</span><span class="pl-c1">null</span>);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(m){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L162" class="blob-num js-line-number" data-line-number="162"></td>
        <td id="LC162" class="blob-code blob-code-inner js-file-line">m <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(m),<span class="pl-k">-</span><span class="pl-smi">m</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">da</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-en">fa</span>(c,d);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>e <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(e),<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">ca</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Y</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">22</span>;<span class="pl-k">if</span>(d<span class="pl-k">&lt;</span><span class="pl-en">la</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>)<span class="pl-k">+</span><span class="pl-c1">1</span>)<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">34</span>;<span class="pl-en">t</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span>,<span class="pl-c1">F</span>,c,d);<span class="pl-k">return</span> c}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>e <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(e),<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">ba</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Y</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>(),e<span class="pl-k">=</span><span class="pl-en">Y</span>(),g<span class="pl-k">=</span><span class="pl-en">Y</span>(),k<span class="pl-k">=</span><span class="pl-en">Y</span>();a<span class="pl-k">:</span>{<span class="pl-k">var</span> m<span class="pl-k">=</span><span class="pl-en">Y</span>();m<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">12</span>;a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>(g<span class="pl-k">&amp;</span><span class="pl-c1">16</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">!==</span>c<span class="pl-k">%</span><span class="pl-c1">16384</span>)<span class="pl-k">var</span> r<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">22</span>;<span class="pl-k">else</span>{<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>(g<span class="pl-k">&amp;</span><span class="pl-c1">32</span>)){<span class="pl-k">var</span> v<span class="pl-k">=</span><span class="pl-en">bd</span>(<span class="pl-c1">16384</span>,d);<span class="pl-k">if</span>(<span class="pl-k">!</span>v){r<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">12</span>;</td>
      </tr>
      <tr>
        <td id="L163" class="blob-num js-line-number" data-line-number="163"></td>
        <td id="LC163" class="blob-code blob-code-inner js-file-line"><span class="pl-k">break</span> a}<span class="pl-en">cd</span>(v,<span class="pl-c1">0</span>,d);a<span class="pl-k">=</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">else</span>{<span class="pl-k">var</span> <span class="pl-c1">K</span><span class="pl-k">=</span><span class="pl-c1">Q</span>[k];<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">K</span>){r<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">9</span>;<span class="pl-k">break</span> a}b<span class="pl-k">=</span><span class="pl-c1">F</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!==</span>(e<span class="pl-k">&amp;</span><span class="pl-c1">2</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">===</span>(g<span class="pl-k">&amp;</span><span class="pl-c1">2</span>)<span class="pl-k">&amp;&amp;</span><span class="pl-c1">2</span><span class="pl-k">!==</span>(<span class="pl-c1">K</span>.<span class="pl-smi">flags</span><span class="pl-k">&amp;</span><span class="pl-c1">2097155</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">13</span>);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">===</span>(<span class="pl-c1">K</span>.<span class="pl-smi">flags</span><span class="pl-k">&amp;</span><span class="pl-c1">2097155</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">13</span>);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-c1">K</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">Db</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">19</span>);<span class="pl-k">var</span> <span class="pl-c1">J</span><span class="pl-k">=</span><span class="pl-c1">K</span>.<span class="pl-smi">ib</span>.<span class="pl-en">Db</span>(<span class="pl-c1">K</span>,b,c,d,m,e,g);v<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-smi">pc</span>;a<span class="pl-k">=</span><span class="pl-c1">J</span>.<span class="pl-smi">Gb</span>}Sc[v]<span class="pl-k">=</span>{nc<span class="pl-k">:</span>v,mc<span class="pl-k">:</span>d,Gb<span class="pl-k">:</span>a,fd<span class="pl-k">:</span>k,flags<span class="pl-k">:</span>g};r<span class="pl-k">=</span>v}}<span class="pl-k">return</span> r}<span class="pl-k">catch</span>(<span class="pl-c1">S</span>){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">S</span> <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(<span class="pl-c1">S</span>),<span class="pl-k">-</span><span class="pl-c1">S</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">aa</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-en">Y</span>();<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-en">Y</span>();<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-c1">Q</span>[c];<span class="pl-k">if</span>(<span class="pl-k">!</span>e)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">9</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">===</span>(<span class="pl-smi">e</span>.<span class="pl-smi">flags</span><span class="pl-k">&amp;</span><span class="pl-c1">2097155</span>))<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">22</span>);<span class="pl-en">Lc</span>(<span class="pl-smi">e</span>.<span class="pl-smi">node</span>,d);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(g){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span></td>
      </tr>
      <tr>
        <td id="L164" class="blob-num js-line-number" data-line-number="164"></td>
        <td id="LC164" class="blob-code blob-code-inner js-file-line"><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>g <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(g),<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">t</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">return</span> <span class="pl-en">Tc</span>(pa,c,d)}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>e <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(e),<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">hb</span>}},$<span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">return</span> <span class="pl-en">Tc</span>(Jc,c,d)}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>e <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(e),<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">_</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Uc</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">return</span> <span class="pl-en">Tc</span>(pa,<span class="pl-smi">c</span>.<span class="pl-smi">path</span>,d)}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>e <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(e),<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">Z</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">42</span>},<span class="pl-en">Y</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">return</span> <span class="pl-c1">0</span>},<span class="pl-en">X</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L165" class="blob-num js-line-number" data-line-number="165"></td>
        <td id="LC165" class="blob-code blob-code-inner js-file-line">b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-en">Y</span>();<span class="pl-en">Y</span>();<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-c1">Q</span>[c];<span class="pl-k">if</span>(<span class="pl-k">!</span>d)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">9</span>);<span class="pl-en">Kc</span>(<span class="pl-smi">d</span>.<span class="pl-smi">node</span>);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>e <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(e),<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">W</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>();<span class="pl-en">Y</span>();<span class="pl-en">Y</span>();<span class="pl-en">Kc</span>(c);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(d){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>d <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(d),<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">o</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Uc</span>();<span class="pl-k">switch</span>(<span class="pl-en">Y</span>()){<span class="pl-k">case</span> <span class="pl-c1">0</span>:<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">22</span><span class="pl-k">:</span><span class="pl-en">p</span>(<span class="pl-smi">c</span>.<span class="pl-smi">path</span>,<span class="pl-smi">c</span>.<span class="pl-smi">flags</span>,<span class="pl-c1">0</span>,d).<span class="pl-smi">fd</span>;<span class="pl-k">case</span> <span class="pl-c1">1</span>:<span class="pl-k">case</span> <span class="pl-c1">2</span>:<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span>:<span class="pl-k">return</span> <span class="pl-smi">c</span>.<span class="pl-smi">flags</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span>:<span class="pl-k">return</span> d<span class="pl-k">=</span><span class="pl-en">Y</span>(),<span class="pl-smi">c</span>.<span class="pl-smi">flags</span><span class="pl-k">|=</span>d,<span class="pl-c1">0</span>;<span class="pl-k">case</span> <span class="pl-c1">12</span>:<span class="pl-k">return</span> d<span class="pl-k">=</span><span class="pl-en">Y</span>(),Ma[d<span class="pl-k">+</span><span class="pl-c1">0</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">2</span>,<span class="pl-c1">0</span>;<span class="pl-k">case</span> <span class="pl-c1">13</span>:<span class="pl-k">case</span> <span class="pl-c1">14</span>:<span class="pl-k">return</span> <span class="pl-c1">0</span>;</td>
      </tr>
      <tr>
        <td id="L166" class="blob-num js-line-number" data-line-number="166"></td>
        <td id="LC166" class="blob-code blob-code-inner js-file-line"><span class="pl-k">case</span> <span class="pl-c1">16</span>:<span class="pl-k">case</span> <span class="pl-c1">8</span>:<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">22</span>;<span class="pl-k">case</span> <span class="pl-c1">9</span>:<span class="pl-k">return</span> <span class="pl-en">Cb</span>(<span class="pl-c1">22</span>),<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-k">default</span>:<span class="pl-k">return</span><span class="pl-k">-</span><span class="pl-c1">22</span>}}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>e <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(e),<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">V</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Uc</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>(),e<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">return</span> <span class="pl-en">qa</span>(c,l,d,e)}<span class="pl-k">catch</span>(g){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>g <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(g),<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">U</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>();<span class="pl-k">var</span> d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">if</span>(d<span class="pl-k">&amp;</span><span class="pl-k">-</span><span class="pl-c1">8</span>)<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">22</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> g;(g<span class="pl-k">=</span><span class="pl-en">U</span>(c,{vb<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}).<span class="pl-smi">node</span>)<span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-s"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,d<span class="pl-k">&amp;</span><span class="pl-c1">4</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>r<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">&amp;</span><span class="pl-c1">2</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>w<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">&amp;</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">+=</span><span class="pl-s"><span class="pl-pds">&quot;</span>x<span class="pl-pds">&quot;</span></span>),e<span class="pl-k">=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-en">Yb</span>(g,a)<span class="pl-k">?</span><span class="pl-k">-</span><span class="pl-c1">13</span><span class="pl-k">:</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>e<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">2</span>}<span class="pl-k">return</span> e}<span class="pl-k">catch</span>(k){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>k <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span></td>
      </tr>
      <tr>
        <td id="L167" class="blob-num js-line-number" data-line-number="167"></td>
        <td id="LC167" class="blob-code blob-code-inner js-file-line"><span class="pl-en">z</span>(k),<span class="pl-k">-</span><span class="pl-smi">k</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">T</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>();a<span class="pl-k">=</span>c;a<span class="pl-k">=</span><span class="pl-en">vb</span>(a);<span class="pl-s"><span class="pl-pds">&quot;</span>/<span class="pl-pds">&quot;</span></span><span class="pl-k">===</span>a[<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-smi">a</span>.<span class="pl-c1">substr</span>(<span class="pl-c1">0</span>,<span class="pl-smi">a</span>.<span class="pl-c1">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>));<span class="pl-en">V</span>(a,d);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(e){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>e <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(e),<span class="pl-k">-</span><span class="pl-smi">e</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">S</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Uc</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>(),e<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">return</span> <span class="pl-en">ha</span>(c,l,d,e)}<span class="pl-k">catch</span>(g){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>g <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(g),<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">R</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>(),d<span class="pl-k">=</span><span class="pl-en">U</span>(c,{parent<span class="pl-k">:</span><span class="pl-k">!</span><span class="pl-c1">0</span>}).<span class="pl-smi">node</span>,e<span class="pl-k">=</span><span class="pl-en">Ab</span>(c),g<span class="pl-k">=</span><span class="pl-en">Nb</span>(d,e),k<span class="pl-k">=</span><span class="pl-en">cc</span>(d,e,<span class="pl-k">!</span><span class="pl-c1">0</span>);<span class="pl-k">if</span>(k)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(k);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-smi">d</span>.<span class="pl-smi">fb</span>.<span class="pl-smi">rmdir</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">1</span>);<span class="pl-k">if</span>(<span class="pl-smi">g</span>.<span class="pl-smi">wb</span>)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">16</span>);<span class="pl-k">try</span>{<span class="pl-c1">T</span>.<span class="pl-smi">willDeletePath</span><span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L168" class="blob-num js-line-number" data-line-number="168"></td>
        <td id="LC168" class="blob-code blob-code-inner js-file-line"><span class="pl-c1">T</span>.<span class="pl-en">willDeletePath</span>(c)}<span class="pl-k">catch</span>(m){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FS.trackingDelegate[&#39;willDeletePath&#39;](&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;) threw an exception: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">message</span>)}<span class="pl-smi">d</span>.<span class="pl-smi">fb</span>.<span class="pl-en">rmdir</span>(d,e);<span class="pl-en">Xb</span>(g);<span class="pl-k">try</span>{<span class="pl-k">if</span>(<span class="pl-c1">T</span>.<span class="pl-smi">onDeletePath</span>)<span class="pl-c1">T</span>.<span class="pl-en">onDeletePath</span>(c)}<span class="pl-k">catch</span>(m){<span class="pl-en">console</span>.<span class="pl-c1">log</span>(<span class="pl-s"><span class="pl-pds">&quot;</span>FS.trackingDelegate[&#39;onDeletePath&#39;](&#39;<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>c<span class="pl-k">+</span><span class="pl-s"><span class="pl-pds">&quot;</span>&#39;) threw an exception: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-smi">m</span>.<span class="pl-smi">message</span>)}<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(m){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>m <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(m),<span class="pl-k">-</span><span class="pl-smi">m</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">Q</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>(),e<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">return</span> <span class="pl-en">p</span>(c,d,e).<span class="pl-smi">fd</span>}<span class="pl-k">catch</span>(g){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>g <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(g),<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">s</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,</td>
      </tr>
      <tr>
        <td id="L169" class="blob-num js-line-number" data-line-number="169"></td>
        <td id="LC169" class="blob-code blob-code-inner js-file-line"><span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Uc</span>();<span class="pl-en">ia</span>(c);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(d){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>d <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(d),<span class="pl-k">-</span><span class="pl-smi">d</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">P</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Z</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;=</span>e)<span class="pl-k">var</span> g<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">22</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-en">Tb</span>(c),m<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">min</span>(e,<span class="pl-en">la</span>(k)),r<span class="pl-k">=</span>l[d<span class="pl-k">+</span>m];<span class="pl-en">t</span>(k,<span class="pl-c1">F</span>,d,e<span class="pl-k">+</span><span class="pl-c1">1</span>);l[d<span class="pl-k">+</span>m]<span class="pl-k">=</span>r;g<span class="pl-k">=</span>m}<span class="pl-k">return</span> g}<span class="pl-k">catch</span>(v){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>v <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(v),<span class="pl-k">-</span><span class="pl-smi">v</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">O</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Y</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>();<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">===</span>c<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">===</span>d)<span class="pl-k">var</span> e<span class="pl-k">=</span><span class="pl-k">-</span><span class="pl-c1">22</span>;<span class="pl-k">else</span>{<span class="pl-k">var</span> g<span class="pl-k">=</span>Sc[c];<span class="pl-k">if</span>(g<span class="pl-k">&amp;&amp;</span>d<span class="pl-k">===</span><span class="pl-smi">g</span>.<span class="pl-smi">mc</span>){<span class="pl-k">var</span> k<span class="pl-k">=</span><span class="pl-c1">Q</span>[<span class="pl-smi">g</span>.<span class="pl-smi">fd</span>],m<span class="pl-k">=</span><span class="pl-smi">g</span>.<span class="pl-smi">flags</span>,r<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Uint8Array</span>(<span class="pl-c1">F</span>.<span class="pl-en">subarray</span>(c,c<span class="pl-k">+</span>d));k<span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-smi">ib</span>.<span class="pl-smi">Eb</span><span class="pl-k">&amp;&amp;</span><span class="pl-smi">k</span>.<span class="pl-smi">ib</span>.<span class="pl-en">Eb</span>(k,</td>
      </tr>
      <tr>
        <td id="L170" class="blob-num js-line-number" data-line-number="170"></td>
        <td id="LC170" class="blob-code blob-code-inner js-file-line">r,<span class="pl-c1">0</span>,d,m);Sc[c]<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-smi">g</span>.<span class="pl-smi">Gb</span><span class="pl-k">&amp;&amp;</span><span class="pl-en">ca</span>(<span class="pl-smi">g</span>.<span class="pl-smi">nc</span>)}e<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">return</span> e}<span class="pl-k">catch</span>(v){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>v <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(v),<span class="pl-k">-</span><span class="pl-smi">v</span>.<span class="pl-smi">hb</span>}},<span class="pl-en">N</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>){<span class="pl-c1">X</span><span class="pl-k">=</span>b;<span class="pl-k">try</span>{<span class="pl-k">var</span> c<span class="pl-k">=</span><span class="pl-en">Y</span>(),d<span class="pl-k">=</span><span class="pl-en">Y</span>(),e<span class="pl-k">=</span><span class="pl-c1">Q</span>[c];<span class="pl-k">if</span>(<span class="pl-k">!</span>e)<span class="pl-k">throw</span> <span class="pl-k">new</span> <span class="pl-en">M</span>(<span class="pl-c1">9</span>);<span class="pl-en">fa</span>(<span class="pl-smi">e</span>.<span class="pl-smi">node</span>,d);<span class="pl-k">return</span> <span class="pl-c1">0</span>}<span class="pl-k">catch</span>(g){<span class="pl-k">return</span><span class="pl-s"><span class="pl-pds">&quot;</span>undefined<span class="pl-pds">&quot;</span></span><span class="pl-k">!==</span><span class="pl-k">typeof</span> <span class="pl-c1">W</span><span class="pl-k">&amp;&amp;</span>g <span class="pl-k">instanceof</span> <span class="pl-c1">M</span><span class="pl-k">||</span><span class="pl-en">z</span>(g),<span class="pl-k">-</span><span class="pl-smi">g</span>.<span class="pl-smi">hb</span>}},<span class="pl-c1">M</span><span class="pl-k">:</span>Ja,<span class="pl-en">L</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>,<span class="pl-smi">b</span>,<span class="pl-smi">c</span>){<span class="pl-c1">F</span>.<span class="pl-c1">set</span>(<span class="pl-c1">F</span>.<span class="pl-en">subarray</span>(b,b<span class="pl-k">+</span>c),a)},<span class="pl-en">K</span><span class="pl-k">:</span><span class="pl-k">function</span>(<span class="pl-smi">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">2147418112</span><span class="pl-k">&lt;</span>a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-k">var</span> b<span class="pl-k">=</span><span class="pl-c1">Math</span>.<span class="pl-c1">max</span>(<span class="pl-en">Ja</span>(),<span class="pl-c1">16777216</span>);b<span class="pl-k">&lt;</span>a;)<span class="pl-c1">536870912</span><span class="pl-k">&gt;=</span>b<span class="pl-k">?</span>b<span class="pl-k">=</span><span class="pl-en">$a</span>(<span class="pl-c1">2</span><span class="pl-k">*</span>b)<span class="pl-k">:</span>b<spa
